{"/2019/03/04/recursive-sql-recipes/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Robert","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/365/823/867/664/496/original/5a56a58ddc9aeda0.jpg","url":"https://fosstodon.org/@rrwo"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109365823867664496","published":null,"wm-received":"2022-12-01T13:07:56Z","wm-id":1572409,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109365823867664496","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"smcn üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åøüáµüá≠","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/304/672/248/519/811/original/8e84a9576b9f8eb2.jpg","url":"https://fosstodon.org/@smcn"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109304672248519811","published":null,"wm-received":"2022-12-01T13:08:57Z","wm-id":1572411,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109304672248519811","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Christine Lemmer-Webber","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/274/050/804/101/523/original/49f78f66d4224521.jpg","url":"https://octodon.social/@cwebber"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109274050804101523","published":null,"wm-received":"2022-12-01T14:37:53Z","wm-id":1572482,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109274050804101523","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Devin Prater","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://tweesecake.social/@devinprater"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109336205615008232","published":null,"wm-received":"2022-12-01T16:10:41Z","wm-id":1572519,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109336205615008232","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Akib Azmain Turja","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://hostux.social/@akib"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109309699960105764","published":null,"wm-received":"2022-12-01T17:38:36Z","wm-id":1572549,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109309699960105764","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ùôøùöíùö°ùöéùöïùöäùöùùöéùöç ùîΩùïÄùïäùïã","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/329/872/634/117/885/original/f888f041ffebd205.png","url":"https://fosstodon.org/@pixelatedfist"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109329872634117885","published":null,"wm-received":"2022-12-01T21:28:40Z","wm-id":1572745,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109329872634117885","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"","photo":"","url":""},"url":"https://www.mybooam.tech/news/22621/2020/05/12/a-recipe-is-just-a-directed-acyclic-graph/","published":"2020-05-12T00:00:00","wm-received":"2020-05-12T20:36:01Z","wm-id":795482,"wm-source":"https://www.mybooam.tech/news/22621/2020/05/12/a-recipe-is-just-a-directed-acyclic-graph/","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"pingback","name":"A recipe is just a directed acyclic graph","content":{"html":"<a href=\"http://news.ycombinator.com/submitlink?u=https%3A%2F%2Fwww.mybooam.tech%2Fnews%2F22621%2F2020%2F05%2F12%2Fa-recipe-is-just-a-directed-acyclic-graph%2F&amp;t=A+recipe+is+just+a+directed+acyclic+graph\">\n<img src=\"https://image.ibb.co/hbeWwz/hn.jpg\" alt=\"hn.jpg\" /><br /><span>Send to HN</span>\n</a>\n\n<p>Written by <a href=\"https://bofh.org.uk/\"><span>Piers</span> <span>Cawley</span></a> on<br /><time datetime=\"2019-03-04T00:00:00Z0000\">2019-03-04</time></p><p>In <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs\">the last post</a> I handwaved the way I represented bakery formulae in the bakery database, so here‚Äôs a little more detail. It helps to think of a bakery formula as a node on a directed acyclic<br />\ngraph with weighted edges, where the weights are literally weights. Here‚Äôs the graph a for a  couple of products</p>\n<img src=\"https://bofh.org.uk/ox-hugo/formulae.svg\" alt=\"formulae.svg\" />\n<p>And here‚Äôs how we represent that in the database<br />\n:</p>\nname\ningredient\nformat\nSmall Seedy Malt\nSeedy Malt Dough\n0.63 kg\nSmall White Wild\nBasic White Sour\n0.63 kg\nBasic White Sour\nOrganic white flour\n2.00 kg\nBasic White Sour\nSea salt\n0.06 kg\nBasic White Sour\nWater\n1.10 kg\nBasic White Sour\n80% starter\n1.80 kg\nSeedy Malt Dough\n5 Seed Soaker\n4.00 kg\nSeedy Malt Dough\nWater\n3.80 kg\nSeedy Malt Dough\nSea salt\n0.22 kg\nSeedy Malt Dough\n80% starter\n3.60 kg\nSeedy Malt Dough\nOrganic light malthouse flour\n8.00 kg\n5 Seed Soaker\nWater\n1.20 kg\n5 Seed Soaker\n5 seed mix\n1.00 kg\nMother\nWater\n3.20 kg\nMother\nOrganic white flour\n4.00 kg\n\n<p>Suppose we have an order for 8 Small White loaves. We need to know how much starter to mix tonight. We know that we need 0.63 kg of dough for each loaf, so that‚Äôs a total of 5.04 kg of Basic White Sour. The formula for Basic White Sour makes a total of (1.10 + 1.80 + 0.06 + 2.00=4.96 mathrm{kg}) of dough. So we need to multiply each quantity in that formula by the weight of dough we need divided by the total weight of the recipe ((5.04/4.96=1.016)). This is straightforward enough for flour, water and salt, which are basic ingredients, but we‚Äôll need to do a similar calculation to work out how much flour and water we‚Äôll need to make (1.016 √ó 1.8=1.829 mathrm{kg}) of starter. You can see how this might become a little tedious.</p>\n<p>If I were going to be doing these calculations by hand, it would definitely pay me to normalize my intermediate formulae so they all made a total of 1 kg of stuff. But screw that, we have a computer, so we can make it do the work.</p>\n<p>I‚Äôm going to simplify things a little (the real database understands about dates, and we need to know a little more about recipes, products and ingredients than will fit in the <code>recipe_item</code> table that describes the graph) but this should give you an idea of the recursive queries that drive production planning.</p>\n<p>Let‚Äôs introduct a <code>production_order</code> table, where we stash our orders<br />\n:</p>\nproduct\nquantity\nSmall White Wild\n5\nSmall Seedy Malt\n5\n\n<p>And that‚Äôs all we need to fire off a recursive query<br />\n.</p>\n<pre><code><span>WITH</span> <span>RECURSIVE</span> po(product, quantity) <span>AS</span> (\n    <span>SELECT</span> <span>'Small White Wild'</span>, <span>5</span>\n  <span>UNION</span>\n    <span>SELECT</span> <span>'Large White Wild'</span>, <span>5</span>\n), rw(recipe, weight) <span>AS</span> (\n    <span>SELECT</span> recipe, <span>sum</span>(amount)\n      <span>FROM</span> bakehouse.recipe_item\n  <span>GROUP</span> <span>BY</span> recipe\n), job(product, ingredient, quantity) <span>AS</span> (\n    <span>SELECT</span> po.product,\n           ri.ingredient,\n           po.quantity <span>*</span> ri.amount\n      <span>FROM</span> po\n      <span>JOIN</span> bakehouse.recipe_item ri <span>ON</span> po.product <span>=</span> ri.recipe\n      <span>JOIN</span> rw <span>ON</span> ri.recipe <span>=</span> rw.recipe\n  <span>UNION</span>\n    <span>SELECT</span> job.ingredient, ri.ingredient, job.quantity <span>*</span> ri.amount <span>/</span> rw.weight\n      <span>FROM</span> job\n      <span>join</span> bakehouse.recipe_item ri <span>on</span> job.ingredient <span>=</span> ri.recipe\n      <span>join</span> rw <span>on</span> job.ingredient <span>=</span> rw.recipe\n)\n<span>SELECT</span> product formula, ingredient, ROUND(<span>sum</span>(quantity),<span>2</span>) quantity <span>from</span> job <span>group</span> <span>by</span> job.product, job.ingredient <span>order</span> <span>by</span> formula;\n</code></pre>\n<p>Which gives the following result:</p>\nformula\ningredient\nquantity\nBasic White Sour\nSea salt\n0.09\nBasic White Sour\nWater\n1.72\nBasic White Sour\nMother\n2.81\nBasic White Sour\nOrganic white flour\n3.13\nLarge White Wild\nBasic White Sour\n4.65\nMother\nOrganic white flour\n1.56\nMother\nWater\n1.25\nSmall White Wild\nBasic White Sour\n3.10\n\n<p>A quick sanity check seems to show this is correct (we‚Äôre making 7.75kg of Basic White Sour, which tallies with the weights needed to make the loaves).<br />\nSo what‚Äôs going on in the query? In SQL, <code>WITH</code> is a way of giving names to your intermediate results, akin to <code>let</code> in a Lisp. We fake up a table to hold our production orders (<code>po</code>) and the <code>rw</code> clause is totals the weights of all our recipes (in the real database, it‚Äôs a view). The magic really starts to happen when you use the <code>WITH RECURSIVE</code> form. With <code>RECURSIVE</code> in play, the last query is treated differently. Instead of being a simple two part <code>UNION</code> what happens is that we first run:</p>\n<pre><code><span>SELECT</span> po.product, ri.ingredient, po.quantity <span>*</span> ri.amount\n  <span>FROM</span> po\n  <span>JOIN</span> bakehouse.recipe_item ri <span>on</span> po.product <span>=</span> ri.recipe\n  <span>JOIN</span> rw <span>on</span> ri.recipe <span>=</span> rw.recipe\n</code></pre>\n<p>and call the results <code>job</code> and then run the second query, adding any extra rows generated to the results, and repeating that query until the result set stops growing. If we didn‚Äôt have <code>WITH RECURSIVE</code> available, and we knew the maximum depth of recursion we would need, we could fake it by making a bunch of intermediate clauses in our <code>WITH</code>. In fact, until I worked out how <code>WITH RECURSIVE</code> works, that‚Äôs exactly what I did.</p>\n<p>Have you spotted the mistake? I didn‚Äôt, until a few bakes when horribly wrong.</p>\n<p>Here‚Äôs what happens when we have an order for 3 small loaves and two large ones</p>\nformula\ningredient\nquantity\nBasic White Sour\nSea salt\n0.02\nBasic White Sour\nWater\n0.41\nBasic White Sour\nMother\n0.68\nBasic White Sour\nOrganic white flour\n0.75\nLarge White Wild\nBasic White Sour\n1.86\nMother\nOrganic white flour\n0.38\nMother\nWater\n0.30\nSmall White Wild\nBasic White Sour\n1.86\n\n<p>We‚Äôre only making 1.86 kg of dough? What‚Äôs going on?</p>\n<p>It turns out that the way a <code>UNION</code> works is akin to doing <code>SELECT DISTINCT</code> on the combined table, so it selects only unique rows. When two orders end up requiring exactly the same amount of the ‚Äòsame‚Äô dough, they get smashed together and we lose half the weight. This is not ideal.<br />\nI fixed it by adding a ‚Äòpath‚Äô to the query, keeping track of how we arrived at a particular formula. Something like:</p>\n<pre><code><span>WITH</span> <span>RECURSIVE</span> po(product, quantity) <span>AS</span> (\n    <span>SELECT</span> <span>'Small White Wild'</span>, <span>3</span>\n  <span>UNION</span>\n    <span>SELECT</span> <span>'Large White Wild'</span>, <span>2</span>\n), rw(recipe, weight) <span>AS</span> (\n    <span>SELECT</span> recipe, <span>sum</span>(amount)\n      <span>FROM</span> bakehouse.recipe_item\n  <span>GROUP</span> <span>BY</span> recipe\n), job(path, product, ingredient, quantity) <span>AS</span> (\n    <span>SELECT</span> po.product,\n           po.product,\n           ri.ingredient,\n           po.quantity <span>*</span> ri.amount\n      <span>FROM</span> po\n      <span>JOIN</span> bakehouse.recipe_item ri <span>ON</span> po.product <span>=</span> ri.recipe\n      <span>JOIN</span> rw <span>ON</span> ri.recipe <span>=</span> rw.recipe\n  <span>UNION</span>\n    <span>SELECT</span> job.path <span>||</span> <span>'.'</span> <span>||</span> job.ingredient,\n           job.ingredient,\n           ri.ingredient,\n           job.quantity <span>*</span> ri.amount <span>/</span> rw.weight\n      <span>FROM</span> job\n      <span>join</span> bakehouse.recipe_item ri <span>on</span> job.ingredient <span>=</span> ri.recipe\n      <span>join</span> rw <span>on</span> job.ingredient <span>=</span> rw.recipe\n)\n<span>SELECT</span> product formula, ingredient, round(<span>sum</span>(quantity),<span>2</span>) weight <span>from</span> job <span>group</span> <span>by</span> formula, ingredient <span>order</span> <span>by</span> formula;\n</code></pre>\n<p>This query gives us:</p>\nformula\ningredient\nweight\nBasic White Sour\nSea salt\n0.05\nBasic White Sour\nWater\n0.83\nBasic White Sour\nMother\n1.35\nBasic White Sour\nOrganic white flour\n1.50\nLarge White Wild\nBasic White Sour\n1.86\nMother\nOrganic white flour\n0.75\nMother\nWater\n0.60\nSmall White Wild\nBasic White Sour\n1.86\n\n<p>This time we‚Äôre making 3.74 kg of dough, which is right.</p>\n<p>In order to see what‚Äôs going on, we can change the final <code>SELECT</code> to <code>SELECT formula, path, ingredient, round(quantity,2) weight FROM job</code>, and now we get:</p>\nformula\npath\ningredient\nweight\nLarge White Wild\nLarge White Wild\nBasic White Sour\n1.86\nBasic White Sour\nLarge White Wild.Basic White Sour\nMother\n0.68\nBasic White Sour\nLarge White Wild.Basic White Sour\nOrganic white flour\n0.75\nBasic White Sour\nLarge White Wild.Basic White Sour\nWater\n0.41\nBasic White Sour\nLarge White Wild.Basic White Sour\nSea salt\n0.02\nMother\nLarge White Wild.Basic White Sour.Mother\nWater\n0.30\nMother\nLarge White Wild.Basic White Sour.Mother\nOrganic white flour\n0.38\nSmall White Wild\nSmall White Wild\nBasic White Sour\n1.86\nBasic White Sour\nSmall White Wild.Basic White Sour\nOrganic white flour\n0.75\nBasic White Sour\nSmall White Wild.Basic White Sour\nSea salt\n0.02\nBasic White Sour\nSmall White Wild.Basic White Sour\nWater\n0.41\nBasic White Sour\nSmall White Wild.Basic White Sour\nMother\n0.68\nMother\nSmall White Wild.Basic White Sour.Mother\nOrganic white flour\n0.38\nMother\nSmall White Wild.Basic White Sour.Mother\nWater\n0.30\n\n<p>Which shows that we‚Äôre considering two lots of Basic White Sour with exactly the same weights, but we (and more importantly, the database engine) know that they‚Äôre distinct amounts because we get to them through different routes. Hurrah! The problem is solved and we can accurately work out what we should be mixing.</p>\n<h2>What‚Äôs still missing</h2>\n<p>As a baker, I know  if I‚Äôve got an order for bread on Friday, then I need to mix the starters on Wednesday night, then spend Tuesday mixing, fermenting and shaping the loaves, which will spend the night in the retarder ready to be baked at 4 on Friday morning. But the schema I‚Äôve outlined here doesn‚Äôt. In my full bakehouse schema, I have a few extra tables which hold timing data and such. In particular, I have a <code>product</code> table, which knows about everything I sell. This table knows holds info about how many I can make per hour of work and the bake time and temperature. Then there‚Äôs a <code>recipe</code> table which holds information about how long a formula needs to rest<br />\n. The real queries take this into account to allow us to work back from the <code>due_date</code> of a real order to the day we need to do the work. If you want to dig into how I handle dates  you can check out the repository at <a href=\"https://github.com/pdcawley/bakehouse/\">https://github.com/pdcawley/bakehouse/</a>.</p>\n<p><a href=\"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/\">Read More</a></p>","text":"Send to HN\n\n\nWritten by Piers Cawley on\n2019-03-04In the last post I handwaved the way I represented bakery formulae in the bakery database, so here‚Äôs a little more detail. It helps to think of a bakery formula as a node on a directed acyclic\n\ngraph with weighted edges, where the weights are literally weights. Here‚Äôs the graph a for a  couple of products\nAnd here‚Äôs how we represent that in the database\n\n:\nname\ningredient\nformat\nSmall Seedy Malt\nSeedy Malt Dough\n0.63 kg\nSmall White Wild\nBasic White Sour\n0.63 kg\nBasic White Sour\nOrganic white flour\n2.00 kg\nBasic White Sour\nSea salt\n0.06 kg\nBasic White Sour\nWater\n1.10 kg\nBasic White Sour\n80% starter\n1.80 kg\nSeedy Malt Dough\n5 Seed Soaker\n4.00 kg\nSeedy Malt Dough\nWater\n3.80 kg\nSeedy Malt Dough\nSea salt\n0.22 kg\nSeedy Malt Dough\n80% starter\n3.60 kg\nSeedy Malt Dough\nOrganic light malthouse flour\n8.00 kg\n5 Seed Soaker\nWater\n1.20 kg\n5 Seed Soaker\n5 seed mix\n1.00 kg\nMother\nWater\n3.20 kg\nMother\nOrganic white flour\n4.00 kg\n\nSuppose we have an order for 8 Small White loaves. We need to know how much starter to mix tonight. We know that we need 0.63 kg of dough for each loaf, so that‚Äôs a total of 5.04 kg of Basic White Sour. The formula for Basic White Sour makes a total of (1.10 + 1.80 + 0.06 + 2.00=4.96 mathrm{kg}) of dough. So we need to multiply each quantity in that formula by the weight of dough we need divided by the total weight of the recipe ((5.04/4.96=1.016)). This is straightforward enough for flour, water and salt, which are basic ingredients, but we‚Äôll need to do a similar calculation to work out how much flour and water we‚Äôll need to make (1.016 √ó 1.8=1.829 mathrm{kg}) of starter. You can see how this might become a little tedious.\nIf I were going to be doing these calculations by hand, it would definitely pay me to normalize my intermediate formulae so they all made a total of 1 kg of stuff. But screw that, we have a computer, so we can make it do the work.\nI‚Äôm going to simplify things a little (the real database understands about dates, and we need to know a little more about recipes, products and ingredients than will fit in the recipe_item table that describes the graph) but this should give you an idea of the recursive queries that drive production planning.\nLet‚Äôs introduct a production_order table, where we stash our orders\n\n:\nproduct\nquantity\nSmall White Wild\n5\nSmall Seedy Malt\n5\n\nAnd that‚Äôs all we need to fire off a recursive query\n\n.\nWITH RECURSIVE po(product, quantity) AS (\n    SELECT 'Small White Wild', 5\n  UNION\n    SELECT 'Large White Wild', 5\n), rw(recipe, weight) AS (\n    SELECT recipe, sum(amount)\n      FROM bakehouse.recipe_item\n  GROUP BY recipe\n), job(product, ingredient, quantity) AS (\n    SELECT po.product,\n           ri.ingredient,\n           po.quantity * ri.amount\n      FROM po\n      JOIN bakehouse.recipe_item ri ON po.product = ri.recipe\n      JOIN rw ON ri.recipe = rw.recipe\n  UNION\n    SELECT job.ingredient, ri.ingredient, job.quantity * ri.amount / rw.weight\n      FROM job\n      join bakehouse.recipe_item ri on job.ingredient = ri.recipe\n      join rw on job.ingredient = rw.recipe\n)\nSELECT product formula, ingredient, ROUND(sum(quantity),2) quantity from job group by job.product, job.ingredient order by formula;\n\nWhich gives the following result:\nformula\ningredient\nquantity\nBasic White Sour\nSea salt\n0.09\nBasic White Sour\nWater\n1.72\nBasic White Sour\nMother\n2.81\nBasic White Sour\nOrganic white flour\n3.13\nLarge White Wild\nBasic White Sour\n4.65\nMother\nOrganic white flour\n1.56\nMother\nWater\n1.25\nSmall White Wild\nBasic White Sour\n3.10\n\nA quick sanity check seems to show this is correct (we‚Äôre making 7.75kg of Basic White Sour, which tallies with the weights needed to make the loaves).\n\nSo what‚Äôs going on in the query? In SQL, WITH is a way of giving names to your intermediate results, akin to let in a Lisp. We fake up a table to hold our production orders (po) and the rw clause is totals the weights of all our recipes (in the real database, it‚Äôs a view). The magic really starts to happen when you use the WITH RECURSIVE form. With RECURSIVE in play, the last query is treated differently. Instead of being a simple two part UNION what happens is that we first run:\nSELECT po.product, ri.ingredient, po.quantity * ri.amount\n  FROM po\n  JOIN bakehouse.recipe_item ri on po.product = ri.recipe\n  JOIN rw on ri.recipe = rw.recipe\n\nand call the results job and then run the second query, adding any extra rows generated to the results, and repeating that query until the result set stops growing. If we didn‚Äôt have WITH RECURSIVE available, and we knew the maximum depth of recursion we would need, we could fake it by making a bunch of intermediate clauses in our WITH. In fact, until I worked out how WITH RECURSIVE works, that‚Äôs exactly what I did.\nHave you spotted the mistake? I didn‚Äôt, until a few bakes when horribly wrong.\nHere‚Äôs what happens when we have an order for 3 small loaves and two large ones\nformula\ningredient\nquantity\nBasic White Sour\nSea salt\n0.02\nBasic White Sour\nWater\n0.41\nBasic White Sour\nMother\n0.68\nBasic White Sour\nOrganic white flour\n0.75\nLarge White Wild\nBasic White Sour\n1.86\nMother\nOrganic white flour\n0.38\nMother\nWater\n0.30\nSmall White Wild\nBasic White Sour\n1.86\n\nWe‚Äôre only making 1.86 kg of dough? What‚Äôs going on?\nIt turns out that the way a UNION works is akin to doing SELECT DISTINCT on the combined table, so it selects only unique rows. When two orders end up requiring exactly the same amount of the ‚Äòsame‚Äô dough, they get smashed together and we lose half the weight. This is not ideal.\n\nI fixed it by adding a ‚Äòpath‚Äô to the query, keeping track of how we arrived at a particular formula. Something like:\nWITH RECURSIVE po(product, quantity) AS (\n    SELECT 'Small White Wild', 3\n  UNION\n    SELECT 'Large White Wild', 2\n), rw(recipe, weight) AS (\n    SELECT recipe, sum(amount)\n      FROM bakehouse.recipe_item\n  GROUP BY recipe\n), job(path, product, ingredient, quantity) AS (\n    SELECT po.product,\n           po.product,\n           ri.ingredient,\n           po.quantity * ri.amount\n      FROM po\n      JOIN bakehouse.recipe_item ri ON po.product = ri.recipe\n      JOIN rw ON ri.recipe = rw.recipe\n  UNION\n    SELECT job.path || '.' || job.ingredient,\n           job.ingredient,\n           ri.ingredient,\n           job.quantity * ri.amount / rw.weight\n      FROM job\n      join bakehouse.recipe_item ri on job.ingredient = ri.recipe\n      join rw on job.ingredient = rw.recipe\n)\nSELECT product formula, ingredient, round(sum(quantity),2) weight from job group by formula, ingredient order by formula;\n\nThis query gives us:\nformula\ningredient\nweight\nBasic White Sour\nSea salt\n0.05\nBasic White Sour\nWater\n0.83\nBasic White Sour\nMother\n1.35\nBasic White Sour\nOrganic white flour\n1.50\nLarge White Wild\nBasic White Sour\n1.86\nMother\nOrganic white flour\n0.75\nMother\nWater\n0.60\nSmall White Wild\nBasic White Sour\n1.86\n\nThis time we‚Äôre making 3.74 kg of dough, which is right.\nIn order to see what‚Äôs going on, we can change the final SELECT to SELECT formula, path, ingredient, round(quantity,2) weight FROM job, and now we get:\nformula\npath\ningredient\nweight\nLarge White Wild\nLarge White Wild\nBasic White Sour\n1.86\nBasic White Sour\nLarge White Wild.Basic White Sour\nMother\n0.68\nBasic White Sour\nLarge White Wild.Basic White Sour\nOrganic white flour\n0.75\nBasic White Sour\nLarge White Wild.Basic White Sour\nWater\n0.41\nBasic White Sour\nLarge White Wild.Basic White Sour\nSea salt\n0.02\nMother\nLarge White Wild.Basic White Sour.Mother\nWater\n0.30\nMother\nLarge White Wild.Basic White Sour.Mother\nOrganic white flour\n0.38\nSmall White Wild\nSmall White Wild\nBasic White Sour\n1.86\nBasic White Sour\nSmall White Wild.Basic White Sour\nOrganic white flour\n0.75\nBasic White Sour\nSmall White Wild.Basic White Sour\nSea salt\n0.02\nBasic White Sour\nSmall White Wild.Basic White Sour\nWater\n0.41\nBasic White Sour\nSmall White Wild.Basic White Sour\nMother\n0.68\nMother\nSmall White Wild.Basic White Sour.Mother\nOrganic white flour\n0.38\nMother\nSmall White Wild.Basic White Sour.Mother\nWater\n0.30\n\nWhich shows that we‚Äôre considering two lots of Basic White Sour with exactly the same weights, but we (and more importantly, the database engine) know that they‚Äôre distinct amounts because we get to them through different routes. Hurrah! The problem is solved and we can accurately work out what we should be mixing.\nWhat‚Äôs still missing\nAs a baker, I know  if I‚Äôve got an order for bread on Friday, then I need to mix the starters on Wednesday night, then spend Tuesday mixing, fermenting and shaping the loaves, which will spend the night in the retarder ready to be baked at 4 on Friday morning. But the schema I‚Äôve outlined here doesn‚Äôt. In my full bakehouse schema, I have a few extra tables which hold timing data and such. In particular, I have a product table, which knows about everything I sell. This table knows holds info about how many I can make per hour of work and the bake time and temperature. Then there‚Äôs a recipe table which holds information about how long a formula needs to rest\n\n. The real queries take this into account to allow us to work back from the due_date of a real order to the day we need to do the work. If you want to dig into how I handle dates  you can check out the repository at https://github.com/pdcawley/bakehouse/.\nRead More"},"mention-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://www.mybooam.tech/news/22621/2020/05/12/a-recipe-is-just-a-directed-acyclic-graph/"}}],"repost-of":[{"type":"entry","author":{"type":"card","name":"Christine Lemmer-Webber","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/274/050/804/101/523/original/49f78f66d4224521.jpg","url":"https://octodon.social/@cwebber"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109274050804101523","published":null,"wm-received":"2022-12-01T14:37:54Z","wm-id":1572483,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109274050804101523","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Devin Prater","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://tweesecake.social/@devinprater"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109336205615008232","published":null,"wm-received":"2022-12-01T16:11:41Z","wm-id":1572520,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109336205615008232","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Akib Azmain Turja","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://hostux.social/@akib"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109309699960105764","published":null,"wm-received":"2022-12-01T17:39:38Z","wm-id":1572552,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109309699960105764","wm-target":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/03/04/recursive-sql-recipes/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2019/02/25/baking-with-emacs/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Robert","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/365/823/867/664/496/original/5a56a58ddc9aeda0.jpg","url":"https://fosstodon.org/@rrwo"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109365823867664496","published":null,"wm-received":"2022-12-01T13:07:56Z","wm-id":1572408,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109365823867664496","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"smcn üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åøüáµüá≠","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/304/672/248/519/811/original/8e84a9576b9f8eb2.jpg","url":"https://fosstodon.org/@smcn"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109304672248519811","published":null,"wm-received":"2022-12-01T13:07:57Z","wm-id":1572410,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109304672248519811","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Christine Lemmer-Webber","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/274/050/804/101/523/original/49f78f66d4224521.jpg","url":"https://octodon.social/@cwebber"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109274050804101523","published":null,"wm-received":"2022-12-01T14:36:53Z","wm-id":1572480,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109274050804101523","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Devin Prater","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://tweesecake.social/@devinprater"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109336205615008232","published":null,"wm-received":"2022-12-01T16:10:40Z","wm-id":1572518,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109336205615008232","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Akib Azmain Turja","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://hostux.social/@akib"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109309699960105764","published":null,"wm-received":"2022-12-01T17:38:37Z","wm-id":1572550,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109309699960105764","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ùôøùöíùö°ùöéùöïùöäùöùùöéùöç ùîΩùïÄùïäùïã","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/329/872/634/117/885/original/f888f041ffebd205.png","url":"https://fosstodon.org/@pixelatedfist"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#favorited-by-109329872634117885","published":null,"wm-received":"2022-12-01T21:28:39Z","wm-id":1572744,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109329872634117885","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Thomas üçÑ #masks4all","photo":"https://avatars.webmention.io/pbs.twimg.com/a96922bfc0e8205038ac0aa785dc9c1ed6d0aaa806202ec27508679724f5af8e.jpg","url":"https://twitter.com/__tosh"},"url":"https://twitter.com/__tosh/status/1260296104140312577","published":"2020-05-12T19:49:41+00:00","wm-received":"2020-05-12T20:41:10Z","wm-id":795483,"wm-source":"https://brid-gy.appspot.com/post/twitter/pdcawley/1260296104140312577","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"‚ÄúOnce you start to see your computing environment as truly soft and malleable, you can do amazing things, assisted by a computer that is truly yours.‚Äù\n\n<a href=\"https://twitter.com/pdcawley\">@pdcawley</a> on running a üçû bakery w/ emacs and postgresql\n\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"‚ÄúOnce you start to see your computing environment as truly soft and malleable, you can do amazing things, assisted by a computer that is truly yours.‚Äù\n\n@pdcawley on running a üçû bakery w/ emacs and postgresql\n\nbofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"HsiangHui","photo":"https://avatars.webmention.io/pbs.twimg.com/5d3a7229cea85b181e940954d46bfa6f16898b0262dc34d7086f3b6b406849ad.jpg","url":"https://twitter.com/hsianghui"},"url":"https://twitter.com/hsianghui/status/1261472198717345792","published":"2020-05-16T01:43:03+00:00","wm-received":"2020-05-16T02:10:48Z","wm-id":796936,"wm-source":"https://brid-gy.appspot.com/post/twitter/pdcawley/1261472198717345792","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a bakery on Emacs and PostgreSQL -- Just a Summary <a href=\"https://twitter.com/search?q=%23hn\">#hn</a> <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a bakery on Emacs and PostgreSQL -- Just a Summary #hn bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Carlos Neira","photo":"https://avatars.webmention.io/pbs.twimg.com/a3b06b068e68f77a6cac1799a00cc2a7e555434e2392c65e055b3f83af40403f.jpg","url":"https://twitter.com/CarlosN26157061"},"url":"https://twitter.com/CarlosN26157061/status/1267798559233060864","published":"2020-06-02T12:41:45+00:00","wm-received":"2020-06-02T16:41:40Z","wm-id":805040,"wm-source":"https://brid-gy.appspot.com/post/twitter/pdcawley/1267798559233060864","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"","photo":"","url":""},"url":"https://your.cheer.id/running-a-bakery-on-emacs-and-postgresq/","published":null,"wm-received":"2020-11-22T00:04:30Z","wm-id":919445,"wm-source":"https://your.cheer.id/running-a-bakery-on-emacs-and-postgresq/","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"pingback","mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Aulis Vainionp√§√§","photo":"https://avatars.webmention.io/pbs.twimg.com/6acb2e61660201fde5e092c3103484df18bc3f933e216c1e94cb496b07581b21.jpg","url":"https://twitter.com/AulisVainionpaa"},"url":"https://twitter.com/AulisVainionpaa/status/1367240023272263683","published":"2021-03-03T22:26:38+00:00","wm-received":"2021-03-04T07:09:22Z","wm-id":1055908,"wm-source":"https://brid.gy/post/twitter/pdcawley/1367240023272263683","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Mielenkiintoista lukea vanha juttu tyypist√§, joka py√∂ritt√§√§ Emacsin avulla leipomoa.\n\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Mielenkiintoista lukea vanha juttu tyypist√§, joka py√∂ritt√§√§ Emacsin avulla leipomoa.\n\nbofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"","photo":"","url":""},"url":"https://fullstackfeed.com/running-a-bakery-on-emacs-and-postgresql/","published":null,"wm-received":"2021-03-21T17:30:21Z","wm-id":1085571,"wm-source":"https://fullstackfeed.com/running-a-bakery-on-emacs-and-postgresql/","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"pingback","mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Angsuman Chakraborty","photo":"https://avatars.webmention.io/pbs.twimg.com/494c7f1285a22807d72209ceeda7cb1ff8a4c9840751c5ca69597a784f71255d.jpg","url":"https://twitter.com/angsuman"},"url":"https://twitter.com/angsuman/status/1373692318868414464","published":"2021-03-21T17:45:45+00:00","wm-received":"2021-03-21T17:51:32Z","wm-id":1085589,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373692318868414464","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"HN Front Page","photo":"https://avatars.webmention.io/pbs.twimg.com/f62929d0a92700ab725c84e5ab3bef64ae5cfc1d462934d3eb81ae6559c63412.png","url":"https://twitter.com/hn_frontpage"},"url":"https://twitter.com/hn_frontpage/status/1373690026832302080","published":"2021-03-21T17:36:38+00:00","wm-received":"2021-03-21T17:51:32Z","wm-id":1085590,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373690026832302080","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL\nL: <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>\nC: <a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL\nL: bofh.org.uk/2019/02/25/bak‚Ä¶\nC: news.ycombinator.com/item?id=265316‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News","photo":"https://avatars.webmention.io/pbs.twimg.com/bd356e0cf7174aed2286323e5c0af0fbd2ba52cddb77eadd4520eb5f7f4a27b8.png","url":"https://twitter.com/HNTweets"},"url":"https://twitter.com/HNTweets/status/1373690887839088643","published":"2021-03-21T17:40:04+00:00","wm-received":"2021-03-21T17:51:33Z","wm-id":1085591,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373690887839088643","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL: <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a> Comments: <a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL: bofh.org.uk/2019/02/25/bak‚Ä¶ Comments: news.ycombinator.com/item?id=265316‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Thomas Schranz üçÑ","photo":"https://avatars.webmention.io/pbs.twimg.com/ea7b2af56210e2be7c4e70ea0696f9088a963dbde03d4ff74c9657b71a859f83.jpg","url":"https://twitter.com/__tosh"},"url":"https://twitter.com/__tosh/status/1373699022565806081","published":"2021-03-21T18:12:23+00:00","wm-received":"2021-03-21T18:45:56Z","wm-id":1085608,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373699022565806081","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","photo":["https://pbs.twimg.com/media/ExBb-iMXEAIKfzK.jpg"],"content":{"html":"üßëüèº‚Äçüç≥üçû Running a bakery on Emacs and PostgreSQL\n\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>\n\nby <a href=\"https://twitter.com/pdcawley\">@pdcawley</a>","text":"üßëüèº‚Äçüç≥üçû Running a bakery on Emacs and PostgreSQL\n\nbofh.org.uk/2019/02/25/bak‚Ä¶\n\nby @pdcawley"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"HackerNewsTop10","photo":"https://avatars.webmention.io/pbs.twimg.com/4e5aa34303522645198859652b35d618aba11e86363fc63b03ad229df9caae33.jpg","url":"https://twitter.com/HackerNewsTop10"},"url":"https://twitter.com/HackerNewsTop10/status/1373697201680048130","published":"2021-03-21T18:05:09+00:00","wm-received":"2021-03-21T18:45:57Z","wm-id":1085609,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373697201680048130","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL\nLink: <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>\nComments: <a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL\nLink: bofh.org.uk/2019/02/25/bak‚Ä¶\nComments: news.ycombinator.com/item?id=265316‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Joe Jones","photo":"https://avatars.webmention.io/pbs.twimg.com/75505eb3feed88c9c6ff69a691fc83d32163189c705467e0a24c4821f68ef7f7.jpg","url":"https://twitter.com/Onlypizza1"},"url":"https://twitter.com/Onlypizza1/status/1373716150333345797","published":"2021-03-21T19:20:27+00:00","wm-received":"2021-03-21T19:44:10Z","wm-id":1085638,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373716150333345797","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News 20","photo":"https://avatars.webmention.io/pbs.twimg.com/8e60707bed6a1e0c94948f99e8f76c282036cdd4c1a086fc034ef6c9371c3af6.jpg","url":"https://twitter.com/betterhn20"},"url":"https://twitter.com/betterhn20/status/1373707628455591950","published":"2021-03-21T18:46:35+00:00","wm-received":"2021-03-21T19:44:10Z","wm-id":1085639,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373707628455591950","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a> (<a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a>)","text":"Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶ (news.ycombinator.com/item?id=265316‚Ä¶)"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker NewsË®ò‰∫ãÈ°åÊó•Êú¨Ë™ûÁøªË®≥","photo":"https://avatars.webmention.io/pbs.twimg.com/f8a17e3c35e04435df2233df37ab56ed99e27dba6c5818da055c76d027d6f5c1.jpg","url":"https://twitter.com/hackernewsj"},"url":"https://twitter.com/hackernewsj/status/1373729358481874951","published":"2021-03-21T20:12:56+00:00","wm-received":"2021-03-21T20:37:25Z","wm-id":1085661,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373729358481874951","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Emacs„Å®PostgreSQL„Åß„Éë„É≥Â±ã„ÇíÁµåÂñ∂„Åô„Çã <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Emacs„Å®PostgreSQL„Åß„Éë„É≥Â±ã„ÇíÁµåÂñ∂„Åô„Çã bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News","photo":"https://avatars.webmention.io/pbs.twimg.com/1263a7a841ecd37d6232133ab1079c1da854eec25b338a04295a54b873fc8097.png","url":"https://twitter.com/newsycombinator"},"url":"https://twitter.com/newsycombinator/status/1373726264511582211","published":"2021-03-21T20:00:38+00:00","wm-received":"2021-03-21T20:37:34Z","wm-id":1085662,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373726264511582211","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"nixCraft","photo":"https://avatars.webmention.io/pbs.twimg.com/328264110d227f223802971b45e8d820b32b248cc4bcc94e10d8e3dabd541642.jpg","url":"https://twitter.com/nixcraft"},"url":"https://twitter.com/nixcraft/status/1373733189047357444","published":"2021-03-21T20:28:09+00:00","wm-received":"2021-03-21T20:37:54Z","wm-id":1085663,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373733189047357444","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News 50","photo":"https://avatars.webmention.io/pbs.twimg.com/f8d8ee4a782e24369ccf5fcc82fef22511acb2ee6fab3bc84334777ceccd51e5.jpg","url":"https://twitter.com/betterhn50"},"url":"https://twitter.com/betterhn50/status/1373730268733915141","published":"2021-03-21T20:16:33+00:00","wm-received":"2021-03-21T20:37:59Z","wm-id":1085664,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373730268733915141","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a> (<a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a>)","text":"Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶ (news.ycombinator.com/item?id=265316‚Ä¶)"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News","photo":"https://avatars.webmention.io/pbs.twimg.com/1263a7a841ecd37d6232133ab1079c1da854eec25b338a04295a54b873fc8097.png","url":"https://twitter.com/newsycombinator"},"url":"https://twitter.com/newsycombinator/status/1373742234089230349","published":"2021-03-21T21:04:06+00:00","wm-received":"2021-03-21T21:28:29Z","wm-id":1085676,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373742234089230349","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL (2019) <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL (2019) bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Herr Kyber","photo":"https://avatars.webmention.io/pbs.twimg.com/0baaa8024d1919a25b6e24c2358cde68d41b41116552e1dc634dc9db4beb779c.jpg","url":"https://twitter.com/KyberHobo"},"url":"https://twitter.com/KyberHobo/status/1373743298767159304","published":"2021-03-21T21:08:19+00:00","wm-received":"2021-03-21T21:29:04Z","wm-id":1085677,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373743298767159304","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Jeder muss seine Br√∂tchen backen, daher verwundertes mich nicht, dass dieser Post an die Spitze von HN aufgegangen ist.\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Jeder muss seine Br√∂tchen backen, daher verwundertes mich nicht, dass dieser Post an die Spitze von HN aufgegangen ist.\nbofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Áî∞ÊâÄ Èßø‰Ωë | Shunsuke Tadokoro","photo":"https://avatars.webmention.io/pbs.twimg.com/3e0537f86a5888f85df2b323e0022e2ec1cfd260e51fc5654e17ad76c936fa3d.jpg","url":"https://twitter.com/todokr"},"url":"https://twitter.com/todokr/status/1373758186461700101","published":"2021-03-21T22:07:29+00:00","wm-received":"2021-03-21T22:17:20Z","wm-id":1085697,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373758186461700101","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Emacs„Å™„Çâ„Éë„É≥Â±ã„Å†„Å£„Å¶Èñã„Åë„Çã <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Emacs„Å™„Çâ„Éë„É≥Â±ã„Å†„Å£„Å¶Èñã„Åë„Çã bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hacker News 100+","photo":"https://avatars.webmention.io/pbs.twimg.com/e02d2898dc81a68424dd36a4e8781d51f444f5c706eb4ddfc8475d244331b5ef.jpg","url":"https://twitter.com/HackerNews100"},"url":"https://twitter.com/HackerNews100/status/1373766409478623234","published":"2021-03-21T22:40:10+00:00","wm-received":"2021-03-21T23:00:15Z","wm-id":1085711,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373766409478623234","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL (2019) <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Running a Bakery on Emacs and PostgreSQL (2019) bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"M157q News RSS","photo":"https://avatars.webmention.io/pbs.twimg.com/0f28c2ab2e7fa4ee47668e43d2e61fdb993fa046f8dcf6e89426c6d51d4ef4b1.jpg","url":"https://twitter.com/M157q_News_RSS"},"url":"https://twitter.com/M157q_News_RSS/status/1373767905532211200","published":"2021-03-21T22:46:06+00:00","wm-received":"2021-03-21T23:00:16Z","wm-id":1085712,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373767905532211200","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL (2019)\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>\nArticle URL: https://t.co/PvDcY1KRnw Comments URL: <a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a> Points: 100 # Comments: 28\n<a class=\"u-mention\" href=\"https://t.co/PvDcY1KRnw\"></a>","text":"Running a Bakery on Emacs and PostgreSQL (2019)\nbofh.org.uk/2019/02/25/bak‚Ä¶\nArticle URL: https://t.co/PvDcY1KRnw Comments URL: news.ycombinator.com/item?id=265316‚Ä¶ Points: 100 # Comments: 28"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jeremy Lu","photo":"https://avatars.webmention.io/pbs.twimg.com/4309754539e4b7efc50b0e762f37c31beaf9e42825f8f0a753c4dffe5aeae0ab.png","url":"https://twitter.com/thecat"},"url":"https://twitter.com/thecat/status/1373786498974162947","published":"2021-03-21T23:59:59+00:00","wm-received":"2021-03-22T00:47:42Z","wm-id":1085863,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373786498974162947","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Á≠âÁ≠â ÈñãÂÄãÈ∫µÂåÖÂ∫óË¶ÅÂÖàÊúÉ emacs + postgrsqlÔºÅÔºÅ(‰∏çËÉΩÁî® excel È†ÇÂ§ö airtable Â∞±Â•ΩÂóéÔºüüò¨\n\n<a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Á≠âÁ≠â ÈñãÂÄãÈ∫µÂåÖÂ∫óË¶ÅÂÖàÊúÉ emacs + postgrsqlÔºÅÔºÅ(‰∏çËÉΩÁî® excel È†ÇÂ§ö airtable Â∞±Â•ΩÂóéÔºüüò¨\n\nbofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"High S/N HN","photo":"https://avatars.webmention.io/pbs.twimg.com/e2fb344040ef7c92fad3764c11c4f91d40af172d206bbb14b86ef92b2d4e029c.png","url":"https://twitter.com/HighSNHN"},"url":"https://twitter.com/HighSNHN/status/1373922478259601417","published":"2021-03-22T09:00:19+00:00","wm-received":"2021-03-22T09:26:31Z","wm-id":1086842,"wm-source":"https://brid.gy/post/twitter/pdcawley/1373922478259601417","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Running a Bakery on Emacs and PostgreSQL (2019): <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a> ( <a href=\"https://news.ycombinator.com/item?id=26531660\">news.ycombinator.com/item?id=265316‚Ä¶</a> )","text":"Running a Bakery on Emacs and PostgreSQL (2019): bofh.org.uk/2019/02/25/bak‚Ä¶ ( news.ycombinator.com/item?id=265316‚Ä¶ )"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Yohan J. Rodr√≠guez","photo":"https://avatars.webmention.io/pbs.twimg.com/7e6f903bb1f4d6522292e6686c5090a87c87fbf9cae501f1495bc1262d7da966.jpg","url":"https://twitter.com/hasdid"},"url":"https://twitter.com/hasdid/status/1375942451618267136","published":"2021-03-27T22:46:58+00:00","wm-received":"2021-03-27T22:49:38Z","wm-id":1095310,"wm-source":"https://brid.gy/post/twitter/pdcawley/1375942451618267136","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"<a href=\"https://twitter.com/search?q=%23Tech\">#Tech</a>  <a href=\"https://twitter.com/search?q=%23Automated\">#Automated</a> | Running a Bakery on Emacs and PostgreSQL <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/?utm_source=hackernewsletter&amp;utm_medium=email&amp;utm_term=working\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\"></a>","text":"#Tech  #Automated | Running a Bakery on Emacs and PostgreSQL bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Yassine Serhrouchni","photo":"https://avatars.webmention.io/pbs.twimg.com/a6a08a8ef1dc51233a110d484e1e58c3c93646e71bc373975900781d185629f4.jpg","url":"https://twitter.com/coolyass"},"url":"https://twitter.com/coolyass/status/1482478412136595456","published":"2022-01-15T22:22:51+00:00","wm-received":"2022-01-16T07:04:29Z","wm-id":1332539,"wm-source":"https://brid.gy/post/twitter/pdcawley/1482478412136595456","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","content":{"html":"Je suis partiellement d'accord avec toi mais je ne r√©siste pas √† l'envie de te partager √ßa: <a href=\"https://bofh.org.uk/2019/02/25/baking-with-emacs/\">bofh.org.uk/2019/02/25/bak‚Ä¶</a>","text":"Je suis partiellement d'accord avec toi mais je ne r√©siste pas √† l'envie de te partager √ßa: bofh.org.uk/2019/02/25/bak‚Ä¶"},"mention-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"mention-of","wm-private":false}],"repost-of":[{"type":"entry","author":{"type":"card","name":"calvin","photo":"","url":"https://lobste.rs/u/calvin"},"url":"https://lobste.rs/s/dveyqi","published":null,"wm-received":"2022-03-27T04:25:17Z","wm-id":1369791,"wm-source":"https://lobste.rs/s/dveyqi","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Christine Lemmer-Webber","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/274/050/804/101/523/original/49f78f66d4224521.jpg","url":"https://octodon.social/@cwebber"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109274050804101523","published":null,"wm-received":"2022-12-01T14:36:53Z","wm-id":1572481,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109274050804101523","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Devin Prater","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://tweesecake.social/@devinprater"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109336205615008232","published":null,"wm-received":"2022-12-01T16:10:40Z","wm-id":1572517,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109336205615008232","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Akib Azmain Turja","photo":"https://mendeddrum.org/avatars/original/missing.png","url":"https://hostux.social/@akib"},"url":"https://mendeddrum.org/@pdcawley/109438438184832322#reblogged-by-109309699960105764","published":null,"wm-received":"2022-12-01T17:39:38Z","wm-id":1572551,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109438438184832322/109309699960105764","wm-target":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2019/02/25/baking-with-emacs/","wm-property":"repost-of","wm-private":false}],"other":[]},"/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Roger Peppe","photo":"https://avatars.webmention.io/pbs.twimg.com/0e5caa62f5343bcafa2700e9314b9446a294cbeb7fb5baf85305ae22c40a198a.png","url":"https://twitter.com/rogpeppe"},"url":"https://twitter.com/pdcawley/status/1326463503268519937#favorited-by-18683923","published":null,"wm-received":"2020-11-12T07:00:39Z","wm-id":907582,"wm-source":"https://brid-gy.appspot.com/like/twitter/pdcawley/1326463503268519937/18683923","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Marion Beet üá™üá∫ üï∑Ô∏è","photo":"https://avatars.webmention.io/pbs.twimg.com/a9942ee95412605f47c3f6fd8e5fd88c7cdb42d2418f56fbb46183a9db2f236a.jpg","url":"https://twitter.com/Knitronomicon"},"url":"https://twitter.com/pdcawley/status/1326463503268519937#favorited-by-58828115","published":null,"wm-received":"2020-11-12T07:01:10Z","wm-id":907584,"wm-source":"https://brid-gy.appspot.com/like/twitter/pdcawley/1326463503268519937/58828115","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Smylers","photo":"https://avatars.webmention.io/pbs.twimg.com/31639f2cb3fdb2af86a84d2ebea8c82a68befda0a1598b83eeb83e51e959c5e2.jpg","url":"https://twitter.com/Smylers2"},"url":"https://twitter.com/pdcawley/status/1507031241765396480#favorited-by-73154192","published":null,"wm-received":"2022-03-25T21:51:54Z","wm-id":1369164,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507031241765396480/73154192","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"David Gallows","photo":"https://avatars.webmention.io/pbs.twimg.com/e7b750d847ffdcfc174845aadc9196125b83647258a1789bb2b92b493d223e8b.jpg","url":"https://twitter.com/DavidGallows"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-877428607","published":null,"wm-received":"2022-03-25T21:51:57Z","wm-id":1369166,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/877428607","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Presistance","photo":"https://avatars.webmention.io/pbs.twimg.com/cdb5aa13967849c068eb5d999da8aa3dc7d2669b7421b5cf4e562c9d306c9baa.jpg","url":"https://twitter.com/preaction"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-23399752","published":null,"wm-received":"2022-03-25T21:51:59Z","wm-id":1369167,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/23399752","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"JustMunkee","photo":"https://avatars.webmention.io/pbs.twimg.com/49f0c7a02f37e0cbab04695b017643ce4cfe593e7eb59ed1638b55995a82caee.jpg","url":"https://twitter.com/OutdoorsPhoto"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-56788607","published":null,"wm-received":"2022-03-25T21:52:00Z","wm-id":1369168,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/56788607","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Megan Bendall","photo":"https://avatars.webmention.io/pbs.twimg.com/963a84a32feeceaab913e82e53586dfd5b03d77581154a2fdffc92d0a8e0e706.jpg","url":"https://twitter.com/Meganthebendall"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-700678119271829504","published":null,"wm-received":"2022-03-25T21:52:02Z","wm-id":1369169,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/700678119271829504","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"üåø Rory üåµ (they/them)","photo":"https://avatars.webmention.io/pbs.twimg.com/15fae9cd5705d2eeda26af1489c350025622de1e2e0dcf1d8b72822e4a9e264f.jpg","url":"https://twitter.com/geekinoverload"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-1099829151400411137","published":null,"wm-received":"2022-03-25T21:52:03Z","wm-id":1369170,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/1099829151400411137","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Peace For Asia","photo":"https://avatars.webmention.io/pbs.twimg.com/4caaa65bd4f72d9ce262e3c7a4ad09a9fc646ec1b1d41b19e3976c5839c1510b.jpg","url":"https://twitter.com/peaceforasia"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-63945854","published":null,"wm-received":"2022-03-25T21:52:05Z","wm-id":1369171,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/63945854","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Sa√Ød Chaara","photo":"https://avatars.webmention.io/pbs.twimg.com/2fa2f8480302a8a46ed3752908a512ebe67cff7efdb122d19fa38de4e0caa810.jpg","url":"https://twitter.com/said_sc"},"url":"https://twitter.com/pdcawley/status/1507012744683286539#favorited-by-1228257560","published":null,"wm-received":"2022-03-25T21:52:06Z","wm-id":1369172,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507012744683286539/1228257560","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Gizmo Mathboy","photo":"https://avatars.webmention.io/pbs.twimg.com/6e8f59250ff9a90bb96e95328801a297c1dc873c30eb29040638bf8b525e5184.jpg","url":"https://twitter.com/gizmomathboy"},"url":"https://twitter.com/pdcawley/status/1507031241765396480#favorited-by-41309638","published":null,"wm-received":"2022-03-25T21:52:22Z","wm-id":1369175,"wm-source":"https://brid.gy/like/twitter/pdcawley/1507031241765396480/41309638","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Andy Wingrave","photo":"https://avatars.webmention.io/pbs.twimg.com/1e9ee9845ab0bac936ae8787c2072f0677b7a553c302c14f033fbc30236f6d79.jpg","url":"https://twitter.com/andywingrave"},"url":"https://twitter.com/pdcawley/status/1515620582448148484#favorited-by-1177323530364567554","published":null,"wm-received":"2022-04-17T10:04:21Z","wm-id":1382409,"wm-source":"https://brid.gy/like/twitter/pdcawley/1515620582448148484/1177323530364567554","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"PRESENTA Platform","photo":"https://avatars.webmention.io/pbs.twimg.com/b7cc959150d5959f2644054e2314a836aeb065d0b9da6ecafb0e8cec7d8e1d0e.png","url":"https://twitter.com/PresentaSw"},"url":"https://twitter.com/pdcawley/status/1515620582448148484#favorited-by-1425876220604977161","published":null,"wm-received":"2022-04-19T06:48:18Z","wm-id":1383149,"wm-source":"https://brid.gy/like/twitter/pdcawley/1515620582448148484/1425876220604977161","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Patrick Rose","photo":"https://avatars.webmention.io/pbs.twimg.com/fc26e12bb3cc81387621feca773695c5773aee2d4d3e1e1a7b0715e448897a79.jpg","url":"https://twitter.com/DrugCrazed"},"url":"https://twitter.com/pdcawley/status/1524062540522790912#favorited-by-19738650","published":null,"wm-received":"2022-05-11T03:31:14Z","wm-id":1396065,"wm-source":"https://brid.gy/like/twitter/pdcawley/1524062540522790912/19738650","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"üá∫üá¶ Clare Graham üá∫üá¶","photo":"https://avatars.webmention.io/pbs.twimg.com/76eabaddc7f54c461a95e7ae40191a270939af8df1df1c270729ab51759f356f.jpg","url":"https://twitter.com/70cjg"},"url":"https://twitter.com/pdcawley/status/1562016789336412165#favorited-by-554304845","published":null,"wm-received":"2022-08-23T17:04:53Z","wm-id":1466395,"wm-source":"https://brid.gy/like/twitter/pdcawley/1562016789336412165/554304845","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Koos van den Hout","photo":"https://avatars.webmention.io/pbs.twimg.com/2f027051b07beea8241c07e3305be6a61c909a50abe81749fa472672b6e15a21.png","url":"https://twitter.com/khoos"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-19301166","published":null,"wm-received":"2022-10-28T23:01:06Z","wm-id":1546489,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/19301166","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"your #1 source for absurdist true crime üêçüëë üå∑","photo":"https://avatars.webmention.io/pbs.twimg.com/3d0c85ad4f089f16b4e51f1bd3f96ace9b0c4de84fef2b962eea359bcda9b3a7.jpg","url":"https://twitter.com/davidgerard"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-14723614","published":null,"wm-received":"2022-10-28T23:01:10Z","wm-id":1546490,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/14723614","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Neil S. Reddy. Writer.","photo":"https://avatars.webmention.io/pbs.twimg.com/8ae5b72fe7bf924b55bf6c1c2429a297db11a41320fad0b403534e0712b53c7b.jpg","url":"https://twitter.com/thistribe"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-166296855","published":null,"wm-received":"2022-10-28T23:01:10Z","wm-id":1546491,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/166296855","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Simon_Lucy","photo":"https://avatars.webmention.io/pbs.twimg.com/9e248565104602cdb39c37386c70ba446dca03c0dd1989dcda68c3aa5c4395fe.jpg","url":"https://twitter.com/Simon_Lucy"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-15078174","published":null,"wm-received":"2022-10-28T23:01:13Z","wm-id":1546492,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/15078174","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Abby Franquemont üá∫üá∏üáµüá™","photo":"https://avatars.webmention.io/pbs.twimg.com/28f575ac07576dd3273089febf06b60637a8f10d6ebab54db59a79e36c7cd0aa.jpg","url":"https://twitter.com/abbysyarns"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-19614458","published":null,"wm-received":"2022-10-28T23:01:14Z","wm-id":1546493,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/19614458","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"JohnBakerMusic","photo":"https://avatars.webmention.io/pbs.twimg.com/71f76f67f6034b22ecfe26e1414e89365952533eea499b1ac8885bf5c394b252.jpg","url":"https://twitter.com/JohnBakerFolk"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-1577380733341077510","published":null,"wm-received":"2022-10-28T23:01:16Z","wm-id":1546494,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/1577380733341077510","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Ian Norton üá™üá∫üè≥Ô∏è‚Äçüåà","photo":"https://avatars.webmention.io/pbs.twimg.com/063364ce6158e14b93781431091e168b1109733354a4585eb4722093148911f7.png","url":"https://twitter.com/idnorton"},"url":"https://twitter.com/pdcawley/status/1585905694053638144#favorited-by-256432815","published":null,"wm-received":"2022-10-28T23:01:17Z","wm-id":1546495,"wm-source":"https://brid.gy/like/twitter/pdcawley/1585905694053638144/256432815","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Four Larks Stu","photo":"https://avatars.webmention.io/mendeddrum.org/b927aad1de4735d43dc9cf85cd0935e44617da888ff2ed72f996a28a2a6599a4.png","url":"https://kolektiva.social/@fourlarks3d"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109368647781794002","published":null,"wm-received":"2022-11-20T12:56:21Z","wm-id":1564021,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109368647781794002","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Dr Nerdware","photo":"https://avatars.webmention.io/mendeddrum.org/18a12ef171ce77fc7b5b773f6c91f04d7720383bdc393b20bf40ffb4376b91a3.jpg","url":"https://infosec.exchange/@nerdware"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109335607140853811","published":null,"wm-received":"2022-11-20T12:56:22Z","wm-id":1564022,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109335607140853811","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jonathan H N Chin","photo":"https://avatars.webmention.io/mendeddrum.org/6a915194140c488f17d4d7887a5ed23b757b04aaa9613a7d34967ab1c250bdf5.png","url":"https://toot.jhnc.me.uk/@jhnc"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109346151289966239","published":null,"wm-received":"2022-11-20T12:56:23Z","wm-id":1564023,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109346151289966239","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Korenwolf","photo":"https://avatars.webmention.io/mendeddrum.org/4a88c2a2ee5ea5252ed3bcf9ed90326bcff9a0f372a8a53b377d2ffd7b0d61d8.jpg","url":"https://mendeddrum.org/@korenwolf"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109302807363833627","published":null,"wm-received":"2022-11-20T15:19:25Z","wm-id":1564210,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109302807363833627","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Cat Sittingstill","photo":"https://avatars.webmention.io/mendeddrum.org/5a7d0c47e1545337d0b7acf7b4f99b5d6a7fb7d71833e0f4c528b08fd5c765f2.png","url":"https://mendeddrum.org/@Catsittingstill"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109315665253488141","published":null,"wm-received":"2022-11-20T18:01:00Z","wm-id":1564304,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109315665253488141","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Joe","photo":"https://avatars.webmention.io/mendeddrum.org/4499d389fc34aaf665949fdd032cd4a6fb5e5d9e1ddfd50101e22b3197832a40.jpg","url":"https://mastodon.online/@josephramoney"},"url":"https://mendeddrum.org/@pdcawley/109375409188457518#favorited-by-109316953345470904","published":null,"wm-received":"2022-11-21T04:24:44Z","wm-id":1564600,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109316953345470904","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ConanTheActuarian","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mendeddrum.org/@ConanTheActuarian"},"url":"https://mendeddrum.org/@pdcawley/109377852549926790#favorited-by-109333721780010038","published":null,"wm-received":"2022-11-21T06:51:48Z","wm-id":1564667,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377852549926790/109333721780010038","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Danese Cooper","photo":"https://avatars.webmention.io/pbs.twimg.com/74a93f0257a1789b5822f8db3d99ade16734dba502b903d294542f6c6de654e6.jpg","url":"https://twitter.com/DivaDanese"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-6998432","published":null,"wm-received":"2022-11-21T19:48:29Z","wm-id":1565825,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/6998432","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Folk London","photo":"https://avatars.webmention.io/pbs.twimg.com/87528a99508a48720d0ecbd146419673e4a69ea5f7deb864e489d3a9ace78578.jpg","url":"https://twitter.com/FolkLondonMag"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-4718071419","published":null,"wm-received":"2022-11-21T19:48:29Z","wm-id":1565826,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/4718071419","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Alasdair Allan","photo":"https://avatars.webmention.io/pbs.twimg.com/9a15021906a7f62438df940b3aea0e6ae00997fd6a97d50f8fecb2ea651abbcd.jpg","url":"https://twitter.com/aallan"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-14267706","published":null,"wm-received":"2022-11-21T19:49:30Z","wm-id":1565827,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/14267706","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"stu","photo":"https://avatars.webmention.io/pbs.twimg.com/cc15eebdc7865e181c8cf0a9d7b4846ae3eaa5ec7c78e2d5fd3fd92c827de0f0.jpg","url":"https://twitter.com/fourlarks3d"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-1085463283","published":null,"wm-received":"2022-11-21T19:49:31Z","wm-id":1565828,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/1085463283","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Fred Langridge","photo":"https://avatars.webmention.io/pbs.twimg.com/92a732c10ed4ffde848353f626cd9aaa2000c315cda08b794117af82954ef11e.jpg","url":"https://twitter.com/Fred_SL"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-18797556","published":null,"wm-received":"2022-11-21T19:50:32Z","wm-id":1565829,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/18797556","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Christine Munro","photo":"https://avatars.webmention.io/pbs.twimg.com/48ad0c92d7f9455b5c3bdefae122380d23c8353c90c9060b5a218888a6aff98f.jpg","url":"https://twitter.com/vometia"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-307029443","published":null,"wm-received":"2022-11-21T19:50:32Z","wm-id":1565830,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/307029443","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Barbie","photo":"https://avatars.webmention.io/pbs.twimg.com/16582d89f01418bd5857aa9f728e6fdf4a20e31761bbcde1dabe4c2078f07433.jpg","url":"https://twitter.com/missbarbell"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-15599874","published":null,"wm-received":"2022-11-21T19:51:33Z","wm-id":1565831,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/15599874","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Daniel Kelly üá¶üá∫ üçÄüéª","photo":"https://avatars.webmention.io/pbs.twimg.com/4d6f78005c17d0e4d32093d5f7e8f43f3744f762a0c49c31a4c0537b1ede6efb.jpg","url":"https://twitter.com/Yasslad"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-130155146","published":null,"wm-received":"2022-11-21T23:07:48Z","wm-id":1565970,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/130155146","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"sunday sea songs","photo":"https://avatars.webmention.io/pbs.twimg.com/775b50a9e0500eaa91f5c329c1df4550a26bc79bf67a3dc45aaa1f70f8817fc7.jpg","url":"https://twitter.com/sunday_sea"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-1108135705404858368","published":null,"wm-received":"2022-11-23T17:16:14Z","wm-id":1566848,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/1108135705404858368","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Eliza Carthy MBE","photo":"https://avatars.webmention.io/pbs.twimg.com/fc5578dfee893141c8353dd61f1675360087a883a0c9af29dd0348886b4b9ed0.jpg","url":"https://twitter.com/elizacarthy"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-163767663","published":null,"wm-received":"2022-11-23T20:24:23Z","wm-id":1566906,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/163767663","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Neil S. Reddy. Writer.","photo":"https://avatars.webmention.io/pbs.twimg.com/8ae5b72fe7bf924b55bf6c1c2429a297db11a41320fad0b403534e0712b53c7b.jpg","url":"https://twitter.com/thistribe"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-166296855","published":null,"wm-received":"2022-11-23T20:25:24Z","wm-id":1566907,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/166296855","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Christian Reynolds","photo":"https://avatars.webmention.io/pbs.twimg.com/53305c235c51cf5e00deed60fa13489bb9fa55f216bc1b0c16c84b6d44399e91.jpg","url":"https://twitter.com/sartorialfoodie"},"url":"https://twitter.com/pdcawley/status/1594660392394973185#favorited-by-383094940","published":null,"wm-received":"2022-11-24T06:09:02Z","wm-id":1567246,"wm-source":"https://brid.gy/like/twitter/pdcawley/1594660392394973185/383094940","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"·¥äŒ±cŒ∫ –øœÖ—Ç—Çƒ±–ø…¢","photo":"https://avatars.webmention.io/pbs.twimg.com/1cab6b5b8709e02eb2e3986fa5155a5a73d8a796dfe7f4ead96739fb32487f18.jpg","url":"https://twitter.com/jacknutting"},"url":"https://twitter.com/jacknutting/status/1334555594146066434","published":"2020-12-03T17:50:23+00:00","wm-received":"2020-12-03T19:47:08Z","wm-id":934650,"wm-source":"https://brid-gy.appspot.com/comment/twitter/pdcawley/1334546420448309248/1334555594146066434","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"I‚Äôm quite sure I have, on a hard drive removed from a discarded computer, unread emails that are older than my children (one of whom is 20 years old)\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/aallan\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"I‚Äôm quite sure I have, on a hard drive removed from a discarded computer, unread emails that are older than my children (one of whom is 20 years old)"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Helen Lindley","photo":"https://avatars.webmention.io/pbs.twimg.com/0186effc468b657709af189aabc11a3c373a3db3f2211ffc8d39fd3c7df66c1e.jpg","url":"https://twitter.com/Helen_Lindley"},"url":"https://twitter.com/Helen_Lindley/status/1515630530271879168","published":"2022-04-17T09:57:32+00:00","wm-received":"2022-04-17T10:04:20Z","wm-id":1382407,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1515620582448148484/1515630530271879168","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"And again in English for those of us at the back please, Piers üòâü§£ü§£\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/PostgreSQL\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/n8n_io\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"And again in English for those of us at the back please, Piers üòâü§£ü§£"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Budley Salterton","photo":"https://avatars.webmention.io/pbs.twimg.com/651c24d3ab933db421cf76ea7dc8f8edb49553bd346f25db77285f06c34d5124.jpg","url":"https://twitter.com/budleysalterton"},"url":"https://twitter.com/budleysalterton/status/1515622534703726592","published":"2022-04-17T09:25:45+00:00","wm-received":"2022-04-17T10:04:21Z","wm-id":1382408,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1515620582448148484/1515622534703726592","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"It‚Äôs the JSON support that inspired me to build jpigd. Skip all middleware and bobby-tables attacks. <a href=\"https://gitlab.quatermass.co.uk/toolsmith/jrpc/jpigd\">gitlab.quatermass.co.uk/toolsmith/jrpc‚Ä¶</a> and then because it made sense, add a JSON-RPC db layer  <a href=\"https://gitlab.quatermass.co.uk/toolsmith/jrpc/jpig_rpc\">gitlab.quatermass.co.uk/toolsmith/jrpc‚Ä¶</a>\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/PostgreSQL\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/n8n_io\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"It‚Äôs the JSON support that inspired me to build jpigd. Skip all middleware and bobby-tables attacks. gitlab.quatermass.co.uk/toolsmith/jrpc‚Ä¶ and then because it made sense, add a JSON-RPC db layer  gitlab.quatermass.co.uk/toolsmith/jrpc‚Ä¶"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1515631817205993476","published":"2022-04-17T10:02:38+00:00","wm-received":"2022-04-17T10:04:47Z","wm-id":1382410,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1515620582448148484/1515631817205993476","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"The website <a href=\"https://webmention.io\">webmention.io</a> holds a list of every(ish) time someone links to, say <a href=\"https://bofh.org.uk/2022/04/16/we-have-webmentions/\">bofh.org.uk/2022/04/16/we-‚Ä¶</a>. I use N8n to poll that site and adds any fresh mentions to the data files used to build the site, so next time it's rebuilt, I can display the responses on the blog.\n<a class=\"u-mention\" href=\"https://twitter.com/Helen_Lindley\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/PostgreSQL\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/n8n_io\"></a>","text":"The website webmention.io holds a list of every(ish) time someone links to, say bofh.org.uk/2022/04/16/we-‚Ä¶. I use N8n to poll that site and adds any fresh mentions to the data files used to build the site, so next time it's rebuilt, I can display the responses on the blog."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Neil S. Reddy. Writer.","photo":"https://avatars.webmention.io/pbs.twimg.com/8ae5b72fe7bf924b55bf6c1c2429a297db11a41320fad0b403534e0712b53c7b.jpg","url":"https://twitter.com/thistribe"},"url":"https://twitter.com/thistribe/status/1585977574223925248","published":"2022-10-28T12:51:34+00:00","wm-received":"2022-10-28T23:01:05Z","wm-id":1546487,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1585905694053638144/1585977574223925248","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"Thanks Piers, I didn't know this site existed.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"Thanks Piers, I didn't know this site existed."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Tim M","photo":"https://avatars.webmention.io/pbs.twimg.com/7e4d4b9ebb57bee783dfcc3d94a162d20268b223f7cd1dd62183dfeb0b4296e3.jpg","url":"https://twitter.com/schmerg"},"url":"https://twitter.com/schmerg/status/1585917555876671488","published":"2022-10-28T08:53:04+00:00","wm-received":"2022-10-28T23:01:06Z","wm-id":1546488,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1585905694053638144/1585917555876671488","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"Too right, bloody Elton John ü§©what's he doing now?\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"Too right, bloody Elton John ü§©what's he doing now?"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109376130827991299","published":"2022-11-20T12:28:28","wm-received":"2022-11-20T12:56:13Z","wm-id":1564016,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109376130827991299","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://hobbs-end.uk/@budley\" class=\"u-url\">@<span>budley</span></a></span> I think I have it‚Ä¶ masto only checks your links when you change or them, so adding the rel=\"me\" link doesn't do anything until you clear and reset a link in your profile. At least, that's my current hypothesis based on not actually reading the code.</p>","text":"@budley I think I have it‚Ä¶ masto only checks your links when you change or them, so adding the rel=\"me\" link doesn't do anything until you clear and reset a link in your profile. At least, that's my current hypothesis based on not actually reading the code."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109376201523340462","published":"2022-11-20T12:46:27","wm-received":"2022-11-20T12:56:14Z","wm-id":1564017,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109376201523340462","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://hobbs-end.uk/@budley\" class=\"u-url\">@<span>budley</span></a></span> <span class=\"h-card\"><a href=\"https://s.thenautilus.net/@dakkar\" class=\"u-url\">@<span>dakkar</span></a></span> That's kind of frustrating and hard to discover. A 'check my links' button somewhere in the UI, near where it tells you how to add the backlink to your site, would be very handy.</p><p>/cc: <span class=\"h-card\"><a href=\"https://mastodon.social/@Gargron\" class=\"u-url\">@<span>Gargron</span></a></span></p>","text":"@budley @dakkar That's kind of frustrating and hard to discover. A 'check my links' button somewhere in the UI, near where it tells you how to add the backlink to your site, would be very handy./cc: @Gargron"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109376116381594709","published":"2022-11-20T12:24:48","wm-received":"2022-11-20T12:56:17Z","wm-id":1564018,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109376116381594709","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://hobbs-end.uk/@budley\" class=\"u-url\">@<span>budley</span></a></span> hmm‚Ä¶ scratch that, apparently it doesn't redirect, so now I'm just confused,</p>","text":"@budley hmm‚Ä¶ scratch that, apparently it doesn't redirect, so now I'm just confused,"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Budley","photo":"https://avatars.webmention.io/mendeddrum.org/b24135c9c26c0d47b45552e9700bb51b73bad88fc10a49c6d9e533f99da9d4d2.jpg","url":"https://hobbs-end.uk/@budley"},"url":"https://hobbs-end.uk/@budley/109375643041287503","published":"2022-11-20T10:24:25","wm-received":"2022-11-20T12:56:18Z","wm-id":1564019,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109375643094912272","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> so which url points to which destination file ?</p>","text":"@pdcawley so which url points to which destination file ?"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109376100549096417","published":"2022-11-20T12:20:46","wm-received":"2022-11-20T12:56:20Z","wm-id":1564020,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109376100549096417","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://hobbs-end.uk/@budley\" class=\"u-url\">@<span>budley</span></a></span> they both point to same file, but the version with the / gets a green link in my profile (because of the rel=\"me\" link back to <a href=\"https://mendeddrum.org/@pdcawley\"><span>https://</span><span>mendeddrum.org/@pdcawley</span><span></span></a>). The link without the / redirects to the the one with it, and mastodon objects to that, apparently.</p>","text":"@budley they both point to same file, but the version with the / gets a green link in my profile (because of the rel=\"me\" link back to https://mendeddrum.org/@pdcawley). The link without the / redirects to the the one with it, and mastodon objects to that, apparently."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"dakkar","photo":"https://avatars.webmention.io/mendeddrum.org/d7f93df753b622ea66276b98bdd39028d6b7362fe88872a73d7cd1573c990de0.jpg","url":"https://s.thenautilus.net/@dakkar"},"url":"https://s.thenautilus.net/notes/97swwnez4w","published":"2022-11-20T12:41:17","wm-received":"2022-11-20T12:56:42Z","wm-id":1564024,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109375409188457518/109376181223078013","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@pdcawley@mendeddrum.org</a><span> </span><a href=\"https://hobbs-end.uk/@budley\" class=\"u-url\">@budley@hobbs-end.uk</a><span> that matches what I've seen other people describe</span></p>","text":"@pdcawley@mendeddrum.org @budley@hobbs-end.uk that matches what I've seen other people describe"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109377852549926790","published":"2022-11-20T19:46:20","wm-received":"2022-11-20T19:46:29Z","wm-id":1564364,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2F%40pdcawley%2F109377852549926790&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@ConanTheActuarian\" class=\"u-url\">@<span>ConanTheActuarian</span></a></span> I've been here a while, that was a crosspost from <a href=\"https://bofh.org.uk/\"><span>https://</span><span>bofh.org.uk/</span><span></span></a> via <a href=\"https://brid.gy/\"><span>https://</span><span>brid.gy/</span><span></span></a>, which (rather annoyingly) doesn't tag it as such. Which is why I'm now mucking about with <a href=\"https://fed.brid.gy/\"><span>https://</span><span>fed.brid.gy/</span><span></span></a> and posting blog entries as <span class=\"h-card\"><a href=\"https://fed.brid.gy/r/https://bofh.org.uk/\" class=\"u-url\">@<span>bofh.org.uk</span></a></span>.</p><p>Fed.brid.gy is a tad dissatisfactory too, but at least it's not polluting this timeline, at least until I get it working and start boosting its posts :)</p>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/users/ConanTheActuarian\"></a>","text":"@ConanTheActuarian I've been here a while, that was a crosspost from https://bofh.org.uk/ via https://brid.gy/, which (rather annoyingly) doesn't tag it as such. Which is why I'm now mucking about with https://fed.brid.gy/ and posting blog entries as @bofh.org.uk.Fed.brid.gy is a tad dissatisfactory too, but at least it's not polluting this timeline, at least until I get it working and start boosting its posts :)"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109378575719363594","published":"2022-11-20T22:50:14","wm-received":"2022-11-20T22:50:20Z","wm-id":1564462,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2F%40pdcawley%2F109378575719363594&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://fed.brid.gy/r/https://bofh.org.uk/\" class=\"u-url\">@<span>bofh.org.uk</span></a></span> Next job ‚Äì get mastodon comments showing up as replies on the site. Hopefully without spinning up the ludicrously noisy server.</p>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>","text":"@bofh.org.uk Next job ‚Äì get mastodon comments showing up as replies on the site. Hopefully without spinning up the ludicrously noisy server."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Eliza Carthy MBE","photo":"https://avatars.webmention.io/pbs.twimg.com/fc5578dfee893141c8353dd61f1675360087a883a0c9af29dd0348886b4b9ed0.jpg","url":"https://twitter.com/elizacarthy"},"url":"https://twitter.com/elizacarthy/status/1595492309243764738","published":"2022-11-23T18:59:43+00:00","wm-received":"2022-11-23T20:23:21Z","wm-id":1566903,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1595492309243764738","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"This is breaking my heart. Twitter is literally my main means of talking to my audience‚Ä¶it‚Äôs taken me over ten years to build up this base.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"This is breaking my heart. Twitter is literally my main means of talking to my audience‚Ä¶it‚Äôs taken me over ten years to build up this base."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Tom Gregory","photo":"https://avatars.webmention.io/pbs.twimg.com/f22e8d7e18b84179d85864cf5451a7fec14e5cb693465edd93804fdff9b4bb2a.jpg","url":"https://twitter.com/tomgregory"},"url":"https://twitter.com/tomgregory/status/1595496778564096002","published":"2022-11-23T19:17:29+00:00","wm-received":"2022-11-23T20:23:21Z","wm-id":1566904,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1595496778564096002","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"Tell me about it. This year I‚Äôve connected to some amazing people on this platform- in a way that just isn‚Äôt on the cards through other means. It‚Äôs a blow right across the board- for big fish and little fish alike.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elizacarthy\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"Tell me about it. This year I‚Äôve connected to some amazing people on this platform- in a way that just isn‚Äôt on the cards through other means. It‚Äôs a blow right across the board- for big fish and little fish alike."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Neil S. Reddy. Writer.","photo":"https://avatars.webmention.io/pbs.twimg.com/8ae5b72fe7bf924b55bf6c1c2429a297db11a41320fad0b403534e0712b53c7b.jpg","url":"https://twitter.com/thistribe"},"url":"https://twitter.com/thistribe/status/1595495984913649667","published":"2022-11-23T19:14:20+00:00","wm-received":"2022-11-23T20:24:22Z","wm-id":1566905,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1595495984913649667","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"We will always have carrier weasel.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elizacarthy\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"We will always have carrier weasel."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Kathy Barnesüá∫üá¶üá∫üá¶üá∫üá¶","photo":"https://avatars.webmention.io/pbs.twimg.com/3aa24e36d54bc30be73cd021e821ccbb6ecc094f7570e04b308757daf425f523.jpg","url":"https://twitter.com/kathyaotten1"},"url":"https://twitter.com/kathyaotten1/status/1595540351598706691","published":"2022-11-23T22:10:38+00:00","wm-received":"2022-11-23T22:13:58Z","wm-id":1567047,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1595540351598706691","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"I really appreciate the time you put in to reply to tweets Eliza, and you've really helped with retweeting my Sheffield folk guide stuff. I've decided whilst EM is loosing money on twitter there is no major moral dilemma and I'm staying x\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elizacarthy\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"I really appreciate the time you put in to reply to tweets Eliza, and you've really helped with retweeting my Sheffield folk guide stuff. I've decided whilst EM is loosing money on twitter there is no major moral dilemma and I'm staying x"},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Helen Lindley","photo":"https://avatars.webmention.io/pbs.twimg.com/fe9c90a3b62666dc866f8db204f4b36aff890360382c3e70fca4d1c81f3e638c.jpg","url":"https://twitter.com/Helen_Lindley"},"url":"https://twitter.com/Helen_Lindley/status/1596080273812508672","published":"2022-11-25T09:56:05+00:00","wm-received":"2022-11-25T10:24:44Z","wm-id":1567944,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1596080273812508672","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"Exactly this Eliza. No matter how odious the main  Social Media owners are (twitter, FB, Insta etc), some us have to grin and bear it as our livelihoods depend on it for keeping in contact with people. Email just doesn't cut it for interaction.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elizacarthy\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"Exactly this Eliza. No matter how odious the main  Social Media owners are (twitter, FB, Insta etc), some us have to grin and bear it as our livelihoods depend on it for keeping in contact with people. Email just doesn't cut it for interaction."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"TreeHouseBookshop #MusicMatters üá∫üá¶","photo":"https://avatars.webmention.io/pbs.twimg.com/55e2c01fb456b47537134ce9e58448a5de3ec10f1ff758c270ff91b864a80796.jpg","url":"https://twitter.com/TreeHouseBkshop"},"url":"https://twitter.com/TreeHouseBkshop/status/1596118013144698883","published":"2022-11-25T12:26:03+00:00","wm-received":"2022-11-25T13:15:18Z","wm-id":1567997,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1596118013144698883","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"This is awful news... I will find you on youtube, but it's not the same.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"This is awful news... I will find you on youtube, but it's not the same."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"TreeHouseBookshop #MusicMatters üá∫üá¶","photo":"https://avatars.webmention.io/pbs.twimg.com/55e2c01fb456b47537134ce9e58448a5de3ec10f1ff758c270ff91b864a80796.jpg","url":"https://twitter.com/TreeHouseBkshop"},"url":"https://twitter.com/TreeHouseBkshop/status/1596118205457891328","published":"2022-11-25T12:26:49+00:00","wm-received":"2022-11-25T13:15:18Z","wm-id":1567998,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1594660392394973185/1596118205457891328","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"Absolutely. It's too good to lose. I still hope it will all settle down.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://mendeddrum.org/@pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://pdcawley.dreamwidth.org/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elizacarthy\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>\n<a class=\"u-mention\" href=\"https://www.dreamwidth.org/captcha?returnto=https%3A%2F%2Fpdcawley.dreamwidth.org%2F\"></a>","text":"Absolutely. It's too good to lose. I still hope it will all settle down."},"in-reply-to":"https://bofh.org.uk/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2Fc1fbedb2-b04f-49e0-a4d8-6768e5c6b992&target=https%3A%2F%2Fbofh.org.uk%2F","published":null,"wm-received":"2022-11-20T16:17:36Z","wm-id":1564238,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2Fc1fbedb2-b04f-49e0-a4d8-6768e5c6b992&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","mention-of":"https://bofh.org.uk/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109378631272963630","published":"2022-11-20T23:04:22","wm-received":"2022-11-20T23:04:27Z","wm-id":1564467,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2F%40pdcawley%2F109378631272963630&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"html":"<p>Have any of you <a href=\"https://mendeddrum.org/tags/IndieWeb\">#<span>IndieWeb</span></a> types worked out how to generate a <a href=\"https://mendeddrum.org/tags/GoHugo\">#<span>GoHugo</span></a> post from a commit message? It seems that half of my posts to <span class=\"h-card\"><a href=\"https://fed.brid.gy/r/https://bofh.org.uk/\" class=\"u-url\">@<span>bofh.org.uk</span></a></span> these days are describing some feature I just committed to the blog's repo. It seems like it might be the good kind of lazy to generate the post from a commits that merge a feature branch or something.</p><p>Especially if someone's already done most of the work.</p><p><a href=\"https://mendeddrum.org/tags/LazinessIsAVirtue\">#<span>LazinessIsAVirtue</span></a> <a href=\"https://mendeddrum.org/tags/LazyWeb\">#<span>LazyWeb</span></a></p>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>","text":"Have any of you #IndieWeb types worked out how to generate a #GoHugo post from a commit message? It seems that half of my posts to @bofh.org.uk these days are describing some feature I just committed to the blog's repo. It seems like it might be the good kind of lazy to generate the post from a commits that merge a feature branch or something.Especially if someone's already done most of the work.#LazinessIsAVirtue #LazyWeb"},"mention-of":"https://bofh.org.uk/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"James Berriman","photo":"https://avatars.webmention.io/media.mstdn.social/7d5efab4022fb42515dd8236864d21b6ebe2e7c584bb3ac1aaef7e9d92eaec14.jpg","url":"https://mstdn.social/@jamesberriman"},"url":"https://fed.brid.gy/render?source=https%3A%2F%2Fmstdn.social%2Fbcbe9a56-1e62-4611-9c36-242afb6879fe&target=https%3A%2F%2Fbofh.org.uk%2F","published":null,"wm-received":"2022-11-23T23:01:56Z","wm-id":1567062,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmstdn.social%2Fbcbe9a56-1e62-4611-9c36-242afb6879fe&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","mention-of":"https://bofh.org.uk/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"kitt/nicole :e-liter-4k-scope: :squid:","photo":"https://avatars.webmention.io/cdn.fediverse.catgirlin.space/0faaa99d945dbeba7eb06c283aed0f5eba920444953fdbd54ce088cbcfccde55.jpg","url":"https://fediverse.catgirlin.space/users/catgirl"},"url":"https://fed.brid.gy/render?source=https%3A%2F%2Ffediverse.catgirlin.space%2Factivities%2F0e6edde7-cfd3-4b7d-a12f-e66fb85ba085&target=https%3A%2F%2Fbofh.org.uk%2F","published":null,"wm-received":"2022-11-24T16:47:43Z","wm-id":1567490,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Ffediverse.catgirlin.space%2Factivities%2F0e6edde7-cfd3-4b7d-a12f-e66fb85ba085&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","mention-of":"https://bofh.org.uk/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Hashbangperl","photo":"","url":"https://hachyderm.io/@hashbangperl"},"url":"https://fed.brid.gy/render?source=https%3A%2F%2Fhachyderm.io%2F5c222c4a-bcc4-400f-8419-147af53a5010&target=https%3A%2F%2Fbofh.org.uk%2F","published":null,"wm-received":"2022-12-18T23:38:17Z","wm-id":1583594,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fhachyderm.io%2F5c222c4a-bcc4-400f-8419-147af53a5010&target=https%3A%2F%2Fbofh.org.uk%2F","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","mention-of":"https://bofh.org.uk/","wm-property":"mention-of","wm-private":false}],"repost-of":[{"type":"entry","author":{"type":"card","name":"Gizmo Mathboy","photo":"https://avatars.webmention.io/pbs.twimg.com/6e8f59250ff9a90bb96e95328801a297c1dc873c30eb29040638bf8b525e5184.jpg","url":"https://twitter.com/gizmomathboy"},"url":"https://twitter.com/gizmomathboy/status/1507037306552786944","published":"2022-03-24T16:51:07+00:00","wm-received":"2022-03-25T21:51:55Z","wm-id":1369165,"wm-source":"https://brid.gy/repost/twitter/pdcawley/1507031241765396480/1507037306552786944","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"text":"Of course, now I've shaved the yak of deploying bofh.org.uk every time I push to main, a bunch of new yaks have appeared ‚Äì got to automate a few other domains, and while I'm about it, I ought to automate setting up their letsencrypt and virtual host config files too"},"repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Gizmo Mathboy","photo":"https://avatars.webmention.io/pbs.twimg.com/6e8f59250ff9a90bb96e95328801a297c1dc873c30eb29040638bf8b525e5184.jpg","url":"https://twitter.com/gizmomathboy"},"url":"https://twitter.com/gizmomathboy/status/1507018758820311046","published":"2022-03-24T15:37:25+00:00","wm-received":"2022-03-25T21:52:07Z","wm-id":1369173,"wm-source":"https://brid.gy/repost/twitter/pdcawley/1507012744683286539/1507018758820311046","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"text":"Note to self: Thursday. Still here. Still on the mend. Trans rights are still human rights.\n\nHuzzah, an email-only domain of mine now has a bofh.org.uk landing page pointing users to resources for LGBTQIA kids in TX and also the UK branch of foo.com"},"repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Shaun #TheBlkGaze üáØüá≤üáßüáßüá¨üáß","photo":"https://avatars.webmention.io/pbs.twimg.com/17657cb5a0ec42371936c5630fb54e46e567f167d4e6efc1b3171c2f93a49a96.jpg","url":"https://twitter.com/shotbyshaun"},"url":"https://twitter.com/shotbyshaun/status/1507016707444936721","published":"2022-03-24T15:29:16+00:00","wm-received":"2022-03-25T21:52:08Z","wm-id":1369174,"wm-source":"https://brid.gy/repost/twitter/pdcawley/1507012744683286539/1507016707444936721","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"text":"Note to self: Thursday. Still here. Still on the mend. Trans rights are still human rights.\n\nHuzzah, an email-only domain of mine now has a bofh.org.uk landing page pointing users to resources for LGBTQIA kids in TX and also the UK branch of foo.com"},"repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Scott Laird","photo":"https://avatars.webmention.io/mendeddrum.org/d277d968e257a9564933b82fcedf06bc9b635e3e666d0faeeda6716e8ca8409a.jpg","url":"https://hachyderm.io/@laird"},"url":"https://mendeddrum.org/@pdcawley/109378631272963630#reblogged-by-109374019927777460","published":null,"wm-received":"2022-11-21T01:31:07Z","wm-id":1564546,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109378631272963630/109374019927777460","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Elizabeth Mattijsen","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mastodon.social/@lizmat"},"url":"https://mendeddrum.org/@pdcawley/109378631272963630#reblogged-by-109307829096113487","published":null,"wm-received":"2022-11-21T09:53:35Z","wm-id":1564746,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109378631272963630/109307829096113487","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Neil S. Reddy. Writer.","photo":"https://avatars.webmention.io/pbs.twimg.com/8ae5b72fe7bf924b55bf6c1c2429a297db11a41320fad0b403534e0712b53c7b.jpg","url":"https://twitter.com/thistribe"},"url":"https://twitter.com/thistribe/status/1595488913166155798","published":"2022-11-23T18:46:14+00:00","wm-received":"2022-11-23T20:25:25Z","wm-id":1566908,"wm-source":"https://brid.gy/repost/twitter/pdcawley/1594660392394973185/1595488913166155798","wm-target":"https://bofh.org.uk/","wm-protocol":"webmention","content":{"text":"This should be my last thread under the current Twitter regime.\n\nYou can still find me at:\n\n‚Ä¢ Mastodon (mendeddrum.org/@pdcawley)\n‚Ä¢ YouTube (youtube.com/pierscawley)\n‚Ä¢ My blog (bofh.org.uk)\n‚Ä¢ Dreamwidth (pdcawley.dreamwidth.org)"},"repost-of":"https://bofh.org.uk/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2020/05/12/oembed-for-hugo/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Anonymous","photo":"https://avatars.webmention.io/commentpara.de/ef200c8b639d79d1cfbc0abf0e25f42dcbc585b4398003dd90f5a56c9d56e3bf.svg","url":""},"url":"https://commentpara.de/comment/1025.htm","published":null,"wm-received":"2022-05-22T11:34:33Z","wm-id":1401984,"wm-source":"https://commentpara.de/comment/1025.htm","wm-target":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-protocol":"webmention","content":{"text":"This is my first web mention comment. I hope it works. I also have a blog on Hugo.  I did not manage to do it as described, but your singing is great!"},"in-reply-to":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[{"type":"entry","author":{"type":"card","name":"James Ravenscroft","photo":"https://avatars.webmention.io/cdn.fosstodon.org/1db69bf6408d549f11885537e17a22d22c58563968b1d6462a3f8e6d47619670.png","url":"https://fosstodon.org/@jamesravey"},"url":"https://fosstodon.org/@jamesravey/107541806069176658","published":"2021-12-31T13:35:34","wm-received":"2021-12-31T14:09:12Z","wm-id":1324262,"wm-source":"https://brid.gy/post/mastodon/@jamesravey@fosstodon.org/107541806069176658","wm-target":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-protocol":"webmention","content":{"html":"<p>Bookmarked: \"Adding a generic oembed handler for Hugo\" - <a href=\"https://bofh.org.uk/2020/05/12/oembed-for-hugo/\"><span>https://</span><span>bofh.org.uk/2020/05/12/oembed-</span><span>for-hugo/</span></a>  (<a href=\"https://brainsteam.co.uk/bookmarks/2021/12/31/1640957223/\"><span>https://</span><span>brainsteam.co.uk/bookmarks/202</span><span>1/12/31/1640957223/</span></a>)</p>\n<a href=\"https://bofh.org.uk/2020/05/12/oembed-for-hugo/\">Adding a generic oembed handler for Hugo</a>","text":"Bookmarked: \"Adding a generic oembed handler for Hugo\" - https://bofh.org.uk/2020/05/12/oembed-for-hugo/  (https://brainsteam.co.uk/bookmarks/2021/12/31/1640957223/)\nAdding a generic oembed handler for Hugo"},"mention-of":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"@dump@links.wiwie.dk","photo":"https://avatars.webmention.io/links.wiwie.dk/b9aad6c54f93e93d6d6cda6d101668f382bba35d45646ccb9775cecd74c1fd2f.png","url":"https://links.wiwie.dk/"},"url":"https://links.wiwie.dk/o/3026ba07414b44f2bc3c57637aa203b1","published":"2023-02-16T21:37:25","wm-received":"2023-02-16T21:37:32Z","wm-id":1624645,"wm-source":"https://links.wiwie.dk/o/3026ba07414b44f2bc3c57637aa203b1","wm-target":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-protocol":"webmention","content":{"html":"<h1>Hugo Embeds</h1>\n<p><a href=\"https://links.wiwie.dk/t/hugo\">#<span>hugo</span></a> <a href=\"https://links.wiwie.dk/t/oembeds\">#<span>oembeds</span></a> <a href=\"https://links.wiwie.dk/t/embeds\">#<span>embeds</span></a></p>\n<ul><li><a href=\"https://github.com/jacktuck/unfurl/\">https://github.com/jacktuck/unfurl/</a></li>\n<li><a href=\"https://github.com/nfl/jquery-oembed-all\">https://github.com/nfl/jquery-oembed-all</a></li>\n<li><a href=\"https://bofh.org.uk/2020/05/12/oembed-for-hugo/\">https://bofh.org.uk/2020/05/12/oembed-for-hugo/</a></li>\n<li><a href=\"https://discourse.gohugo.io/t/oembed-support/185\">https://discourse.gohugo.io/t/oembed-support/185</a></li>\n</ul>","text":"Hugo Embeds\n#hugo #oembeds #embeds\nhttps://github.com/jacktuck/unfurl/\nhttps://github.com/nfl/jquery-oembed-all\nhttps://bofh.org.uk/2020/05/12/oembed-for-hugo/\nhttps://discourse.gohugo.io/t/oembed-support/185"},"mention-of":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-property":"mention-of","wm-private":false}],"repost-of":[],"other":[{"type":"entry","author":{"type":"card","name":"","photo":"","url":"https://brainsteam.co.uk"},"url":"https://brainsteam.co.uk/bookmarks/2021/12/31/1640957223/","published":"2021-12-31T08:27:03","wm-received":"2021-12-31T13:28:04Z","wm-id":1324248,"wm-source":"https://brainsteam.co.uk/bookmarks/2021/12/31/1640957223/","wm-target":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-protocol":"webmention","name":"Adding a generic oembed handler for Hugo","content":{"html":"<p>This was a very useful tip that I was able to implement here on my own site although I ended up using a partial template instead of a microcode because the tweets I want to embed are saved in the frontmatter of the posts I create by my micropub endpoint.\n<a href=\"https://brid.gy/publish/mastodon\"></a></p>","text":"This was a very useful tip that I was able to implement here on my own site although I ended up using a partial template instead of a microcode because the tweets I want to embed are saved in the frontmatter of the posts I create by my micropub endpoint."},"bookmark-of":"https://bofh.org.uk/2020/05/12/oembed-for-hugo/","wm-property":"bookmark-of","wm-private":false}]},"/2022/04/12/is-this-thing-still-on/":{"like-of":[{"type":"entry","author":{"type":"card","name":"burd ellen","photo":"https://avatars.webmention.io/pbs.twimg.com/6f8b693d47448de36665e09d0427633c30da277da4c88914a333c17574c69336.jpg","url":"https://twitter.com/burdellen_"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-1243169435697008649","published":null,"wm-received":"2022-04-13T12:48:47Z","wm-id":1379873,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/1243169435697008649","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Pat Maddox","photo":"https://avatars.webmention.io/pbs.twimg.com/9db9c5089394434457a75cd35eeec2316b9f3aae0d5a2c2612051ba73ed5ff0c.jpg","url":"https://twitter.com/patmaddox"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-14955528","published":null,"wm-received":"2022-04-13T12:48:47Z","wm-id":1379874,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/14955528","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ü¶ã Elizabeth Mattijsen üá™üá∫üá≥üá± üá∫üá¶ üïäüåª","photo":"https://avatars.webmention.io/pbs.twimg.com/1dd430d754c98617244bd43c319ab81629490eb0c227fa2acabe49f899364e52.jpg","url":"https://twitter.com/liztormato"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-1184431119162400768","published":null,"wm-received":"2022-04-13T12:48:48Z","wm-id":1379875,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/1184431119162400768","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Marion Beet üá™üá∫ üï∑Ô∏è","photo":"https://avatars.webmention.io/pbs.twimg.com/a9942ee95412605f47c3f6fd8e5fd88c7cdb42d2418f56fbb46183a9db2f236a.jpg","url":"https://twitter.com/Knitronomicon"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-58828115","published":null,"wm-received":"2022-04-13T12:48:49Z","wm-id":1379876,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/58828115","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Tradfolk.co","photo":"https://avatars.webmention.io/pbs.twimg.com/05b5537f6971e79a8c76df842fc89a294fd7e26c7974ee300672280d6e8aa626.jpg","url":"https://twitter.com/Tradfolketc"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-1456536062428389386","published":null,"wm-received":"2022-04-14T15:01:49Z","wm-id":1380869,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/1456536062428389386","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Abby Franquemont üá∫üá∏üáµüá™","photo":"https://avatars.webmention.io/pbs.twimg.com/28f575ac07576dd3273089febf06b60637a8f10d6ebab54db59a79e36c7cd0aa.jpg","url":"https://twitter.com/abbysyarns"},"url":"https://twitter.com/pdcawley/status/1514145918995546117#favorited-by-19614458","published":null,"wm-received":"2022-04-14T15:01:50Z","wm-id":1380870,"wm-source":"https://brid.gy/like/twitter/pdcawley/1514145918995546117/19614458","wm-target":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/12/is-this-thing-still-on/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/2022/04/16/we-have-webmentions/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Grand MoÔ¨Ä Darth Salt","photo":"https://avatars.webmention.io/pbs.twimg.com/df51fa3b2713af075980a6d9e1f98120c64c1663afbc3673fbb968d5d4d364df.jpg","url":"https://twitter.com/BarnabyWalters"},"url":"https://twitter.com/pdcawley/status/1515333317566078977#favorited-by-507922769","published":null,"wm-received":"2022-04-16T21:07:50Z","wm-id":1382290,"wm-source":"https://brid.gy/like/twitter/pdcawley/1515333317566078977/507922769","wm-target":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1515333317566078977#favorited-by-9011272","published":null,"wm-received":"2022-04-17T11:19:00Z","wm-id":1382432,"wm-source":"https://brid.gy/like/twitter/pdcawley/1515333317566078977/9011272","wm-target":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"PRESENTA Platform","photo":"https://avatars.webmention.io/pbs.twimg.com/b7cc959150d5959f2644054e2314a836aeb065d0b9da6ecafb0e8cec7d8e1d0e.png","url":"https://twitter.com/PresentaSw"},"url":"https://twitter.com/pdcawley/status/1515631817205993476#favorited-by-1425876220604977161","published":null,"wm-received":"2022-04-19T06:48:48Z","wm-id":1383150,"wm-source":"https://brid.gy/like/twitter/pdcawley/1515631817205993476/1425876220604977161","wm-target":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/16/we-have-webmentions/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/2013/03/10/in-which-piers-prepares-to-void-the-warranty/":{"like-of":[{"type":"entry","author":{"type":"card","name":"David Gallows","photo":"https://avatars.webmention.io/pbs.twimg.com/e7b750d847ffdcfc174845aadc9196125b83647258a1789bb2b92b493d223e8b.jpg","url":"https://twitter.com/DavidGallows"},"url":"https://twitter.com/pdcawley/status/1517783526049001472#favorited-by-877428607","published":null,"wm-received":"2022-04-23T09:59:17Z","wm-id":1385464,"wm-source":"https://brid.gy/like/twitter/pdcawley/1517783526049001472/877428607","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"David Gallows","photo":"https://avatars.webmention.io/pbs.twimg.com/e7b750d847ffdcfc174845aadc9196125b83647258a1789bb2b92b493d223e8b.jpg","url":"https://twitter.com/DavidGallows"},"url":"https://twitter.com/DavidGallows/status/1517852498555555840","published":"2022-04-23T13:06:50+00:00","wm-received":"2022-04-23T15:12:04Z","wm-id":1385681,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517852498555555840","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"enjoyed reading about it :)\n\nI've been a trackball man since the word go, But have never been able to move away from Qwerty keyboards\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DrugCrazed\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"enjoyed reading about it :)\n\nI've been a trackball man since the word go, But have never been able to move away from Qwerty keyboards"},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1517856892479062016","published":"2022-04-23T13:24:18+00:00","wm-received":"2022-04-23T15:12:04Z","wm-id":1385682,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517856892479062016","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"You're welcome to have a play with my any of my split boards on that eventual day when we actually meet each other. It's the work of moments to throw 'em back into qwerty mode (slightly longer if you want me to rearrange the keycaps :)\n<a class=\"u-mention\" href=\"https://twitter.com/DavidGallows\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DrugCrazed\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>","text":"You're welcome to have a play with my any of my split boards on that eventual day when we actually meet each other. It's the work of moments to throw 'em back into qwerty mode (slightly longer if you want me to rearrange the keycaps :)"},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1517856520872075265","published":"2022-04-23T13:22:49+00:00","wm-received":"2022-04-23T15:12:06Z","wm-id":1385683,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517856520872075265","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"My fingers have always interpreted split/columnar boards as being an almost entirely different input device from a standard board ‚Äì I was going to have to relearn to type qwerty anyway, so I learned the new layout at the same time.\n<a class=\"u-mention\" href=\"https://twitter.com/DavidGallows\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DrugCrazed\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>","text":"My fingers have always interpreted split/columnar boards as being an almost entirely different input device from a standard board ‚Äì I was going to have to relearn to type qwerty anyway, so I learned the new layout at the same time."},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1517880325749288962","published":"2022-04-23T14:57:25+00:00","wm-received":"2022-04-23T15:12:06Z","wm-id":1385684,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517880325749288962","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"Turns out, too, that having Control on a thumb key more than makes up for the fact that x and c aren't where expect. I gather it's much weirder relearning vi because that's far more about stuff being on the home row.\n<a class=\"u-mention\" href=\"https://twitter.com/DavidGallows\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DrugCrazed\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>","text":"Turns out, too, that having Control on a thumb key more than makes up for the fact that x and c aren't where expect. I gather it's much weirder relearning vi because that's far more about stuff being on the home row."},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1517859507589767171","published":"2022-04-23T13:34:41+00:00","wm-received":"2022-04-23T15:12:08Z","wm-id":1385685,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517859507589767171","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"Nope. But I've rejigged most of my commonly used emacs bindings onto some leader key based bindings starting with M-m and which-key for reminding me where to go. I find myself using an unholy combination of the standard bindings and the M-m based stuff.\n<a class=\"u-mention\" href=\"https://twitter.com/DavidGallows\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DrugCrazed\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>","text":"Nope. But I've rejigged most of my commonly used emacs bindings onto some leader key based bindings starting with M-m and which-key for reminding me where to go. I find myself using an unholy combination of the standard bindings and the M-m based stuff."},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Patrick Rose","photo":"https://avatars.webmention.io/pbs.twimg.com/fc26e12bb3cc81387621feca773695c5773aee2d4d3e1e1a7b0715e448897a79.jpg","url":"https://twitter.com/DrugCrazed"},"url":"https://twitter.com/DrugCrazed/status/1517858744310325248","published":"2022-04-23T13:31:39+00:00","wm-received":"2022-04-23T15:12:35Z","wm-id":1385686,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1517783526049001472/1517858744310325248","wm-target":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-protocol":"webmention","content":{"html":"Did you have to relearn emacs bindings as well? I'm not sure I could do that to myself!\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/DavidGallows\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/keyboardio\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"Did you have to relearn emacs bindings as well? I'm not sure I could do that to myself!"},"in-reply-to":"https://bofh.org.uk/2013/03/10/in-which-piers-prepares-to-void-the-warranty/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[],"other":[]},"/2022/04/24/not-so-simple/":{"like-of":[{"type":"entry","author":{"type":"card","name":"brian wisti","photo":"https://avatars.webmention.io/pbs.twimg.com/7601064cf69aafa7798e4257ea29063df41f5e23e3c8f218aa651c6cdcf2dce4.jpg","url":"https://twitter.com/brianwisti"},"url":"https://twitter.com/pdcawley/status/1518254262362554372#favorited-by-10376902","published":null,"wm-received":"2022-04-24T15:52:20Z","wm-id":1386106,"wm-source":"https://brid.gy/like/twitter/pdcawley/1518254262362554372/10376902","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Yanick","photo":"https://avatars.webmention.io/pbs.twimg.com/e501be800c5dcac736473945adf3d679bdd3f2c5e502f64433704644ad873451.jpg","url":"https://twitter.com/yenzie"},"url":"https://twitter.com/pdcawley/status/1518254262362554372#favorited-by-18431216","published":null,"wm-received":"2022-04-24T19:39:43Z","wm-id":1386156,"wm-source":"https://brid.gy/like/twitter/pdcawley/1518254262362554372/18431216","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Chris (usually)","photo":"https://avatars.webmention.io/pbs.twimg.com/74bd1848a9104abc6a0b17fe66a87362aca520bf95f63fc74865fbfea3757a7d.jpg","url":"https://twitter.com/perigrin"},"url":"https://twitter.com/pdcawley/status/1518254262362554372#favorited-by-798335","published":null,"wm-received":"2022-04-24T19:39:44Z","wm-id":1386157,"wm-source":"https://brid.gy/like/twitter/pdcawley/1518254262362554372/798335","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Dave (Looking for something funny to put here)","photo":"https://avatars.webmention.io/pbs.twimg.com/075690d522b2f648037594e36551aca16b70e3a729bf5263ffe78561485f9aa0.jpg","url":"https://twitter.com/JacobyDave"},"url":"https://twitter.com/pdcawley/status/1518254262362554372#favorited-by-15087660","published":null,"wm-received":"2022-04-24T19:39:45Z","wm-id":1386158,"wm-source":"https://brid.gy/like/twitter/pdcawley/1518254262362554372/15087660","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"iNecas","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/359/686/865/563/725/original/f679f03d063d1f69.jpg","url":"https://mstdn.social/@inecas"},"url":"https://mendeddrum.org/@pdcawley/109394159043503974#favorited-by-109359686865563725","published":null,"wm-received":"2022-11-23T20:54:35Z","wm-id":1566921,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109394159043503974/109359686865563725","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Magnus /mem/ Sandberg","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/400/124/110/452/900/original/8ce5478410ace251.png","url":"https://emacs.ch/@mem"},"url":"https://mendeddrum.org/@pdcawley/109394159043503974#favorited-by-109400124110452900","published":null,"wm-received":"2022-11-24T18:39:14Z","wm-id":1567525,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109394159043503974/109400124110452900","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"brian wisti","photo":"https://avatars.webmention.io/pbs.twimg.com/7601064cf69aafa7798e4257ea29063df41f5e23e3c8f218aa651c6cdcf2dce4.jpg","url":"https://twitter.com/brianwisti"},"url":"https://twitter.com/brianwisti/status/1518257605377896449","published":"2022-04-24T15:56:35+00:00","wm-received":"2022-04-24T19:39:29Z","wm-id":1386155,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1518254262362554372/1518257605377896449","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","content":{"html":"Nice! Still getting proper microformats &amp; Webmention handling in my current site iteration.\n\nI treat files Hugo sees ‚Äî `.md` when ox-hugo is driving, `.html` with my ReST / adoc flows ‚Äî as cache files. Works for my impatient local flow, but cluttered. A GH action makes sense too!\n<a class=\"u-mention\" href=\"http://bofh.org.uk/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/pdcawley\"></a>","text":"Nice! Still getting proper microformats & Webmention handling in my current site iteration.\n\nI treat files Hugo sees ‚Äî `.md` when ox-hugo is driving, `.html` with my ReST / adoc flows ‚Äî as cache files. Works for my impatient local flow, but cluttered. A GH action makes sense too!"},"in-reply-to":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Louis :emacs:","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/333/433/751/152/248/original/972a911879214cda.jpeg","url":"https://emacs.ch/@louis"},"url":"https://emacs.ch/@louis/109394629629678611","published":"2022-11-23T18:52:58","wm-received":"2022-11-23T19:06:10Z","wm-id":1566881,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109394159043503974/109394630290444390","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> ox-hugo is the next thing on my task list. I'd really like to get my website up and running with it. Yours looks beautiful! üöÄ</p>","text":"@pdcawley ox-hugo is the next thing on my task list. I'd really like to get my website up and running with it. Yours looks beautiful! üöÄ"},"in-reply-to":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[{"type":"entry","author":{"type":"card","name":"brian wisti","photo":"https://avatars.webmention.io/pbs.twimg.com/7601064cf69aafa7798e4257ea29063df41f5e23e3c8f218aa651c6cdcf2dce4.jpg","url":"https://twitter.com/brianwisti"},"url":"https://twitter.com/brianwisti/status/1518257803604885506","published":"2022-04-24T15:57:22+00:00","wm-received":"2022-04-24T19:39:49Z","wm-id":1386160,"wm-source":"https://brid.gy/post/twitter/pdcawley/1518257803604885506","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","content":{"html":"Used my ideas, not my code. \n\nA wise choice.\n<a class=\"u-mention\" href=\"https://bofh.org.uk/2022/04/24/not-so-simple/\"></a>","text":"Used my ideas, not my code. \n\nA wise choice."},"mention-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"mention-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Gizmo Mathboy","photo":"https://avatars.webmention.io/pbs.twimg.com/6e8f59250ff9a90bb96e95328801a297c1dc873c30eb29040638bf8b525e5184.jpg","url":"https://twitter.com/gizmomathboy"},"url":"https://twitter.com/gizmomathboy/status/1525651609916669952","published":"2022-05-15T01:37:43+00:00","wm-received":"2022-05-15T04:04:47Z","wm-id":1398717,"wm-source":"https://brid.gy/post/twitter/pdcawley/1525651609916669952","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","content":{"html":"<a href=\"https://twitter.com/pdcawley\">@pdcawley</a> Just noticed that one of your posts renders differently in Firefox and Chromium. My RSS reader (QuiteRSS) renders closer to Firefox.\n\nBasically doesn't \"wrap\". I think the code blocks might be setting the page width. If I had to guess.\n\n<a href=\"https://bofh.org.uk/2022/04/24/not-so-simple/\">bofh.org.uk/2022/04/24/not‚Ä¶</a>","text":"@pdcawley Just noticed that one of your posts renders differently in Firefox and Chromium. My RSS reader (QuiteRSS) renders closer to Firefox.\n\nBasically doesn't \"wrap\". I think the code blocks might be setting the page width. If I had to guess.\n\nbofh.org.uk/2022/04/24/not‚Ä¶"},"mention-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"mention-of","wm-private":false}],"repost-of":[{"type":"entry","author":{"type":"card","name":"Dave (Looking for something funny to put here)","photo":"https://avatars.webmention.io/pbs.twimg.com/075690d522b2f648037594e36551aca16b70e3a729bf5263ffe78561485f9aa0.jpg","url":"https://twitter.com/JacobyDave"},"url":"https://twitter.com/JacobyDave/status/1518301385284063233","published":"2022-04-24T18:50:33+00:00","wm-received":"2022-04-24T19:39:48Z","wm-id":1386159,"wm-source":"https://brid.gy/repost/twitter/pdcawley/1518254262362554372/1518301385284063233","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","content":{"text":"I blame @brianwisti for my latest burst of blogging and site fiddling. You'll find the latest dispatch from the IndieWeb front at bofh.org.uk/2022/04/24/not‚Ä¶"},"repost-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Louis :emacs:","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/333/433/751/152/248/original/972a911879214cda.jpeg","url":"https://emacs.ch/@louis"},"url":"https://mendeddrum.org/@pdcawley/109394159043503974#reblogged-by-109333433751152248","published":null,"wm-received":"2022-11-23T19:06:10Z","wm-id":1566880,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109394159043503974/109333433751152248","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Magnus /mem/ Sandberg","photo":"https://mendeddrum.org/system/cache/accounts/avatars/109/400/124/110/452/900/original/8ce5478410ace251.png","url":"https://emacs.ch/@mem"},"url":"https://mendeddrum.org/@pdcawley/109394159043503974#reblogged-by-109400124110452900","published":null,"wm-received":"2022-11-24T18:39:14Z","wm-id":1567526,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109394159043503974/109400124110452900","wm-target":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/04/24/not-so-simple/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2022/04/28/quick-site-update/":{"like-of":[],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/pbs.twimg.com/2f336b4a2b2d16a7408b33f069d71f56c81fa4591894f55c9e775cfff67093c3.jpg","url":"https://twitter.com/pdcawley"},"url":"https://twitter.com/pdcawley/status/1519655434818408448","published":"2022-04-28T12:31:04+00:00","wm-received":"2022-05-10T20:52:28Z","wm-id":1395819,"wm-source":"https://brid.gy/post/twitter/pdcawley/1519655434818408448","wm-target":"https://bofh.org.uk/2022/04/28/quick-site-update/","wm-protocol":"webmention","content":{"html":"I've been doing a bit of gardening on my blog and hopefully setting up auto tweeting too. (<a href=\"https://bofh.org.uk/2022/04/28/quick-site-update/\">bofh.org.uk/2022/04/28/qui‚Ä¶</a>)","text":"I've been doing a bit of gardening on my blog and hopefully setting up auto tweeting too. (bofh.org.uk/2022/04/28/qui‚Ä¶)"},"mention-of":"https://bofh.org.uk/2022/04/28/quick-site-update/","wm-property":"mention-of","wm-private":false}],"repost-of":[],"other":[]},"/2022/05/10/evolving-my-streaming-setup/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Patrick Rose","photo":"https://avatars.webmention.io/pbs.twimg.com/fc26e12bb3cc81387621feca773695c5773aee2d4d3e1e1a7b0715e448897a79.jpg","url":"https://twitter.com/DrugCrazed"},"url":"https://twitter.com/pdcawley/status/1524062540522790912#favorited-by-19738650","published":null,"wm-received":"2022-05-11T03:31:16Z","wm-id":1396066,"wm-source":"https://brid.gy/like/twitter/pdcawley/1524062540522790912/19738650","wm-target":"https://bofh.org.uk/2022/05/10/evolving-my-streaming-setup/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/10/evolving-my-streaming-setup/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/2022/05/12/general-purpose-computing-is-the-best/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Presistance","photo":"https://avatars.webmention.io/pbs.twimg.com/cdb5aa13967849c068eb5d999da8aa3dc7d2669b7421b5cf4e562c9d306c9baa.jpg","url":"https://twitter.com/preaction"},"url":"https://twitter.com/pdcawley/status/1524729509932544002#favorited-by-23399752","published":null,"wm-received":"2022-05-12T16:10:02Z","wm-id":1396918,"wm-source":"https://brid.gy/like/twitter/pdcawley/1524729509932544002/23399752","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Alasdair Allan","photo":"https://avatars.webmention.io/mendeddrum.org/2ea7a07032b2714fd3e6ff9ad34e3ef5789703550324381133eec6a499323c22.jpg","url":"https://mastodon.social/@aallan"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#favorited-by-109274962361626248","published":null,"wm-received":"2022-11-20T18:00:40Z","wm-id":1564291,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109274962361626248","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Dan Tappan","photo":"https://avatars.webmention.io/mendeddrum.org/5f295cfda5ee9d8388d56303cbbbf44a7d08d1f7d2478115950e1a7971668b7d.png","url":"https://better.boston/@dantappan"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#favorited-by-109337226803961863","published":null,"wm-received":"2022-11-20T18:01:08Z","wm-id":1564308,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109337226803961863","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ConanTheActuarian","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mendeddrum.org/@ConanTheActuarian"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#favorited-by-109333721780010038","published":null,"wm-received":"2022-11-20T21:28:14Z","wm-id":1564414,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109333721780010038","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Solomon Foster","photo":"https://avatars.webmention.io/mendeddrum.org/571cba759337b5d3fde68416f41d985cc8a0a3c6a7d95cd3f968d89d34fd214a.jpg","url":"https://wandering.shop/@colomon"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#favorited-by-109307829820464868","published":null,"wm-received":"2022-11-20T23:21:25Z","wm-id":1564475,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109307829820464868","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"(gobsmacked)","photo":"https://avatars.webmention.io/mendeddrum.org/5c19e62f594454826d46643ef3b1524b30f1336462934d76d6b29f8e464b68df.jpg","url":"https://mendeddrum.org/@nwchapman"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#favorited-by-109281753313972462","published":null,"wm-received":"2022-11-20T23:21:27Z","wm-id":1564476,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109281753313972462","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Dan Tappan","photo":"https://avatars.webmention.io/mendeddrum.org/5f295cfda5ee9d8388d56303cbbbf44a7d08d1f7d2478115950e1a7971668b7d.png","url":"https://better.boston/@dantappan"},"url":"https://better.boston/@dantappan/109377063562764752","published":"2022-11-20T16:25:41","wm-received":"2022-11-20T18:01:08Z","wm-id":1564309,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109377063738214424","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> I have an RPi4 in my streaming setup (connected to a Blackmagic ATEM) to generate videos and greenscreen backgrounds.</p>","text":"@pdcawley I have an RPi4 in my streaming setup (connected to a Blackmagic ATEM) to generate videos and greenscreen backgrounds."},"in-reply-to":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Dan Tappan","photo":"https://avatars.webmention.io/mendeddrum.org/5f295cfda5ee9d8388d56303cbbbf44a7d08d1f7d2478115950e1a7971668b7d.png","url":"https://better.boston/@dantappan"},"url":"https://better.boston/@dantappan/109378264445430274","published":"2022-11-20T21:31:05","wm-received":"2022-11-20T23:21:09Z","wm-id":1564472,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109378264876266112","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Yes, I have an Extreme ISO after upgrading through several of the smaller models; finally justified to myself that I needed (üòÑ) more than 4 inputs to run the live-stream for  the Falcon Ridge Folk Festival.</p>","text":"@pdcawley Yes, I have an Extreme ISO after upgrading through several of the smaller models; finally justified to myself that I needed (üòÑ) more than 4 inputs to run the live-stream for  the Falcon Ridge Folk Festival."},"in-reply-to":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109378588408558146","published":"2022-11-20T22:53:28","wm-received":"2022-11-20T23:21:19Z","wm-id":1564473,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109378588408558146","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://better.boston/@dantappan\" class=\"u-url\">@<span>dantappan</span></a></span> I didn't have the cash to buy the pre-ISO models. I didn't strictly have the cash to buy the ISO I ended up getting, but I managed to scrape some together. Of course, the extreme came out about three months later.</p>","text":"@dantappan I didn't have the cash to buy the pre-ISO models. I didn't strictly have the cash to buy the ISO I ended up getting, but I managed to scrape some together. Of course, the extreme came out about three months later."},"in-reply-to":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109377895023726613","published":"2022-11-20T19:57:08","wm-received":"2022-11-20T23:21:25Z","wm-id":1564474,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109377895023726613","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://better.boston/@dantappan\" class=\"u-url\">@<span>dantappan</span></a></span> I really need to get PlayoutBee or whatever it's called up on my Pi. At the moment it's running a hand-compiled OBS that I managed to hammer the web source into and that's displaying ko-fi alerts as a downstream key. Because most of my streams have a guest via Zoom, the upstream keyer is reserved for DVEing the guest in.</p><p>It's amazing how quickly you find yourself longing for the Extreme, even with a single camera setup. I need that Super Source!</p>","text":"@dantappan I really need to get PlayoutBee or whatever it's called up on my Pi. At the moment it's running a hand-compiled OBS that I managed to hammer the web source into and that's displaying ko-fi alerts as a downstream key. Because most of my streams have a guest via Zoom, the upstream keyer is reserved for DVEing the guest in.It's amazing how quickly you find yourself longing for the Extreme, even with a single camera setup. I need that Super Source!"},"in-reply-to":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[{"type":"entry","author":{"type":"card","name":"Transhumanista :verified:","photo":"https://avatars.webmention.io/mendeddrum.org/e7e98d7c04e403fe439c581cbb223d12e192f84d2bb0e133c6959cbc3539af5f.png","url":"https://techhub.social/@transhumanist"},"url":"https://mendeddrum.org/@pdcawley/109377022692993105#reblogged-by-109377118997450291","published":null,"wm-received":"2022-11-20T18:01:11Z","wm-id":1564310,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109377022692993105/109377118997450291","wm-target":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/05/12/general-purpose-computing-is-the-best/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2022/11/20/migrating-to-mastodon/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Meesterfox","photo":"https://avatars.webmention.io/mendeddrum.org/3b71c692f29169e27b18bfa95b205b2931ad5747824324dd86f453a092127c80.jpg","url":"https://ruby.social/@meesterfox"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109347782495695108","published":null,"wm-received":"2022-11-20T18:00:43Z","wm-id":1564292,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109347782495695108","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Knitronomicon","photo":"https://avatars.webmention.io/mendeddrum.org/c63b465098c9f4f9382823e1cff350fdd757294ab293a91c43e9e381dc2e9e55.jpg","url":"https://mastodon.social/@Knitronomicon"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109296590635116276","published":null,"wm-received":"2022-11-20T18:00:45Z","wm-id":1564293,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109296590635116276","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"NH-Lycan","photo":"https://avatars.webmention.io/mendeddrum.org/7c52251812b2f4f6659cc8f628784b67d8bd4fbd5ab55a27950be2d6ed89c605.png","url":"https://c.im/@NH_Lycan"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109377019932819447","published":null,"wm-received":"2022-11-20T18:00:46Z","wm-id":1564294,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109377019932819447","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Korenwolf","photo":"https://avatars.webmention.io/mendeddrum.org/4a88c2a2ee5ea5252ed3bcf9ed90326bcff9a0f372a8a53b377d2ffd7b0d61d8.jpg","url":"https://mendeddrum.org/@korenwolf"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109302807363833627","published":null,"wm-received":"2022-11-20T18:00:48Z","wm-id":1564295,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109302807363833627","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Cat Sittingstill","photo":"https://avatars.webmention.io/mendeddrum.org/5a7d0c47e1545337d0b7acf7b4f99b5d6a7fb7d71833e0f4c528b08fd5c765f2.png","url":"https://mendeddrum.org/@Catsittingstill"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109315665253488141","published":null,"wm-received":"2022-11-20T18:00:50Z","wm-id":1564296,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109315665253488141","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Elizabeth Mattijsen","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mastodon.social/@lizmat"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109307829096113487","published":null,"wm-received":"2022-11-20T18:00:51Z","wm-id":1564297,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109307829096113487","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"AE4WX","photo":"https://avatars.webmention.io/mendeddrum.org/fe78c6dc3f120b6bc2931d92b74171e431a7f462b9162af892bdc03221c0a2d7.jpg","url":"https://mas.to/@AE4WX"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109327758544568051","published":null,"wm-received":"2022-11-20T18:00:53Z","wm-id":1564298,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109327758544568051","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"H. Wade Minter","photo":"https://avatars.webmention.io/mendeddrum.org/c91cb56a000d27ce0a51af6353d8096c467e27bd450e5e4d8566c8f064b2108d.jpg","url":"https://ruby.social/@minter"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109307829178781638","published":null,"wm-received":"2022-11-20T18:00:54Z","wm-id":1564299,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109307829178781638","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"WGAvanDijk","photo":"https://avatars.webmention.io/mendeddrum.org/0c4f2335c276689bad676510bc52b39d0e933b84e20c1b05a8c7e2d0f9108009.jpg","url":"https://mastodon.social/@WGAvanDijk"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109291817657330276","published":null,"wm-received":"2022-11-20T18:00:56Z","wm-id":1564301,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109291817657330276","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Andr√© Walker","photo":"https://avatars.webmention.io/mendeddrum.org/fcf163a183d85292ce19957ee48621c57c98e6ca19611ef95742daa231534de1.png","url":"https://mastodon.green/@andrewalker"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109372429070362497","published":null,"wm-received":"2022-11-20T18:01:14Z","wm-id":1564312,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109372429070362497","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ConanTheActuarian","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mendeddrum.org/@ConanTheActuarian"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109333721780010038","published":null,"wm-received":"2022-11-20T21:27:51Z","wm-id":1564411,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109333721780010038","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Sunnie","photo":"https://avatars.webmention.io/mendeddrum.org/cd61ce93721ec251960b8b056efabf937f500107271d68af49f109a168b3b856.jpg","url":"https://mastodon.lol/@solcita"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#favorited-by-109320617642532903","published":null,"wm-received":"2022-11-20T21:27:51Z","wm-id":1564412,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109320617642532903","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Cat Sittingstill","photo":"https://avatars.webmention.io/mendeddrum.org/5a7d0c47e1545337d0b7acf7b4f99b5d6a7fb7d71833e0f4c528b08fd5c765f2.png","url":"https://mendeddrum.org/@Catsittingstill"},"url":"https://mendeddrum.org/@Catsittingstill/109376840347824653","published":"2022-11-20T15:28:55","wm-received":"2022-11-20T18:01:13Z","wm-id":1564311,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109376840347824653","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> In fact, I am!</p>","text":"@pdcawley In fact, I am!"},"in-reply-to":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"ConanTheActuarian","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mendeddrum.org/@ConanTheActuarian"},"url":"https://mendeddrum.org/@ConanTheActuarian/109377815891992174","published":"2022-11-20T19:37:00","wm-received":"2022-11-20T21:27:48Z","wm-id":1564409,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109377815891992174","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Welcome to Mastodon. Hope you enjoy it here. It is very different from Twitter. For one thing, rather than a huge monolith, it is a federation of large numbers of individual instances. No one is getting rich, there is no advertising, and no one is collecting our data. On the other hand, there is no way to broadcast to large numbers of people. No one has thousands of followers. Each instance has a moderator who will block people who soew hate speech.</p>","text":"@pdcawley Welcome to Mastodon. Hope you enjoy it here. It is very different from Twitter. For one thing, rather than a huge monolith, it is a federation of large numbers of individual instances. No one is getting rich, there is no advertising, and no one is collecting our data. On the other hand, there is no way to broadcast to large numbers of people. No one has thousands of followers. Each instance has a moderator who will block people who soew hate speech."},"in-reply-to":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109377852549926790","published":"2022-11-20T19:46:20","wm-received":"2022-11-20T21:27:48Z","wm-id":1564410,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109377852549926790","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@ConanTheActuarian\" class=\"u-url\">@<span>ConanTheActuarian</span></a></span> I've been here a while, that was a crosspost from <a href=\"https://bofh.org.uk/\"><span>https://</span><span>bofh.org.uk/</span><span></span></a> via <a href=\"https://brid.gy/\"><span>https://</span><span>brid.gy/</span><span></span></a>, which (rather annoyingly) doesn't tag it as such. Which is why I'm now mucking about with <a href=\"https://fed.brid.gy/\"><span>https://</span><span>fed.brid.gy/</span><span></span></a> and posting blog entries as <span class=\"h-card\"><a href=\"https://fed.brid.gy/r/https://bofh.org.uk/\" class=\"u-url\">@<span>bofh.org.uk</span></a></span>.</p><p>Fed.brid.gy is a tad dissatisfactory too, but at least it's not polluting this timeline, at least until I get it working and start boosting its posts :)</p>\n<a href=\"https://bofh.org.uk/\">Just a Summary</a>","text":"@ConanTheActuarian I've been here a while, that was a crosspost from https://bofh.org.uk/ via https://brid.gy/, which (rather annoyingly) doesn't tag it as such. Which is why I'm now mucking about with https://fed.brid.gy/ and posting blog entries as @bofh.org.uk.Fed.brid.gy is a tad dissatisfactory too, but at least it's not polluting this timeline, at least until I get it working and start boosting its posts :)\nJust a Summary"},"in-reply-to":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[{"type":"entry","author":{"type":"card","name":"","photo":"","url":""},"url":"https://bofh.org.uk/","published":null,"wm-received":"2022-11-20T16:52:40Z","wm-id":1564270,"wm-source":"https://bofh.org.uk/","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","mention-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/"}}],"repost-of":[{"type":"entry","author":{"type":"card","name":"H. Wade Minter","photo":"https://avatars.webmention.io/mendeddrum.org/c91cb56a000d27ce0a51af6353d8096c467e27bd450e5e4d8566c8f064b2108d.jpg","url":"https://ruby.social/@minter"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109307829178781638","published":null,"wm-received":"2022-11-20T18:00:55Z","wm-id":1564300,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109307829178781638","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"NH-Lycan","photo":"https://avatars.webmention.io/mendeddrum.org/7c52251812b2f4f6659cc8f628784b67d8bd4fbd5ab55a27950be2d6ed89c605.png","url":"https://c.im/@NH_Lycan"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109377019932819447","published":null,"wm-received":"2022-11-20T18:00:57Z","wm-id":1564302,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109377019932819447","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Knitronomicon","photo":"https://avatars.webmention.io/mendeddrum.org/c63b465098c9f4f9382823e1cff350fdd757294ab293a91c43e9e381dc2e9e55.jpg","url":"https://mastodon.social/@Knitronomicon"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109296590635116276","published":null,"wm-received":"2022-11-20T18:00:59Z","wm-id":1564303,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109296590635116276","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Rob Whittaker :thoughtbot:","photo":"https://avatars.webmention.io/mendeddrum.org/cb116decb2c75b9d574a86de13f2e31814cca612808bea58f604d864223c3553.jpg","url":"https://ruby.social/@purinkle"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109376858610097740","published":null,"wm-received":"2022-11-20T18:01:01Z","wm-id":1564305,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109376858610097740","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"WGAvanDijk","photo":"https://avatars.webmention.io/mendeddrum.org/0c4f2335c276689bad676510bc52b39d0e933b84e20c1b05a8c7e2d0f9108009.jpg","url":"https://mastodon.social/@WGAvanDijk"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109291817657330276","published":null,"wm-received":"2022-11-20T18:01:02Z","wm-id":1564306,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109291817657330276","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Elizabeth Mattijsen","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mastodon.social/@lizmat"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109307829096113487","published":null,"wm-received":"2022-11-20T18:01:05Z","wm-id":1564307,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109307829096113487","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"ConanTheActuarian","photo":"https://avatars.webmention.io/mendeddrum.org/a971b399b2b2c66daa292ea79888a77f2f15a8d33c7f9cf611428be3f8283405.png","url":"https://mendeddrum.org/@ConanTheActuarian"},"url":"https://mendeddrum.org/@pdcawley/109376800596173391#reblogged-by-109333721780010038","published":null,"wm-received":"2022-11-20T21:27:54Z","wm-id":1564413,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/109376800596173391/109333721780010038","wm-target":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2022/11/20/migrating-to-mastodon/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2022/11/20/more-mastodon-fiddling/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/109378575719363594","published":"2022-11-20T22:50:14","wm-received":"2022-11-20T22:50:20Z","wm-id":1564461,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2F%40pdcawley%2F109378575719363594&target=https%3A%2F%2Fbofh.org.uk%2F2022%2F11%2F20%2Fmore-mastodon-fiddling%2F","wm-target":"https://bofh.org.uk/2022/11/20/more-mastodon-fiddling/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://fed.brid.gy/r/https://bofh.org.uk/\" class=\"u-url\">@<span>bofh.org.uk</span></a></span> Next job ‚Äì get mastodon comments showing up as replies on the site. Hopefully without spinning up the ludicrously noisy server.</p>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/\"></a>","text":"@bofh.org.uk Next job ‚Äì get mastodon comments showing up as replies on the site. Hopefully without spinning up the ludicrously noisy server."},"in-reply-to":"https://bofh.org.uk/2022/11/20/more-mastodon-fiddling/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2Fusers%2Fpdcawley%2Fstatuses%2F109378576705362898%2Factivity&target=https%3A%2F%2Fbofh.org.uk%2F2022%2F11%2F20%2Fmore-mastodon-fiddling%2F","published":"2022-11-20T22:50:29","wm-received":"2022-11-20T22:50:33Z","wm-id":1564463,"wm-source":"https://fed.brid.gy/render?source=https%3A%2F%2Fmendeddrum.org%2Fusers%2Fpdcawley%2Fstatuses%2F109378576705362898%2Factivity&target=https%3A%2F%2Fbofh.org.uk%2F2022%2F11%2F20%2Fmore-mastodon-fiddling%2F","wm-target":"https://bofh.org.uk/2022/11/20/more-mastodon-fiddling/","wm-protocol":"webmention","content":{"html":"<a href=\"https://bofh.org.uk/2022/11/20/more-mastodon-fiddling/\">shared this.</a>","text":"shared this."},"repost-of":"https://bofh.org.uk/2022/11/20/more-mastodon-fiddling/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2005/12/01/you-shag-one-lousy-sheep/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Anon","photo":"https://avatars.webmention.io/pbs.twimg.com/924a2d96c83e3a27f692075f10e4ab52eda8a66e579e0730c2e2b98ec1325744.jpg","url":"https://twitter.com/DoctorDreadfull"},"url":"https://twitter.com/DoctorDreadfull/status/1622974340412194816","published":"2023-02-07T15:03:30+00:00","wm-received":"2023-02-08T14:39:37Z","wm-id":1618341,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1622974340412194816/1622974340412194816","wm-target":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-protocol":"webmention","content":{"html":"There's a tale about this sort of thing...\n\n<a href=\"http://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\">bofh.org.uk/2005/12/01/you‚Ä¶</a>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/J_CartwrightN0T\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/johnmol88\"></a>","text":"There's a tale about this sort of thing...\n\nbofh.org.uk/2005/12/01/you‚Ä¶"},"in-reply-to":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"PlankMaster","photo":"https://avatars.webmention.io/pbs.twimg.com/0aa84b98e85932eb69fa68787fa27e00142223bc257525049f73f06aab0f6782.jpg","url":"https://twitter.com/HectorTheHog"},"url":"https://twitter.com/HectorTheHog/status/1627403314970214400","published":"2023-02-19T20:22:40+00:00","wm-received":"2023-02-19T21:23:18Z","wm-id":1626596,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1627403314970214400/1627403314970214400","wm-target":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-protocol":"webmention","content":{"html":"Be fair, it was your defining moment.\n\nI'm reminded of that very old joke with the punchline \"you shag one lousy sheep!\"\n\n<a href=\"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\">bofh.org.uk/2005/12/01/you‚Ä¶</a>\n<a class=\"u-mention\" href=\"https://twitter.com/Iromg\"></a>","text":"Be fair, it was your defining moment.\n\nI'm reminded of that very old joke with the punchline \"you shag one lousy sheep!\"\n\nbofh.org.uk/2005/12/01/you‚Ä¶"},"in-reply-to":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"The Doomlord of Chaos","photo":"https://avatars.webmention.io/pbs.twimg.com/7cd17d2c5f6018bb291b10aee0e690a9a6d89ccf286df9cdcdb8c3be37848e1e.jpg","url":"https://twitter.com/DoctorDreadfull"},"url":"https://twitter.com/DoctorDreadfull/status/1634524877825753091","published":"2023-03-11T12:01:13+00:00","wm-received":"2023-03-11T15:06:07Z","wm-id":1638940,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1634524877825753091/1634524877825753091","wm-target":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-protocol":"webmention","content":{"html":"Yeah but no but ....\n\n<a href=\"http://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\">bofh.org.uk/2005/12/01/you‚Ä¶</a>\n<a class=\"u-mention\" href=\"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/BlueCat67515313\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/normAL219\"></a>","text":"Yeah but no but ....\n\nbofh.org.uk/2005/12/01/you‚Ä¶"},"in-reply-to":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"OlwenB","photo":"https://avatars.webmention.io/pbs.twimg.com/23a5916d330232fa32974ede1e0b8ff46997fd393b102920255facd3621d470d.jpg","url":"https://twitter.com/Bolwen"},"url":"https://twitter.com/Bolwen/status/1636573055073001473","published":"2023-03-17T03:39:57+00:00","wm-received":"2023-03-17T03:56:36Z","wm-id":1643008,"wm-source":"https://brid.gy/comment/twitter/pdcawley/1636573055073001473/1636573055073001473","wm-target":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-protocol":"webmention","content":{"html":"I just had to google\n\n<a href=\"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/\">bofh.org.uk/2005/12/01/you‚Ä¶</a>\n<a class=\"u-mention\" href=\"https://twitter.com/brianstandlick\"></a>\n<a class=\"u-mention\" href=\"https://twitter.com/elphidee\"></a>","text":"I just had to google\n\nbofh.org.uk/2005/12/01/you‚Ä¶"},"in-reply-to":"https://bofh.org.uk/2005/12/01/you-shag-one-lousy-sheep/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[],"other":[]},"/2023/06/06/impermanence-matters/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Dave Jacoby","photo":"https://avatars.webmention.io/mendeddrum.org/de821e970592498e8d92d75b2522dca10cdccae5fbe2274ecec3a555e2b7c4c8.png","url":"https://mastodon.xyz/@jacobydave"},"url":"https://mendeddrum.org/@pdcawley/110496717885628787#favorited-by-109310178064213522","published":null,"wm-received":"2023-06-07T08:20:41Z","wm-id":1683201,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/110496717885628787/109310178064213522","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"gizmomathboy","photo":"https://avatars.webmention.io/mendeddrum.org/69dd48fb8fb1f542e077f3222c96ecc579dd3b0b0fbe4e8768ac70d35eec5093.png","url":"https://mastodon.xyz/@gizmomathboy"},"url":"https://mendeddrum.org/@pdcawley/110496717885628787#favorited-by-109307829773225740","published":null,"wm-received":"2023-06-07T08:20:42Z","wm-id":1683202,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/110496717885628787/109307829773225740","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Solomon Foster","photo":"https://avatars.webmention.io/mendeddrum.org/571cba759337b5d3fde68416f41d985cc8a0a3c6a7d95cd3f968d89d34fd214a.jpg","url":"https://wandering.shop/@colomon"},"url":"https://mendeddrum.org/@pdcawley/110496717885628787#favorited-by-109307829820464868","published":null,"wm-received":"2023-06-07T08:21:43Z","wm-id":1683203,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/110496717885628787/109307829820464868","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Solomon Foster","photo":"https://avatars.webmention.io/mendeddrum.org/571cba759337b5d3fde68416f41d985cc8a0a3c6a7d95cd3f968d89d34fd214a.jpg","url":"https://wandering.shop/@colomon"},"url":"https://wandering.shop/@colomon/110496929827353308","published":"2023-06-06T11:02:24","wm-received":"2023-06-07T08:18:35Z","wm-id":1683196,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110496717885628787/110496929893937558","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Huh.  Good observation!</p><p>As an Irish trad player, I have what I think is a pretty typical urge to preserve other people's performances that I particularly like, because there's always something to study.  My current to-do list includes breaking up two Monday night live streams with interesting tunes on them, for instance -- though I'm almost more interested in the tunes I already know!  (I already asked my box teacher help me go over one of them.) 1/</p>","text":"@pdcawley Huh.  Good observation!As an Irish trad player, I have what I think is a pretty typical urge to preserve other people's performances that I particularly like, because there's always something to study.  My current to-do list includes breaking up two Monday night live streams with interesting tunes on them, for instance -- though I'm almost more interested in the tunes I already know!  (I already asked my box teacher help me go over one of them.) 1/"},"in-reply-to":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/110496725218048817","published":"2023-06-06T10:10:22","wm-received":"2023-06-07T08:18:37Z","wm-id":1683197,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110496717885628787/110496725218048817","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","content":{"html":"<p>Comments are broken again, by the way, you're better off just replying this if you want me to see them any time soon :)</p><p>(I *think* the infrastructure is such that I'll catch any WebMentions eventually though)</p>","text":"Comments are broken again, by the way, you're better off just replying this if you want me to see them any time soon :)(I *think* the infrastructure is such that I'll catch any WebMentions eventually though)"},"in-reply-to":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Solomon Foster","photo":"https://avatars.webmention.io/mendeddrum.org/571cba759337b5d3fde68416f41d985cc8a0a3c6a7d95cd3f968d89d34fd214a.jpg","url":"https://wandering.shop/@colomon"},"url":"https://wandering.shop/@colomon/110496984341034767","published":"2023-06-06T11:16:16","wm-received":"2023-06-07T08:19:38Z","wm-id":1683199,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110496717885628787/110496984394600965","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> But on the other hand, while I adore listening to your Friday streams, I don't have any strong inclination to preserve them.  They happen, I listen / singalong at home if I can, and then they're gone.</p><p>By the same token, I sweat over the recordings that I put up.  It's normal for me to need 10-20 takes to get a version I'm okay with posting; hell, it's normal to do 10-20 takes and then give up and do a different tune. 2/</p>","text":"@pdcawley But on the other hand, while I adore listening to your Friday streams, I don't have any strong inclination to preserve them.  They happen, I listen / singalong at home if I can, and then they're gone.By the same token, I sweat over the recordings that I put up.  It's normal for me to need 10-20 takes to get a version I'm okay with posting; hell, it's normal to do 10-20 takes and then give up and do a different tune. 2/"},"in-reply-to":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Solomon Foster","photo":"https://avatars.webmention.io/mendeddrum.org/571cba759337b5d3fde68416f41d985cc8a0a3c6a7d95cd3f968d89d34fd214a.jpg","url":"https://wandering.shop/@colomon"},"url":"https://wandering.shop/@colomon/110496988943222653","published":"2023-06-06T11:17:26","wm-received":"2023-06-07T08:19:40Z","wm-id":1683200,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110496717885628787/110496988980986934","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Might well be mental healthier to do it live and then sunset the recordings in a week or two.  Must ponder.  3/3</p>","text":"@pdcawley Might well be mental healthier to do it live and then sunset the recordings in a week or two.  Must ponder.  3/3"},"in-reply-to":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[{"type":"entry","author":{"type":"card","name":"gizmomathboy","photo":"https://avatars.webmention.io/mendeddrum.org/69dd48fb8fb1f542e077f3222c96ecc579dd3b0b0fbe4e8768ac70d35eec5093.png","url":"https://mastodon.xyz/@gizmomathboy"},"url":"https://mendeddrum.org/@pdcawley/110496717885628787#reblogged-by-109307829773225740","published":null,"wm-received":"2023-06-07T08:18:39Z","wm-id":1683198,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/110496717885628787/109307829773225740","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Folk London magazine","photo":"https://avatars.webmention.io/mendeddrum.org/6d81f6df99d3142dd31bd0f34240a726ab05bfc78a47b79134d753d0ec0bfb9a.png","url":"https://folksocial.org/@FolkLondonMag"},"url":"https://mendeddrum.org/@pdcawley/110496717885628787#reblogged-by-109536429115148021","published":null,"wm-received":"2023-06-07T08:21:44Z","wm-id":1683204,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/110496717885628787/109536429115148021","wm-target":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2023/06/06/impermanence-matters/","wm-property":"repost-of","wm-private":false}],"other":[]},"/2023/08/14/week-note/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Knitronomicon","photo":"https://avatars.webmention.io/mendeddrum.org/963bb0503b80ca5fd92482a681029596724d14ba749a3876f9d1cb0cf7fd535c.jpg","url":"https://mastodonapp.uk/@Knitronomicon"},"url":"https://mendeddrum.org/@pdcawley/110887100738981381#favorited-by-109384143825681664","published":null,"wm-received":"2023-08-15T00:52:41Z","wm-id":1705074,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/110887100738981381/109384143825681664","wm-target":"https://bofh.org.uk/2023/08/14/week-note/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2023/08/14/week-note/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Simon St.Laurent","photo":"https://avatars.webmention.io/mendeddrum.org/77259943f6dda800130ad97ec6c4f45dab3a25bce08f286bdf43823f10dbb3cc.jpg","url":"https://mastodon.social/@simonstl"},"url":"https://mendeddrum.org/@pdcawley/110887100738981381#favorited-by-109312104472529164","published":null,"wm-received":"2023-08-15T00:52:43Z","wm-id":1705075,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/110887100738981381/109312104472529164","wm-target":"https://bofh.org.uk/2023/08/14/week-note/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2023/08/14/week-note/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/c9936b85ca7a5ef5a7fa80cf8fc96a0b79e8f2782124b97b374b6b8857ed0c4d.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/110888492788579376","published":"2023-08-14T14:42:00+00:00","wm-received":"2023-08-15T00:51:38Z","wm-id":1705072,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110887100738981381/110888492788579376","wm-target":"https://bofh.org.uk/2023/08/14/week-note/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://wandering.shop/@jepyang\" class=\"u-url\">@<span>jepyang</span></a></span> The original hardware is absolutely fabulous. Dedicated cab, colour(!) vector graphics (it was one of the earliest machines to use that display tech, I think), *perfectly* weighted spinner, gorgeously clicky buttons (quite small, not like modern arcade buttons at all, but great all the same).</p><p>And you're dead right about the hackiness of <a href=\"https://mendeddrum.org/tags/gameDad\">#<span>gameDad</span></a> gear. On a good day, I love it. On a bad day, I hate all the sharp edges ‚Äì I just want to play video games, dammit!</p>\n<a class=\"p-category\" href=\"https://mendeddrum.org/tags/gamedad\">gamedad</a>","text":"@jepyang The original hardware is absolutely fabulous. Dedicated cab, colour(!) vector graphics (it was one of the earliest machines to use that display tech, I think), *perfectly* weighted spinner, gorgeously clicky buttons (quite small, not like modern arcade buttons at all, but great all the same).And you're dead right about the hackiness of #gameDad gear. On a good day, I love it. On a bad day, I hate all the sharp edges ‚Äì I just want to play video games, dammit!\ngamedad"},"in-reply-to":"https://bofh.org.uk/2023/08/14/week-note/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jpyenag","photo":"https://avatars.webmention.io/mendeddrum.org/c95f35d95b5f5eafcc6433e7b9071c75bf7117690386e41c9f21f7672e7bb5bb.png","url":"https://wandering.shop/@jepyang"},"url":"https://wandering.shop/@jepyang/110888420509166355","published":"2023-08-14T14:23:38+00:00","wm-received":"2023-08-15T00:51:40Z","wm-id":1705073,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/110887100738981381/110888420583101592","wm-target":"https://bofh.org.uk/2023/08/14/week-note/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Oh jeez I had forgotten all about Tempest until right now. I never played the arcade version but had a port or clone of it for the family computer in the 90s.</p><p>I do really appreciate the hackiness of <a href=\"https://wandering.shop/tags/gameDad\">#<span>gameDad</span></a> hardware. Not opposed to more polish but it *is* really dang cool how everything is just‚Ä¶there‚Ä¶for you to play with as you like.</p>\n<a class=\"p-category\" href=\"https://mendeddrum.org/tags/gamedad\">gamedad</a>","text":"@pdcawley Oh jeez I had forgotten all about Tempest until right now. I never played the arcade version but had a port or clone of it for the family computer in the 90s.I do really appreciate the hackiness of #gameDad hardware. Not opposed to more polish but it *is* really dang cool how everything is just‚Ä¶there‚Ä¶for you to play with as you like.\ngamedad"},"in-reply-to":"https://bofh.org.uk/2023/08/14/week-note/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[{"type":"entry","author":{"type":"card","name":"Knitronomicon","photo":"https://avatars.webmention.io/mendeddrum.org/963bb0503b80ca5fd92482a681029596724d14ba749a3876f9d1cb0cf7fd535c.jpg","url":"https://mastodonapp.uk/@Knitronomicon"},"url":"https://mendeddrum.org/@pdcawley/110887100738981381#reblogged-by-109384143825681664","published":null,"wm-received":"2023-08-15T00:53:43Z","wm-id":1705076,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/110887100738981381/109384143825681664","wm-target":"https://bofh.org.uk/2023/08/14/week-note/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2023/08/14/week-note/","wm-property":"repost-of","wm-private":false}],"other":[]},"/pages/about/wishlist/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Patrick Dersjant RCX","photo":"https://avatars.webmention.io/mendeddrum.org/c9ed54844088771335efc7581bcbbb50896470ddba23164b1db185875764ea5c.jpg","url":"https://mendeddrum.org/@patrick"},"url":"https://mendeddrum.org/@patrick/112938835455984515","published":"2024-08-10T17:11:07+00:00","wm-received":"2024-08-11T15:49:24Z","wm-id":1842784,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112938835455984515","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> It absolutely is so. Discovered it through one of the early Masterchef winners who mentioned it in an interview. No recipes whatsoever, just an encyclopedia of working food combinations. If you can get hold of a paper copy, do so.</p>","text":"@pdcawley It absolutely is so. Discovered it through one of the early Masterchef winners who mentioned it in an interview. No recipes whatsoever, just an encyclopedia of working food combinations. If you can get hold of a paper copy, do so."},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Wendy M. Grossman","photo":"https://avatars.webmention.io/mendeddrum.org/ea855be81718de72fe3f1dfe6d3a212ef446ea33df8dd58de80f0dc06231d618.jpg","url":"https://mastodon.xyz/@wendyg"},"url":"https://mastodon.xyz/@wendyg/112939342226780673","published":"2024-08-10T19:19:59+00:00","wm-received":"2024-08-11T15:49:25Z","wm-id":1842785,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112939342258730979","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> ...I suggest to you <a href=\"https://www.pelicancrossing.net/lasttriphome.htm\"><span>https://www.</span><span>pelicancrossing.net/lasttripho</span><span>me.htm</span></a></p>\n<a href=\"https://www.pelicancrossing.net/lasttriphome.htm\">Wendy M. Grossman, the HTML Edition</a>","text":"@pdcawley ...I suggest to you https://www.pelicancrossing.net/lasttriphome.htm\nWendy M. Grossman, the HTML Edition"},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/42032a392ce9e3a3cdcb2ce62c8b25461bec725f830fcb178e0195bdc8d0c735.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/112938842146157053","published":"2024-08-10T17:12:49+00:00","wm-received":"2024-08-11T15:50:28Z","wm-id":1842786,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112938842146157053","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@patrick\" class=\"u-url\">@<span>patrick</span></a></span> thanks for the suggestion.</p>","text":"@patrick thanks for the suggestion."},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Patrick Dersjant RCX","photo":"https://avatars.webmention.io/mendeddrum.org/c9ed54844088771335efc7581bcbbb50896470ddba23164b1db185875764ea5c.jpg","url":"https://mendeddrum.org/@patrick"},"url":"https://mendeddrum.org/@patrick/112938814991231055","published":"2024-08-10T17:05:54+00:00","wm-received":"2024-08-11T15:50:29Z","wm-id":1842787,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112938814991231055","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Does the fact the Flavor Bible (ISBN 9780316118408) is missing from your list mean you have it already or just not discovered this absolute gem yet?</p>","text":"@pdcawley Does the fact the Flavor Bible (ISBN 9780316118408) is missing from your list mean you have it already or just not discovered this absolute gem yet?"},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/42032a392ce9e3a3cdcb2ce62c8b25461bec725f830fcb178e0195bdc8d0c735.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/112938826427954214","published":"2024-08-10T17:08:49+00:00","wm-received":"2024-08-11T15:51:31Z","wm-id":1842788,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112938826427954214","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@patrick\" class=\"u-url\">@<span>patrick</span></a></span> never heard of it, but it looks fascinating.</p>","text":"@patrick never heard of it, but it looks fascinating."},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Wendy M. Grossman","photo":"https://avatars.webmention.io/mendeddrum.org/ea855be81718de72fe3f1dfe6d3a212ef446ea33df8dd58de80f0dc06231d618.jpg","url":"https://mastodon.xyz/@wendyg"},"url":"https://mastodon.xyz/@wendyg/112939158807919891","published":"2024-08-10T18:33:21+00:00","wm-received":"2024-08-11T15:51:32Z","wm-id":1842789,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112939158831247089","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> Can you still play Cds?</p>","text":"@pdcawley Can you still play Cds?"},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/mendeddrum.org/42032a392ce9e3a3cdcb2ce62c8b25461bec725f830fcb178e0195bdc8d0c735.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/112939192233116775","published":"2024-08-10T18:41:51+00:00","wm-received":"2024-08-11T15:52:33Z","wm-id":1842790,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/112938786283024906/112939192233116775","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mastodon.xyz/@wendyg\" class=\"u-url\">@<span>wendyg</span></a></span> yup. But mostly I just rip them these days.</p>","text":"@wendyg yup. But mostly I just rip them these days."},"in-reply-to":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[{"type":"entry","author":{"type":"card","name":"Leafuw","photo":"https://avatars.webmention.io/mendeddrum.org/238725613be7601e878a341b344214e3fa902884d4fc0b287b850676158dbffa.png","url":"https://mstdn.party/@leafuw"},"url":"https://mendeddrum.org/@pdcawley/112938786283024906#reblogged-by-111943965231293387","published":null,"wm-received":"2024-08-11T15:52:34Z","wm-id":1842791,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/112938786283024906/111943965231293387","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Daniel B√∂hmer","photo":"https://avatars.webmention.io/mendeddrum.org/db1d635fb4356e493a52ae26f48c9f875d733a757cb82141ea43b0221d79f2d5.png","url":"https://ieji.de/@dboehmer"},"url":"https://mendeddrum.org/@pdcawley/112938786283024906#reblogged-by-109545888123950238","published":null,"wm-received":"2024-08-11T17:17:17Z","wm-id":1842793,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/112938786283024906/109545888123950238","wm-target":"https://bofh.org.uk/pages/about/wishlist/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/pages/about/wishlist/","wm-property":"repost-of","wm-private":false}],"other":[]},"/wishlist/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Dave Jacoby","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/99f0898c38c3094d8b885808b6c7f8858736c0bbd7055fdbbe1b2ff88bbf3fde.png","url":"https://mastodon.xyz/@jacobydave"},"url":"https://mendeddrum.org/@pdcawley/115028525488513556#favorited-by-109310178064213522","published":null,"wm-received":"2025-08-15T01:50:05Z","wm-id":1931349,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115028525488513556/109310178064213522","wm-target":"https://bofh.org.uk/wishlist/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/wishlist/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115028525488513556#favorited-by-109562941096076318","published":null,"wm-received":"2025-08-15T07:03:37Z","wm-id":1931368,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115028525488513556/109562941096076318","wm-target":"https://bofh.org.uk/wishlist/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/wishlist/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/book/adrian-tchaikovski-service-model/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115068842336056307#favorited-by-109562941096076318","published":null,"wm-received":"2025-08-22T08:52:17Z","wm-id":1932659,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115068842336056307/109562941096076318","wm-target":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/","published":"2025-08-21T21:08:00","wm-received":"2025-09-21T08:06:17Z","wm-id":1941315,"wm-source":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/index.html","wm-target":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/","wm-protocol":"webmention","name":"Service Model, by Adrian Tchaikovsky","summary":{"content-type":"text/plain","value":"A robot valet kills its master for no apparent reason, then heads off on a Pilgrim‚Äôs Progress to understand his malfunction."},"content":{"html":"<p>I‚Äôm very late to Tchaikovsky‚Äôs work and picked this up mostly because of an Audible recommendation. A very good recommendation it was too.</p><p>Charles is a robotic valet, and one morning, completely out of the blue, he slits his master‚Äôs throat in lieu of shaving him and (eventually) sets off on a pilgrimage to find out why. The world Charles exists in is‚Ä¶ broken and his journey to enlightenment is longer and stranger than he ever expected.</p><p>Charles is very definitely <em>not</em> human and his motivations are not exactly what you and I might think of as motivations. He has a task list. He is programmed to work through it. That is all.</p><p>He doesn‚Äôt want anything. He can‚Äôt feel anything. Not fear, hope, surprise, disappointment. And he‚Äôs okay with that. Well, he would be if ‚Äúbeing okay with something‚Äù were something he could do.</p><p>Because of Charles‚Äô inhuman viewpoint, part of the pleasure of the book is working out what‚Äôs going on that Charles is incapable of understanding.</p><p>It‚Äôs been a long time since I read <em>Pilgrim‚Äôs Progress</em>, but it‚Äôs definitely the work that <em>Service Model</em> reminds me of. Charles, despite murdering his master, is an innocent abroad, travelling through a series of encounters that he doesn‚Äôt necessarily understand in an effort to clear his task list.</p><p>It‚Äôs also bloody funny in a dry, despairing kind of way.</p><p><span>I listened to the audiobook</span>\nread by the author, which I can recommend highly. Tchaikovsky‚Äôs a great narrator with just the right level of emotional detachment, but the jokes still land beautifully. A very smooth listen.</p>","text":"I‚Äôm very late to Tchaikovsky‚Äôs work and picked this up mostly because of an Audible recommendation. A very good recommendation it was too.\n\nCharles is a robotic valet, and one morning, completely out of the blue, he slits his master‚Äôs throat in lieu of shaving him and (eventually) sets off on a pilgrimage to find out why. The world Charles exists in is‚Ä¶ broken and his journey to enlightenment is longer and stranger than he ever expected.\n\nCharles is very definitely not human and his motivations are not exactly what you and I might think of as motivations. He has a task list. He is programmed to work through it. That is all.\n\nHe doesn‚Äôt want anything. He can‚Äôt feel anything. Not fear, hope, surprise, disappointment. And he‚Äôs okay with that. Well, he would be if ‚Äúbeing okay with something‚Äù were something he could do.\n\nBecause of Charles‚Äô inhuman viewpoint, part of the pleasure of the book is working out what‚Äôs going on that Charles is incapable of understanding.\n\nIt‚Äôs been a long time since I read Pilgrim‚Äôs Progress, but it‚Äôs definitely the work that Service Model reminds me of. Charles, despite murdering his master, is an innocent abroad, travelling through a series of encounters that he doesn‚Äôt necessarily understand in an effort to clear his task list.\n\nIt‚Äôs also bloody funny in a dry, despairing kind of way.\n\nI listened to the audiobook\nread by the author, which I can recommend highly. Tchaikovsky‚Äôs a great narrator with just the right level of emotional detachment, but the jokes still land beautifully. A very smooth listen."},"mention-of":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/book/adrian-tchaikovski-service-model/"}}],"repost-of":[],"other":[]},"/2025/08/27/fiddling-with-structural-templates-in-org-mode/":{"like-of":[{"type":"entry","author":{"type":"card","name":"takeonrules","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/8a5dc4df706374a2ef2bfd33f0322c151982695095a99631eb755e8dcdf33db8.jpg","url":"https://dice.camp/@takeonrules"},"url":"https://mendeddrum.org/@pdcawley/115102749346275749#favorited-by-110702106639221650","published":null,"wm-received":"2025-08-27T21:32:53Z","wm-id":1933999,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115102749346275749/110702106639221650","wm-target":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115102749346275749#favorited-by-109562941096076318","published":null,"wm-received":"2025-08-28T08:25:00Z","wm-id":1934106,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115102749346275749/109562941096076318","wm-target":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","published":"2025-08-27T21:59:00","wm-received":"2025-09-21T08:03:01Z","wm-id":1941308,"wm-source":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/index.html","wm-target":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-protocol":"webmention","name":"Fiddling with structural templates in Org-mode","summary":{"content-type":"text/plain","value":"I spent a few hours reducing a small annoyance related to the way I use Emacs to maintain its literate configuration file by incrementally implementing slightly better processes until I reached the point where it was Good Enough to spend several more hours writing it up for the blog.\nNot an elevator pitch for Emacs."},"content":{"html":"<p>I‚Äôve been dealing with some enduring niggles in my literate Emacs configuration, and have just landed <a href=\"https://github.com/pdcawley/dotemacs/commit/dbc316bfca27a37319b5316ea1281ccbebd526aa\">Commit dbc316b</a>, and I thought I‚Äôd write about it here because it‚Äôs an example of what keeps me on Emacs more than thirty five years after I first started using it.</p><p>Back when I started, Emacs was merely a text editor that felt easier to use than <code>vi</code>, but these days, it‚Äôs all that and more. I don‚Äôt live in Emacs quite as much as I used to; I don‚Äôt hang on USENET or IRC any more, and I check my email as little as possible, so I‚Äôve not got around to configuring Emacs for that again.\n</p><p>Back in the day, it all went through the behemoth that is GNUS, but I lost that version of my <code>.emacs</code> file several computers and ISPs ago.</p>\nThese days, what I like about Emacs is it‚Äôs malleability. It‚Äôs not uniquely malleable, either. Vim and Neovim diehards will no doubt have tales to tell about their setups, but Emacs is my editor. There are others like it, but this is mine.<p>I‚Äôve been seduced by the Literate Programming idea of maintaining my <a href=\"https://github.com/pdcawley/dotemacs\"><code>~/.emacs</code></a>\n</p><p>Emacs used to keep its config in a file in your home directory called <code>.emacs</code>, then it moved to <code>~/.emacs.d/init.el</code>, which made it a little easier to break a big config out into multiple files. These days, Emacs looks first in <code>${XDG_CONFIG_HOME}/emacs</code>, which defaults to <code>~/.config/emacs</code> and that‚Äôs where my config files live today.</p>\nfile in a single <code>org-mode</code> file, which gets ‚Äôtangled‚Äô into <code>early-init.el</code> and <code>init.el</code>, which are the files that Emacs actually loads.<p>One feature of Org mode‚Äôs literate programming support that I rather like and take advantage of is the ability to write things out of order and assemble them correctly using <code>noweb</code>. The idea is that <code>src</code> blocks can be named, and then referenced from other source blocks. For instance, you might have:</p><pre><code><span><span>#+begin_src emacs-lisp\n</span></span></code></pre><pre><code><span><span><span>(</span><span>dolist</span> <span>(</span><span>template</span> <span>`</span><span>((</span><span>\"t\"</span> <span>\"Task with annotation\"</span> <span>entry</span>\n</span></span><span><span>                     <span>(</span><span>file</span> <span>,</span><span>pdc/org-inbox-file</span><span>)</span>\n</span></span><span><span>                     <span>\"* %?\\n:PROPERTIES:\\n:created: %U\\n:END:\\n\\n%i\\n\\n~ %a\"</span>\n</span></span><span><span>                     <span>:prepend</span> <span>t</span><span>)</span>\n</span></span><span><span>\n</span></span><span><span>                   <span>))</span>\n</span></span><span><span>    <span>(</span><span>add-to-list</span> <span>'org-capture-templates</span> <span>template</span> <span>t</span>\n</span></span><span><span>                 <span>(</span><span>lambda</span> <span>(</span><span>a</span> <span>b</span><span>)</span> <span>(</span><span>equal</span> <span>(</span><span>car</span> <span>a</span><span>)</span> <span>(</span><span>car</span> <span>b</span><span>)))))</span>\n</span></span></code></pre><pre><code><span><span>#+end_src\n</span></span></code></pre><p>which will eventually be tangled as a <code>dolist</code> that adds <em>all</em> your capture templates to <code>org-capture-templates</code>.</p><p>That <code>&lt;&lt;capture-templates&gt;&gt;</code> is what makes the magic happen. When we tangle <code>README.org</code>, the exporter gathers up the contents of any source blocks associated with the tag and replaces <code>&lt;&lt;capture-templates&gt;&gt;</code> with them\n</p><p>It applies some heuristics as well, which is why that <code>dolist</code> isn‚Äôt indented exactly how it would be without the noweb reference, but you can read the docs to find out more.</p>\nSo, elsewhere in my <code>README.org</code>, I can keep capture templates related to a particular app close to the rest of the configuration of that app, where it makes sense to me. For example, in the section where I configure my blogging tools, I do this:<pre><code><span><span>#+begin_src emacs-lisp :tangle nil :noweb-ref capture-templates\n</span></span></code></pre><pre><code><span><span><span>(</span><span>\"b\"</span> <span>\"bofh.org.uk post\"</span> <span>entry</span>\n</span></span><span><span> <span>(</span><span>file+headline</span> <span>,</span><span>(</span><span>pdc-site-posts-file</span> <span>\"bofh\"</span><span>)</span> <span>\"Posts\"</span><span>)</span>\n</span></span><span><span> <span>(</span><span>function</span> <span>+org-hugo-new-subtree-post-capture-template</span><span>))</span>\n</span></span></code></pre><pre><code><span><span>#+end_src\n</span></span></code></pre><p>Notice the header arguments. <code>:tangle nil</code> tells the exporter not to simply write the code out at the current position, and <code>:noweb-ref capture-templates</code> tells the exporter to instead write it out wherever it sees <code>&lt;&lt;capture-templates&gt;&gt;</code> in a source block.</p><p>We have to be careful to ensure that the including code gets run when and where all the values variables and functions used in the included fragment are in scope, which can be fiddly, but it‚Äôs definitely doable.</p><p><span>Which brings me to what I actually want to write about!</span>\nI don‚Äôt type all that <code>#+begin_src ‚Ä¶</code> stuff out by hand every time. Because doing that is simply asking for errors. Instead, I take advantage of an org feature called structure templates, so I have:</p><pre><code><span><span>#+begin_src emacs-lisp :tangle nil :noweb-ref org-structure-templates\n</span></span></code></pre><pre><code><span><span><span>(</span><span>add-to-list</span> <span>'org-structure-template-alist</span> <span>)</span>\n</span></span><span><span><span>'</span><span>(</span><span>\"el\"</span> <span>.</span> <span>\"src emacs-lisp\"</span><span>)</span>\n</span></span><span><span><span>'</span><span>(</span><span>\"ett\"</span> <span>.</span> <span>\"src emacs-lisp :tangle nil :noweb-ref\"</span><span>)</span>\n</span></span></code></pre><pre><code><span><span>#+end_src\n</span></span></code></pre><p>And, until slightly before I wrote this, I‚Äôd type <code>&lt;el</code> at the beginning of a line, hit TAB and org would expand that to</p><pre><code><span><span>#+begin_src emacs-lisp\n</span></span><span><span>\n</span></span><span><span>#+end_src\n</span></span></code></pre><p>And <code>&lt;ett</code> would expand to</p><pre><code><span><span>#+begin_src emacs-lisp :tangle nil :noweb-ref\n</span></span><span><span>\n</span></span><span><span>#+end_src\n</span></span></code></pre><p>Then I‚Äôd fill in the correct <code>:noweb-ref</code> and the appropriate code.</p><p>It was fine.</p><p>Well, it was better than typing it all by hand, but as soon as I‚Äôd expanded a template, I‚Äôd immediately hit <code>C-c '</code> to edit the code block in a separate buffer that was in the correct mode to edit Emacs Lisp (or whatever language the source block was for).</p><p>Eventually, I got annoyed enough by the repetition to work out how to make that happen automatically. Normally, I‚Äôd expect to add a function to a hook variable somewhere, but that doesn‚Äôt quite work here. Time to break out the Swiss Army Knife that is <code>advice-add</code>.</p><p>Here‚Äôs my first take:</p><pre><code><span><span><span>(</span><span>defun</span> <span>+org-insert-structure-template/after-advice</span> <span>(</span><span>&amp;rest</span> <span>_</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>when</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>org-edit-special</span><span>)))</span>\n</span></span><span><span><span>(</span><span>advice-add</span> <span>'tempo-insert-template</span> <span>:after</span> <span>#'</span><span>+org-insert-structure-template/after-advice</span><span>)</span>\n</span></span><span><span><span>(</span><span>advice-add</span> <span>'org-insert-structure-template</span> <span>#'</span><span>org-edit-special</span><span>)</span>\n</span></span></code></pre><p>We‚Äôre adding advice to two different functions here, because there are two different mechanisms for inserting a structure template, either via the <code>&lt;foo</code> expansion, or by calling <code>M-x org-insert-structure-template</code>, both of which I make use of on different occasions.</p><p><span>This version lasted a while.</span>\nIt did 90% of what I wanted after all. Indeed, for most of my structure templates, it does 100% of what I want.</p><p>But there‚Äôs always that one case, isn‚Äôt there? Take a look at that <code>ett</code> template from earlier. Notice that it‚Äôs missing the value to assign to <code>:noweb_ref</code>. In a perfect world, we should fill that in before we start editing the code. Or rely on remembering to do it after the fact. Because we <em>always</em> do that, don‚Äôt we?</p><p>So, this morning, that chunk of code looked a little like this.\n</p><p>I‚Äôve had to reconstruct the code from memory, I‚Äôm afraid because it never made it into the git repo. You can call me sloppy if you like, but this is personal code written on my own time, so you can fuck off.</p><pre><code><span><span><span>(</span><span>defun</span> <span>+org-insert-structure-template/after-advice</span> <span>(</span><span>&amp;rest</span> <span>_</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>when</span> <span>(</span><span>derived-mode-p</span> <span>'org-mode</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>let</span> <span>((</span><span>datum</span> <span>(</span><span>org-element-begin</span> <span>datum</span><span>)))</span>\n</span></span><span><span>      <span>(</span><span>save-excursion</span>\n</span></span><span><span>        <span>(</span><span>goto-char</span> <span>(</span><span>org-element-begin</span> <span>datum</span><span>))</span>\n</span></span><span><span>        <span>(</span><span>when</span> <span>(</span><span>re-search-forward</span>\n</span></span><span><span>               <span>\"\\\\(:\\\\S-+\\\\)\\\\s-*$\"</span> <span>(</span><span>pos-eol</span><span>)</span> <span>t</span><span>)</span>\n</span></span><span><span>          <span>(</span><span>let</span> <span>((</span><span>key</span> <span>(</span><span>match-string-no-properties</span> <span>1</span><span>)))</span>\n</span></span><span><span>            <span>(</span><span>end-of-line</span><span>)</span>\n</span></span><span><span>            <span>(</span><span>unless</span> <span>(</span><span>looking-back</span> <span>\"\\\\s-\"</span> <span>1</span><span>)</span>\n</span></span><span><span>              <span>(</span><span>insert</span> <span>\" \"</span><span>))</span>\n</span></span><span><span>            <span>(</span><span>insert</span> <span>(</span><span>read-from-minibuffer</span> <span>(</span><span>format</span> <span>\"%s: \"</span> <span>key</span><span>)))))))</span>\n</span></span><span><span>    <span>(</span><span>org-edit-special</span><span>)))</span>\n</span></span><span><span>\n</span></span><span><span><span>(</span><span>advice-add</span> <span>'tempo-insert-template</span>\n</span></span><span><span>            <span>:after</span> <span>#'</span><span>+org-insert-structure-template/after-advice</span><span>)</span>\n</span></span><span><span><span>(</span><span>advice-add</span> <span>'org-insert-structure-template</span>\n</span></span><span><span>            <span>:after</span> <span>#'</span><span>+org-insert-structure-template/after-advice</span><span>)</span>\n</span></span></code></pre><p>Because an org file is Just A Text File‚Ñ¢, we could have written this using Emacs‚Äô basic buffer editing commands, but we‚Äôll take advantage of some of org and <code>org-babel</code>‚Äôs helper functions to make life a little easier and (hopefully) to help me understand what I‚Äôm doing and why I‚Äôm doing it when I come back to the code later. Named behaviour is great\n</p><p><em>Especially</em> in a self-documenting editor like Emacs. If I‚Äôm not sure what a particular function in this code does, the documentation, or even the source code, is always a couple of keypresses away.</p>\nfor helping make code more understandable.<p>What we do here is save our place in the buffer, jump back to the very beginning of the source block and look at the header arguments. If they end with a property name (<code>:like-this</code>), then we deduce that more information is needed, so we use <code>read-from-minibuffer</code> to ask for it, add the answer to the end of the header arguments, jump back to wherever the template originally left us (by exiting the <code>save-excursion</code> block) and call <code>org-edit-special</code> to start editing the file in a dedicated buffer.</p><p><span>Job jobbed, no?</span></p><p>Well‚Ä¶ kinda. See, we‚Äôre filling in the value of <code>:noweb-ref</code> using an error prone free text value, rather than presenting a list of known noweb references to choose from. In the case where the unset parameter is <code>:noweb-ref</code>, we really want to use <code>completing-read</code>. A quick trawl through the existing code didn‚Äôt find a function to do what we want, nor did a web search. An org file‚Äôs Just A Text File though, and <code>org-babel-noweb-wrap</code> returns a regular expression that will match a noweb reference in the current file\n</p><p><code>&lt;&lt;reference&gt;&gt;</code> is the default form for a noweb ref, but the delimiters are overridable. At one point, I was using <code>¬´reference¬ª</code> rather than the defaults, so it‚Äôs handy to have a function that deals with that for us.</p>\nso we could save our place, jump to the beginning of the file and find every match for that regular expression and use that to build a <code>completing-read</code> candidates list. But <code>&lt;&lt;foo&gt;&gt;</code> is only a noweb reference if it‚Äôs in a source block, so we could end up with a bunch of false positives. We want to search through every source block, ignoring the rest of the file. Surely there‚Äôs already something in existence to let us do that since it‚Äôs the sort of thing that happens during the process of tangling a file.<p>A quick <code>M-x describe-function org babel src block</code> yields a bunch of interesting functions, including the promising sounding <code>org-babel-src-blocks</code>. The documentation reads:</p><pre><code><span><span>Signature\n</span></span><span><span>(org-babel-map-src-blocks FILE &amp;rest BODY)\n</span></span><span><span>\n</span></span><span><span>Documentation\n</span></span><span><span>Evaluate BODY forms on each source-block in FILE.\n</span></span><span><span>\n</span></span><span><span>‚Ä¶\n</span></span></code></pre><p>It goes on to explain that the body is evaluated with some useful variables set. The one we‚Äôre interested in is <code>body</code>, which is a ‚Äústring holding the body of the code block‚Äù. Sorted.</p><p>With that, and other helper functions, we can write:</p><pre><code><span><span><span>(</span><span>defun</span> <span>+org-babel-noweb-refs</span> <span>()</span>\n</span></span><span><span>  <span>\"Find all the noweb refs in the current buffer.\"</span>\n</span></span><span><span>  <span>(</span><span>require</span> <span>'s</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>require</span> <span>'dash</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>let</span> <span>((</span><span>match-exp</span> <span>(</span><span>org-babel-noweb-wrap</span><span>))</span>\n</span></span><span><span>        <span>result</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>org-babel-map-src-blocks</span> <span>nil</span>\n</span></span><span><span>      <span>(</span><span>let</span> <span>((</span><span>plain-body</span> <span>(</span><span>substring-no-properties</span> <span>body</span><span>)))</span>\n</span></span><span><span>        <span>(</span><span>setq</span> <span>result</span>\n</span></span><span><span>              <span>(</span><span>-concat</span>\n</span></span><span><span>               <span>result</span>\n</span></span><span><span>               <span>(</span><span>-map</span> <span>(</span><span>-partial</span> <span>#'</span><span>s-replace</span> <span>\"(.*)\\\\'\"</span> <span>\"\"</span><span>)</span>\n</span></span><span><span>                     <span>(</span><span>-map</span> <span>#'</span><span>second</span>\n</span></span><span><span>                           <span>(</span><span>s-match-strings-all</span>\n</span></span><span><span>                            <span>match-exp</span>\n</span></span><span><span>                            <span>plain-body</span><span>)))))))</span>\n</span></span><span><span>    <span>(</span><span>-sort</span> <span>#'</span><span>string&lt;</span> <span>result</span><span>)))</span>\n</span></span></code></pre><p>It‚Äôs a bit unsubtle, but it‚Äôs quick enough and accurate enough for my purposes. Then we can rewrite the relevant bit of our advice function along these lines:</p><pre><code><span><span><span>(</span><span>if</span> <span>(</span><span>re-search-forward</span> <span>\"\\\\(:\\\\S-+\\\\)\\\\s-*$\"</span> <span>(</span><span>pos-eol</span><span>)</span> <span>t</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>let*</span> <span>(</span><span>arg</span> <span>(</span><span>match-string-no-properties</span> <span>1</span><span>))</span>\n</span></span><span><span>      <span>(</span><span>value</span>\n</span></span><span><span>       <span>(</span><span>cond</span> <span>((</span><span>string=</span> <span>arg</span> <span>\":noweb-ref\"</span><span>)</span>\n</span></span><span><span>              <span>(</span><span>completing-read</span> <span>\":noweb-ref: \"</span>\n</span></span><span><span>                               <span>(</span><span>+org-babel-noweb-refs</span><span>)))</span>\n</span></span><span><span>             <span>(</span><span>t</span> <span>(</span><span>read-from-minibuffer</span> <span>(</span><span>concat</span> <span>arg</span> <span>\": \"</span><span>))))))</span>\n</span></span><span><span>  <span>(</span><span>end-of-line</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>unless</span> <span>(</span><span>looking-back</span> <span>\"\\\\s-\"</span> <span>1</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>insert</span> <span>\" \"</span><span>))</span>\n</span></span><span><span>  <span>(</span><span>insert-value</span><span>))</span>\n</span></span></code></pre><p>Note the use of <code>cond</code> here even though we could use a single <code>if</code>. I‚Äôm making it easier to special case behaviour for header arguments other than <code>:noweb-ref</code>. I‚Äôm probably not gonna need it, but it‚Äôs easy enough to be kind to the future me who <em>does</em> need it.</p><p><span>I‚Äôm sure your editor of preference</span>\ncan do something like this. If it can‚Äôt, then why on earth do you put up with it? I know Emacs though, and it it‚Äôs taken me longer to write about this whole process of eliminating a bump in my road than it did to implement the necessary functions and advice in the first place. I didn‚Äôt even have to restart Emacs, and it remained usable throughout the process\n</p><p>The code was actually written within a source block</p>\nbut it got smoother and smoother with every step.<p>I‚Äôm not the first person to point out how powerful Just A Text File can be, especially if you‚Äôve also got a huge pile of functions at your disposal to manipulate that file in useful ways and with mode specific semantics. Provided, of course, you‚Äôve got decent tools to search through that pile. Emacs is just such a pile of useful functions and is a great tool for sifting through it. Give it a go, why don‚Äôt you.</p><p>Take the time to look at how you use your editor. I‚Äôm sure some point of friction will come to mind. Then work out how to write some code that will make things a bit smoother. You‚Äôre not looking for perfect here, you‚Äôre looking for <em>better.</em> The remaining roughness will no doubt niggle at you enough for you to take another pass at sanding it down one day, but for now luxuriate in the fact you‚Äôve made life a little better for yourself.</p><p>I‚Äôd suggest that, if you keep doing that as part of your practice, you‚Äôll eventually have your tools working exactly how you want them to. But I‚Äôve been an Emacs user since 1988 and I‚Äôve yet to reach that point. But it‚Äôs about the journey, not the destination, isn‚Äôt it?</p>","text":"I‚Äôve been dealing with some enduring niggles in my literate Emacs configuration, and have just landed Commit dbc316b, and I thought I‚Äôd write about it here because it‚Äôs an example of what keeps me on Emacs more than thirty five years after I first started using it.\n\nBack when I started, Emacs was merely a text editor that felt easier to use than vi, but these days, it‚Äôs all that and more. I don‚Äôt live in Emacs quite as much as I used to; I don‚Äôt hang on USENET or IRC any more, and I check my email as little as possible, so I‚Äôve not got around to configuring Emacs for that again.\n\n\nBack in the day, it all went through the behemoth that is GNUS, but I lost that version of my .emacs file several computers and ISPs ago.\nThese days, what I like about Emacs is it‚Äôs malleability. It‚Äôs not uniquely malleable, either. Vim and Neovim diehards will no doubt have tales to tell about their setups, but Emacs is my editor. There are others like it, but this is mine.I‚Äôve been seduced by the Literate Programming idea of maintaining my ~/.emacs\n\n\nEmacs used to keep its config in a file in your home directory called .emacs, then it moved to ~/.emacs.d/init.el, which made it a little easier to break a big config out into multiple files. These days, Emacs looks first in ${XDG_CONFIG_HOME}/emacs, which defaults to ~/.config/emacs and that‚Äôs where my config files live today.\nfile in a single org-mode file, which gets ‚Äôtangled‚Äô into early-init.el and init.el, which are the files that Emacs actually loads.One feature of Org mode‚Äôs literate programming support that I rather like and take advantage of is the ability to write things out of order and assemble them correctly using noweb. The idea is that src blocks can be named, and then referenced from other source blocks. For instance, you might have:#+begin_src emacs-lisp\n(dolist (template `((\"t\" \"Task with annotation\" entry\n                     (file ,pdc/org-inbox-file)\n                     \"* %?\\n:PROPERTIES:\\n:created: %U\\n:END:\\n\\n%i\\n\\n~ %a\"\n                     :prepend t)\n\n                   ))\n    (add-to-list 'org-capture-templates template t\n                 (lambda (a b) (equal (car a) (car b)))))\n#+end_src\nwhich will eventually be tangled as a dolist that adds all your capture templates to org-capture-templates.\n\nThat <<capture-templates>> is what makes the magic happen. When we tangle README.org, the exporter gathers up the contents of any source blocks associated with the tag and replaces <<capture-templates>> with them\n\n\nIt applies some heuristics as well, which is why that dolist isn‚Äôt indented exactly how it would be without the noweb reference, but you can read the docs to find out more.\nSo, elsewhere in my README.org, I can keep capture templates related to a particular app close to the rest of the configuration of that app, where it makes sense to me. For example, in the section where I configure my blogging tools, I do this:#+begin_src emacs-lisp :tangle nil :noweb-ref capture-templates\n(\"b\" \"bofh.org.uk post\" entry\n (file+headline ,(pdc-site-posts-file \"bofh\") \"Posts\")\n (function +org-hugo-new-subtree-post-capture-template))\n#+end_src\nNotice the header arguments. :tangle nil tells the exporter not to simply write the code out at the current position, and :noweb-ref capture-templates tells the exporter to instead write it out wherever it sees <<capture-templates>> in a source block.\n\nWe have to be careful to ensure that the including code gets run when and where all the values variables and functions used in the included fragment are in scope, which can be fiddly, but it‚Äôs definitely doable.\n\nWhich brings me to what I actually want to write about!\nI don‚Äôt type all that #+begin_src ‚Ä¶ stuff out by hand every time. Because doing that is simply asking for errors. Instead, I take advantage of an org feature called structure templates, so I have:#+begin_src emacs-lisp :tangle nil :noweb-ref org-structure-templates\n(add-to-list 'org-structure-template-alist )\n'(\"el\" . \"src emacs-lisp\")\n'(\"ett\" . \"src emacs-lisp :tangle nil :noweb-ref\")\n#+end_src\nAnd, until slightly before I wrote this, I‚Äôd type <el at the beginning of a line, hit TAB and org would expand that to#+begin_src emacs-lisp\n\n#+end_src\nAnd <ett would expand to#+begin_src emacs-lisp :tangle nil :noweb-ref\n\n#+end_src\nThen I‚Äôd fill in the correct :noweb-ref and the appropriate code.\n\nIt was fine.\n\nWell, it was better than typing it all by hand, but as soon as I‚Äôd expanded a template, I‚Äôd immediately hit C-c ' to edit the code block in a separate buffer that was in the correct mode to edit Emacs Lisp (or whatever language the source block was for).\n\nEventually, I got annoyed enough by the repetition to work out how to make that happen automatically. Normally, I‚Äôd expect to add a function to a hook variable somewhere, but that doesn‚Äôt quite work here. Time to break out the Swiss Army Knife that is advice-add.\n\nHere‚Äôs my first take:(defun +org-insert-structure-template/after-advice (&rest _)\n  (when (derived-mode-p 'org-mode)\n    (org-edit-special)))\n(advice-add 'tempo-insert-template :after #'+org-insert-structure-template/after-advice)\n(advice-add 'org-insert-structure-template #'org-edit-special)\nWe‚Äôre adding advice to two different functions here, because there are two different mechanisms for inserting a structure template, either via the <foo expansion, or by calling M-x org-insert-structure-template, both of which I make use of on different occasions.\n\nThis version lasted a while.\nIt did 90% of what I wanted after all. Indeed, for most of my structure templates, it does 100% of what I want.\n\nBut there‚Äôs always that one case, isn‚Äôt there? Take a look at that ett template from earlier. Notice that it‚Äôs missing the value to assign to :noweb_ref. In a perfect world, we should fill that in before we start editing the code. Or rely on remembering to do it after the fact. Because we always do that, don‚Äôt we?\n\nSo, this morning, that chunk of code looked a little like this.\n\n\nI‚Äôve had to reconstruct the code from memory, I‚Äôm afraid because it never made it into the git repo. You can call me sloppy if you like, but this is personal code written on my own time, so you can fuck off.(defun +org-insert-structure-template/after-advice (&rest _)\n  (when (derived-mode-p 'org-mode)\n    (let ((datum (org-element-begin datum)))\n      (save-excursion\n        (goto-char (org-element-begin datum))\n        (when (re-search-forward\n               \"\\\\(:\\\\S-+\\\\)\\\\s-*$\" (pos-eol) t)\n          (let ((key (match-string-no-properties 1)))\n            (end-of-line)\n            (unless (looking-back \"\\\\s-\" 1)\n              (insert \" \"))\n            (insert (read-from-minibuffer (format \"%s: \" key)))))))\n    (org-edit-special)))\n\n(advice-add 'tempo-insert-template\n            :after #'+org-insert-structure-template/after-advice)\n(advice-add 'org-insert-structure-template\n            :after #'+org-insert-structure-template/after-advice)\nBecause an org file is Just A Text File‚Ñ¢, we could have written this using Emacs‚Äô basic buffer editing commands, but we‚Äôll take advantage of some of org and org-babel‚Äôs helper functions to make life a little easier and (hopefully) to help me understand what I‚Äôm doing and why I‚Äôm doing it when I come back to the code later. Named behaviour is great\n\n\nEspecially in a self-documenting editor like Emacs. If I‚Äôm not sure what a particular function in this code does, the documentation, or even the source code, is always a couple of keypresses away.\nfor helping make code more understandable.What we do here is save our place in the buffer, jump back to the very beginning of the source block and look at the header arguments. If they end with a property name (:like-this), then we deduce that more information is needed, so we use read-from-minibuffer to ask for it, add the answer to the end of the header arguments, jump back to wherever the template originally left us (by exiting the save-excursion block) and call org-edit-special to start editing the file in a dedicated buffer.\n\nJob jobbed, no?\n\nWell‚Ä¶ kinda. See, we‚Äôre filling in the value of :noweb-ref using an error prone free text value, rather than presenting a list of known noweb references to choose from. In the case where the unset parameter is :noweb-ref, we really want to use completing-read. A quick trawl through the existing code didn‚Äôt find a function to do what we want, nor did a web search. An org file‚Äôs Just A Text File though, and org-babel-noweb-wrap returns a regular expression that will match a noweb reference in the current file\n\n\n<<reference>> is the default form for a noweb ref, but the delimiters are overridable. At one point, I was using ¬´reference¬ª rather than the defaults, so it‚Äôs handy to have a function that deals with that for us.\nso we could save our place, jump to the beginning of the file and find every match for that regular expression and use that to build a completing-read candidates list. But <<foo>> is only a noweb reference if it‚Äôs in a source block, so we could end up with a bunch of false positives. We want to search through every source block, ignoring the rest of the file. Surely there‚Äôs already something in existence to let us do that since it‚Äôs the sort of thing that happens during the process of tangling a file.A quick M-x describe-function org babel src block yields a bunch of interesting functions, including the promising sounding org-babel-src-blocks. The documentation reads:Signature\n(org-babel-map-src-blocks FILE &rest BODY)\n\nDocumentation\nEvaluate BODY forms on each source-block in FILE.\n\n‚Ä¶\nIt goes on to explain that the body is evaluated with some useful variables set. The one we‚Äôre interested in is body, which is a ‚Äústring holding the body of the code block‚Äù. Sorted.\n\nWith that, and other helper functions, we can write:(defun +org-babel-noweb-refs ()\n  \"Find all the noweb refs in the current buffer.\"\n  (require 's)\n  (require 'dash)\n  (let ((match-exp (org-babel-noweb-wrap))\n        result)\n    (org-babel-map-src-blocks nil\n      (let ((plain-body (substring-no-properties body)))\n        (setq result\n              (-concat\n               result\n               (-map (-partial #'s-replace \"(.*)\\\\'\" \"\")\n                     (-map #'second\n                           (s-match-strings-all\n                            match-exp\n                            plain-body)))))))\n    (-sort #'string< result)))\nIt‚Äôs a bit unsubtle, but it‚Äôs quick enough and accurate enough for my purposes. Then we can rewrite the relevant bit of our advice function along these lines:(if (re-search-forward \"\\\\(:\\\\S-+\\\\)\\\\s-*$\" (pos-eol) t)\n    (let* (arg (match-string-no-properties 1))\n      (value\n       (cond ((string= arg \":noweb-ref\")\n              (completing-read \":noweb-ref: \"\n                               (+org-babel-noweb-refs)))\n             (t (read-from-minibuffer (concat arg \": \"))))))\n  (end-of-line)\n  (unless (looking-back \"\\\\s-\" 1)\n    (insert \" \"))\n  (insert-value))\nNote the use of cond here even though we could use a single if. I‚Äôm making it easier to special case behaviour for header arguments other than :noweb-ref. I‚Äôm probably not gonna need it, but it‚Äôs easy enough to be kind to the future me who does need it.\n\nI‚Äôm sure your editor of preference\ncan do something like this. If it can‚Äôt, then why on earth do you put up with it? I know Emacs though, and it it‚Äôs taken me longer to write about this whole process of eliminating a bump in my road than it did to implement the necessary functions and advice in the first place. I didn‚Äôt even have to restart Emacs, and it remained usable throughout the process\n\n\nThe code was actually written within a source block\nbut it got smoother and smoother with every step.I‚Äôm not the first person to point out how powerful Just A Text File can be, especially if you‚Äôve also got a huge pile of functions at your disposal to manipulate that file in useful ways and with mode specific semantics. Provided, of course, you‚Äôve got decent tools to search through that pile. Emacs is just such a pile of useful functions and is a great tool for sifting through it. Give it a go, why don‚Äôt you.\n\nTake the time to look at how you use your editor. I‚Äôm sure some point of friction will come to mind. Then work out how to write some code that will make things a bit smoother. You‚Äôre not looking for perfect here, you‚Äôre looking for better. The remaining roughness will no doubt niggle at you enough for you to take another pass at sanding it down one day, but for now luxuriate in the fact you‚Äôve made life a little better for yourself.\n\nI‚Äôd suggest that, if you keep doing that as part of your practice, you‚Äôll eventually have your tools working exactly how you want them to. But I‚Äôve been an Emacs user since 1988 and I‚Äôve yet to reach that point. But it‚Äôs about the journey, not the destination, isn‚Äôt it?"},"mention-of":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/2025/08/27/fiddling-with-structural-templates-in-org-mode/"}}],"repost-of":[],"other":[]},"/note/6/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Nick Anderson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg","url":"https://fosstodon.org/@nickanderson"},"url":"https://mendeddrum.org/@pdcawley/115107421781297473#favorited-by-109475479621313511","published":null,"wm-received":"2025-08-28T21:48:52Z","wm-id":1934308,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115107421781297473/109475479621313511","wm-target":"https://bofh.org.uk/note/6/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/6/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Amir Rajan","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/2c9b88aefa6afc36e974624d9e77f60edd7ad57a4054ee5d32682dfcd338699d.png","url":"https://ruby.social/@amirrajan"},"url":"https://ruby.social/@amirrajan/115107479050022605","published":"2025-08-28T17:05:42+00:00","wm-received":"2025-08-28T17:08:17Z","wm-id":1934231,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115107479166998349","wm-target":"https://bofh.org.uk/note/6/","wm-protocol":"webmention","video":["https://cdn.masto.host/rubysocial/media_attachments/files/115/107/478/695/576/009/original/201ba662099c75bb.mp4"],"content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span></p>","text":"@pdcawley"},"in-reply-to":"https://bofh.org.uk/note/6/","wm-property":"in-reply-to","wm-private":false},{"type":"entry","author":{"type":"card","name":"Nick Anderson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg","url":"https://fosstodon.org/@nickanderson"},"url":"https://fosstodon.org/@nickanderson/115108589417986943","published":"2025-08-28T21:48:05+00:00","wm-received":"2025-08-28T21:48:51Z","wm-id":1934307,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115108589456284711","wm-target":"https://bofh.org.uk/note/6/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@pdcawley\" class=\"u-url\">@<span>pdcawley</span></a></span> I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice</p>","text":"@pdcawley I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice"},"in-reply-to":"https://bofh.org.uk/note/6/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[],"other":[]},"/note/7/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Daniel Kelly Music","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png","url":"https://aus.social/@yasslad"},"url":"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078","published":null,"wm-received":"2025-09-07T01:31:46Z","wm-id":1936817,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078","wm-target":"https://bofh.org.uk/note/7/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/7/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318","published":null,"wm-received":"2025-09-07T07:19:01Z","wm-id":1936873,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318","wm-target":"https://bofh.org.uk/note/7/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/7/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/note/8/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Mike Spencer","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/3ba5a0fdc660c44995fef428a601770fd0fe2619fc1f8c7e70ec7e9e1da66d4b.jpg","url":"https://mastodon.scot/@mikerspencer"},"url":"https://mendeddrum.org/@pdcawley/115162152891409560#favorited-by-109365771998686190","published":null,"wm-received":"2025-09-07T09:35:22Z","wm-id":1936897,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115162152891409560/109365771998686190","wm-target":"https://bofh.org.uk/note/8/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/8/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/2025/09/07/fetching-webmentions-again-with-emacs/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Joe Crawford","photo":"https://avatars.webmention.io/artlung.com/a0b5bad7e1082e08dc5e72e7f4760d40596782e04895da8b740023e7c1904d15.jpg","url":""},"url":"https://artlung.com","published":"2025-09-07T17:26:10+00:00","wm-received":"2025-09-07T17:26:21Z","wm-id":1937615,"wm-source":"https://artlung.com/likes/8586deab1e8751d25337163c77bbbb0d","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"like-of","wm-private":false,"rels":{"canonical":"https://artlung.com/likes/8586deab1e8751d25337163c77bbbb0d"}},{"type":"entry","author":{"type":"card","name":"Random Geek","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/bd4169674266fc6cc25215fbec9e6b96b34fd934a9201885b490a3b20b4467dd.jpg","url":"https://masto.hackers.town/@randomgeek"},"url":"https://mendeddrum.org/@pdcawley/115164138009432927#favorited-by-114326313584660135","published":null,"wm-received":"2025-09-07T18:32:36Z","wm-id":1937630,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115164138009432927/114326313584660135","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"DDR","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/fed3f789fcce79e8dfa53aaffeeca34bc8921de1e12c1ad065a091a2ec1761ec.png","url":"https://pony.social/@ddr"},"url":"https://mendeddrum.org/@pdcawley/115164138009432927#favorited-by-109330106129806749","published":null,"wm-received":"2025-09-07T19:05:55Z","wm-id":1937641,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115164138009432927/109330106129806749","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Zack Weinberg","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/2dad6d5566bca94dc85f4c235b16c7a8a397d8efc6844bda33a4ca056f6d389b.png","url":"https://masto.hackers.town/@zwol"},"url":"https://mendeddrum.org/@pdcawley/115164138009432927#favorited-by-114337131093530193","published":null,"wm-received":"2025-09-08T15:38:48Z","wm-id":1937758,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115164138009432927/114337131093530193","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","published":"2025-09-07T17:17:00","wm-received":"2025-09-21T08:03:05Z","wm-id":1941309,"wm-source":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/index.html","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","name":"Fetching webmentions again. With Emacs this time!","summary":{"content-type":"text/plain","value":"I‚Äôve reinstated webmention processing here and have semi-automated it with a pile of Emacs Lisp and a Makefile, so I thought I‚Äôd write up some of the gory details.\nPart 1 of‚Ä¶ some?"},"content":{"html":"<p>You might have noticed, if you‚Äôre a regular visitor that webmentions have started showing up on the site again. I turned them off a while ago, </p><p>I turned off the home server that was handling the web hook calls from Webmention.io, planning to quickly move it and spin it up again. Ask me how that‚Äôs going.</p>\nbut <a href=\"https://aaronparecki.com\">Aaron Parecki</a>‚Äôs invaluable <a href=\"https://webmention.io\">Webmention.io</a> service has still been gathering them for me, so I‚Äôve turned them back on. But in the mean time, I mislaid the code I was using to populate the necessary Hugo data files from Webmention. Exploratory code ahoy.<h2>Start by faking it</h2><p>I‚Äôm heavily indebted to <a href=\"https://masto.hackers.town/@randomgeek\">Brian Wisti</a> for his post, <a href=\"https://randomgeekery.org/post/2020/11/using-the-webmention.io-api/\">Using the Webmention.io API</a> as the starting point to my explorations, but since I can‚Äôt be doing with Python, I used emacs.</p><p>I started with my very minor fork of <a href=\"https://github.com/pdcawley/restclient.el\"><code>restclient</code></a></p><p><a></a></p><pre><code># Grab the most recent 5 webmentions of bofh.org.uk\nGET https://webmention.io/api/mentions.jf2?domain=bofh.org.uk&amp;sort-dir=down&amp;per-page=5&amp;token=:token\n</code></pre><p>Which produces the following JSON data:</p>Disclose this for the full wall of JSON<p>Don‚Äôt say you weren‚Äôt warned!</p><pre><code><span><span><span>{</span>\n</span></span><span><span>  <span>\"type\"</span><span>:</span> <span>\"feed\"</span><span>,</span>\n</span></span><span><span>  <span>\"name\"</span><span>:</span> <span>\"Webmentions\"</span><span>,</span>\n</span></span><span><span>  <span>\"children\"</span><span>:</span> <span>[</span>\n</span></span><span><span>    <span>{</span>\n</span></span><span><span>      <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>      <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>        <span>\"name\"</span><span>:</span> <span>\"Mike Spencer\"</span><span>,</span>\n</span></span><span><span>        <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/3ba5a0fdc660c44995fef428a601770fd0fe2619fc1f8c7e70ec7e9e1da66d4b.jpg\"</span><span>,</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mastodon.scot/@mikerspencer\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115162152891409560#favorited-by-109365771998686190\"</span><span>,</span>\n</span></span><span><span>      <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>      <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T09:35:22Z\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-id\"</span><span>:</span> <span>1936897</span><span>,</span>\n</span></span><span><span>      <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115162152891409560/109365771998686190\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>      <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>    <span>},</span>\n</span></span><span><span>    <span>{</span>\n</span></span><span><span>      <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>      <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>        <span>\"name\"</span><span>:</span> <span>\"Jess Robinson\"</span><span>,</span>\n</span></span><span><span>        <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"</span><span>,</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@castaway\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"</span><span>,</span>\n</span></span><span><span>      <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>      <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T07:19:01Z\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-id\"</span><span>:</span> <span>1936873</span><span>,</span>\n</span></span><span><span>      <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>      <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>    <span>},</span>\n</span></span><span><span>    <span>{</span>\n</span></span><span><span>      <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>      <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>        <span>\"name\"</span><span>:</span> <span>\"Daniel Kelly Music\"</span><span>,</span>\n</span></span><span><span>        <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"</span><span>,</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://aus.social/@yasslad\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"</span><span>,</span>\n</span></span><span><span>      <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>      <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T01:31:46Z\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-id\"</span><span>:</span> <span>1936817</span><span>,</span>\n</span></span><span><span>      <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>      <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>    <span>},</span>\n</span></span><span><span>    <span>{</span>\n</span></span><span><span>      <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>      <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>        <span>\"name\"</span><span>:</span> <span>\"Nick Anderson\"</span><span>,</span>\n</span></span><span><span>        <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"</span><span>,</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@nickanderson\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115107421781297473#favorited-by-109475479621313511\"</span><span>,</span>\n</span></span><span><span>      <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>      <span>\"wm-received\"</span><span>:</span> <span>\"2025-08-28T21:48:52Z\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-id\"</span><span>:</span> <span>1934308</span><span>,</span>\n</span></span><span><span>      <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115107421781297473/109475479621313511\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/6/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>      <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/6/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>    <span>},</span>\n</span></span><span><span>    <span>{</span>\n</span></span><span><span>      <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>      <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>        <span>\"name\"</span><span>:</span> <span>\"Nick Anderson\"</span><span>,</span>\n</span></span><span><span>        <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"</span><span>,</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@nickanderson\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@nickanderson/115108589417986943\"</span><span>,</span>\n</span></span><span><span>      <span>\"published\"</span><span>:</span> <span>\"2025-08-28T21:48:05+00:00\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-received\"</span><span>:</span> <span>\"2025-08-28T21:48:51Z\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-id\"</span><span>:</span> <span>1934307</span><span>,</span>\n</span></span><span><span>      <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115108589456284711\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/6/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>      <span>\"content\"</span><span>:</span> <span>{</span>\n</span></span><span><span>        <span>\"html\"</span><span>:</span> <span>\"&lt;p&gt;&lt;span class=\\\"h-card\\\"&gt;&lt;a href=\\\"https://mendeddrum.org/@pdcawley\\\" class=\\\"u-url\\\"&gt;@&lt;span&gt;pdcawley&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice&lt;/p&gt;\"</span><span>,</span>\n</span></span><span><span>        <span>\"text\"</span><span>:</span> <span>\"@pdcawley I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice\"</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>\"in-reply-to\"</span><span>:</span> <span>\"https://bofh.org.uk/note/6/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"in-reply-to\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>    <span>}</span>\n</span></span><span><span>  <span>]</span>\n</span></span><span><span><span>}</span>\n</span></span></code></pre><p>The essential shape is something like this:</p><pre><code><span><span><span>{</span> <span>\"type\"</span><span>:</span> <span>\"feed\"</span><span>,</span>\n</span></span><span><span>  <span>\"name\"</span><span>:</span> <span>\"Webmentions\"</span><span>,</span>\n</span></span><span><span>  <span>\"children\"</span><span>:</span> <span>[</span>\n</span></span><span><span>    <span>{</span> <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>      <span>...</span> <span>},</span>\n</span></span><span><span>    <span>{</span> <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>,</span>\n</span></span><span><span>      <span>\"wm-property\"</span><span>:</span> <span>\"in-reply-to\"</span><span>,</span>\n</span></span><span><span>      <span>...</span> <span>},</span>\n</span></span><span><span>    <span>...</span> <span>}</span><span>]}</span>\n</span></span></code></pre><p>Restclient is great for interactively exploring a RESTful API, but it‚Äôs not so great for slicing and dicing the data in a Emacs-y way. I could sit down and learn <code>jq</code> again, but I know Lisp, dammit, so after a frustrating hour or so trying to wrap my head around the default <code>url-retrieve</code> interfaces, I went and grabbed the <a href=\"https://github.com/tkf/emacs-request\"><code>emacs-request</code></a> package instead because I found its API more comprehensible.</p><p>Because <code>request</code> is a function where <code>restclient</code> is more like an application running in Emacs, it‚Äôs way more useful for automating things. Here‚Äôs more or less the same request as above done in Lisp.</p><p><a></a></p><pre><code><span><span><span>(</span><span>let</span> <span>(</span><span>response</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>request</span>\n</span></span><span><span>    <span>\"https://webmention.io/api/mentions.jf2\"</span>\n</span></span><span><span>    <span>:params</span> <span>`</span><span>((</span><span>\"domain\"</span> <span>.</span> <span>\"bofh.org.uk\"</span><span>)</span>\n</span></span><span><span>              <span>(</span><span>\"token\"</span> <span>.</span> <span>,</span><span>wm-api-token</span><span>)</span>\n</span></span><span><span>              <span>(</span><span>\"per-page\"</span> <span>.</span> <span>\"5\"</span><span>)</span>\n</span></span><span><span>              <span>(</span><span>\"sort-dir\"</span> <span>.</span> <span>\"down\"</span><span>))</span>\n</span></span><span><span>    <span>:parser</span> <span>'json-parse-buffer</span>\n</span></span><span><span>    <span>:sync</span> <span>t</span>\n</span></span><span><span>    <span>:success</span> <span>(</span><span>cl-function</span>\n</span></span><span><span>              <span>(</span><span>lambda</span> <span>(</span><span>&amp;key</span> <span>data</span> <span>&amp;allow-other-keys</span><span>)</span>\n</span></span><span><span>                <span>(</span><span>setq</span> <span>response</span> <span>data</span><span>))))</span>\n</span></span><span><span>  <span>response</span><span>)</span>\n</span></span></code></pre><p>The code is obviously fiddlier, but it‚Äôs also programmable and, because we set an arbitrary <code>:parser</code> function, it‚Äôs trivial to convert the returned JSON into a native Emacs lisp hash table\n</p><p>It‚Äôs not hard to generate an old school alist either, but that was annoyingly hard to serialise back to JSON, so I went with the default types because they seem to just work.</p>\nwhich looks a bit like this:A wall of Lisp<pre><code><span><span>#s(hash-table test equal data\n</span></span><span><span>              (\"type\" \"feed\" \"name\" \"Webmentions\" \"children\"\n</span></span><span><span>               [#s(hash-table test equal data\n</span></span><span><span>                              (\"type\" \"entry\" \"author\"\n</span></span><span><span>                               #s(hash-table test equal data\n</span></span><span><span>                                             (\"type\" \"card\" \"name\"\n</span></span><span><span>                                              \"Mike Spencer\" \"photo\"\n</span></span><span><span>                                              \"https://avatars.webmention.io/fsn1.your-objectstorage.com/3ba5a0fdc660c44995fef428a601770fd0fe2619fc1f8c7e70ec7e9e1da66d4b.jpg\"\n</span></span><span><span>                                              \"url\"\n</span></span><span><span>                                              \"https://mastodon.scot/@mikerspencer\"))\n</span></span><span><span>                               \"url\"\n</span></span><span><span>                               \"https://mendeddrum.org/@pdcawley/115162152891409560#favorited-by-109365771998686190\"\n</span></span><span><span>                               \"published\" :null \"wm-received\"\n</span></span><span><span>                               \"2025-09-07T09:35:22Z\" \"wm-id\" 1936897\n</span></span><span><span>                               \"wm-source\"\n</span></span><span><span>                               \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115162152891409560/109365771998686190\"\n</span></span><span><span>                               \"wm-target\" \"https://bofh.org.uk/note/8/\"\n</span></span><span><span>                               \"wm-protocol\" \"webmention\" \"like-of\"\n</span></span><span><span>                               \"https://bofh.org.uk/note/8/\" \"wm-property\"\n</span></span><span><span>                               \"like-of\" \"wm-private\" :false))\n</span></span><span><span>                  #s(hash-table test equal data\n</span></span><span><span>                                (\"type\" \"entry\" \"author\"\n</span></span><span><span>                                 #s(hash-table test equal data\n</span></span><span><span>                                               (\"type\" \"card\" \"name\"\n</span></span><span><span>                                                \"Jess Robinson\" \"photo\"\n</span></span><span><span>                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"\n</span></span><span><span>                                                \"url\"\n</span></span><span><span>                                                \"https://fosstodon.org/@castaway\"))\n</span></span><span><span>                                 \"url\"\n</span></span><span><span>                                 \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"\n</span></span><span><span>                                 \"published\" :null \"wm-received\"\n</span></span><span><span>                                 \"2025-09-07T07:19:01Z\" \"wm-id\" 1936873\n</span></span><span><span>                                 \"wm-source\"\n</span></span><span><span>                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"\n</span></span><span><span>                                 \"wm-target\" \"https://bofh.org.uk/note/7/\"\n</span></span><span><span>                                 \"wm-protocol\" \"webmention\" \"like-of\"\n</span></span><span><span>                                 \"https://bofh.org.uk/note/7/\" \"wm-property\"\n</span></span><span><span>                                 \"like-of\" \"wm-private\" :false))\n</span></span><span><span>                  #s(hash-table test equal data\n</span></span><span><span>                                (\"type\" \"entry\" \"author\"\n</span></span><span><span>                                 #s(hash-table test equal data\n</span></span><span><span>                                               (\"type\" \"card\" \"name\"\n</span></span><span><span>                                                \"Daniel Kelly Music\" \"photo\"\n</span></span><span><span>                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"\n</span></span><span><span>                                                \"url\"\n</span></span><span><span>                                                \"https://aus.social/@yasslad\"))\n</span></span><span><span>                                 \"url\"\n</span></span><span><span>                                 \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"\n</span></span><span><span>                                 \"published\" :null \"wm-received\"\n</span></span><span><span>                                 \"2025-09-07T01:31:46Z\" \"wm-id\" 1936817\n</span></span><span><span>                                 \"wm-source\"\n</span></span><span><span>                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"\n</span></span><span><span>                                 \"wm-target\" \"https://bofh.org.uk/note/7/\"\n</span></span><span><span>                                 \"wm-protocol\" \"webmention\" \"like-of\"\n</span></span><span><span>                                 \"https://bofh.org.uk/note/7/\" \"wm-property\"\n</span></span><span><span>                                 \"like-of\" \"wm-private\" :false))\n</span></span><span><span>                  #s(hash-table test equal data\n</span></span><span><span>                                (\"type\" \"entry\" \"author\"\n</span></span><span><span>                                 #s(hash-table test equal data\n</span></span><span><span>                                               (\"type\" \"card\" \"name\"\n</span></span><span><span>                                                \"Nick Anderson\" \"photo\"\n</span></span><span><span>                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"\n</span></span><span><span>                                                \"url\"\n</span></span><span><span>                                                \"https://fosstodon.org/@nickanderson\"))\n</span></span><span><span>                                 \"url\"\n</span></span><span><span>                                 \"https://mendeddrum.org/@pdcawley/115107421781297473#favorited-by-109475479621313511\"\n</span></span><span><span>                                 \"published\" :null \"wm-received\"\n</span></span><span><span>                                 \"2025-08-28T21:48:52Z\" \"wm-id\" 1934308\n</span></span><span><span>                                 \"wm-source\"\n</span></span><span><span>                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115107421781297473/109475479621313511\"\n</span></span><span><span>                                 \"wm-target\" \"https://bofh.org.uk/note/6/\"\n</span></span><span><span>                                 \"wm-protocol\" \"webmention\" \"like-of\"\n</span></span><span><span>                                 \"https://bofh.org.uk/note/6/\" \"wm-property\"\n</span></span><span><span>                                 \"like-of\" \"wm-private\" :false))\n</span></span><span><span>                  #s(hash-table test equal data\n</span></span><span><span>                                (\"type\" \"entry\" \"author\"\n</span></span><span><span>                                 #s(hash-table test equal data\n</span></span><span><span>                                               (\"type\" \"card\" \"name\"\n</span></span><span><span>                                                \"Nick Anderson\" \"photo\"\n</span></span><span><span>                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"\n</span></span><span><span>                                                \"url\"\n</span></span><span><span>                                                \"https://fosstodon.org/@nickanderson\"))\n</span></span><span><span>                                 \"url\"\n</span></span><span><span>                                 \"https://fosstodon.org/@nickanderson/115108589417986943\"\n</span></span><span><span>                                 \"published\" \"2025-08-28T21:48:05+00:00\"\n</span></span><span><span>                                 \"wm-received\" \"2025-08-28T21:48:51Z\" \"wm-id\"\n</span></span><span><span>                                 1934307 \"wm-source\"\n</span></span><span><span>                                 \"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115108589456284711\"\n</span></span><span><span>                                 \"wm-target\" \"https://bofh.org.uk/note/6/\"\n</span></span><span><span>                                 \"wm-protocol\" \"webmention\" \"content\"\n</span></span><span><span>                                 #s(hash-table test equal data\n</span></span><span><span>                                               (\"html\"\n</span></span><span><span>                                                \"&lt;p&gt;&lt;span class=\\\"h-card\\\"&gt;&lt;a href=\\\"https://mendeddrum.org/@pdcawley\\\" class=\\\"u-url\\\"&gt;@&lt;span&gt;pdcawley&lt;/span&gt;&lt;/a&gt;&lt;/span&gt; I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice&lt;/p&gt;\"\n</span></span><span><span>                                                \"text\"\n</span></span><span><span>                                                \"@pdcawley I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice\"))\n</span></span><span><span>                                 \"in-reply-to\" \"https://bofh.org.uk/note/6/\"\n</span></span><span><span>                                 \"wm-property\" \"in-reply-to\" \"wm-private\"\n</span></span><span><span>                                 :false))]))\n</span></span></code></pre><p>Verbose as hell, but something we can work with. Here‚Äôs a simplified alist representation which might be a little easier to understand.</p><pre><code><span><span><span>'</span><span>((</span><span>type</span> <span>.</span> <span>\"feed\"</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>name</span> <span>.</span> <span>\"Webmentions\"</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>children</span>\n</span></span><span><span>   <span>.</span> <span>[((</span><span>wm-property</span> <span>.</span> <span>\"like-of\"</span><span>)</span>\n</span></span><span><span>       <span>(</span><span>wm-target</span> <span>.</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>)</span>\n</span></span><span><span>       <span>...</span><span>)</span>\n</span></span><span><span>      <span>((</span><span>wm-property</span> <span>.</span> <span>\"in-reply-to\"</span><span>)</span>\n</span></span><span><span>       <span>(</span><span>wm-target</span> <span>.</span> <span>\"https://bofh.org.uk/note/8/\"</span><span>)</span>\n</span></span><span><span>       <span>...</span><span>)]))</span>\n</span></span></code></pre><p>The interesting stuff lives under the <code>\"children\"</code> key, which we can get with <code>(gethash \"children\" data)</code>.</p><p>To get all the webmentions for our domain, the Webmention API allows for pagination. We can ask for pages of, say 100 entries and if we get 100 entries back, append the result to our running collection of entries and request the next page. Once we get a result with fewer than 100 entries, we know we‚Äôre done and we can massage the data into a shape that Hugo can cope with</p><h2>Then turn what we learn into a commands</h2><p>Now we know what the data coming from Webmention.io looks like, and how we can page through it, let‚Äôs write a function, <code>wm--fetch-all</code> to do that for us.</p><p>The <code>(while more? ...)</code> loop keeps requesting more data until it gets a short response, at which point <code>more?</code> becomes false and we return the accumulated <code>all-entries</code> vector</p><h2>And relax</h2><p>We now have a handy list of all the webmentions relating to our site. The next step is to massage it into a data structure that will suit Hugo and export it as JSON files in the site‚Äôs <code>data</code> directory. Which is a topic for another blog post, I think. If only because I‚Äôm reasonably sure that the data structure I‚Äôm currently using isn‚Äôt great.</p><p>I‚Äôll hack it about a bit and report back.</p>","text":"You might have noticed, if you‚Äôre a regular visitor that webmentions have started showing up on the site again. I turned them off a while ago, \n\nI turned off the home server that was handling the web hook calls from Webmention.io, planning to quickly move it and spin it up again. Ask me how that‚Äôs going.\nbut Aaron Parecki‚Äôs invaluable Webmention.io service has still been gathering them for me, so I‚Äôve turned them back on. But in the mean time, I mislaid the code I was using to populate the necessary Hugo data files from Webmention. Exploratory code ahoy.Start by faking itI‚Äôm heavily indebted to Brian Wisti for his post, Using the Webmention.io API as the starting point to my explorations, but since I can‚Äôt be doing with Python, I used emacs.\n\nI started with my very minor fork of restclient\n\n# Grab the most recent 5 webmentions of bofh.org.uk\nGET https://webmention.io/api/mentions.jf2?domain=bofh.org.uk&sort-dir=down&per-page=5&token=:token\nWhich produces the following JSON data:Disclose this for the full wall of JSONDon‚Äôt say you weren‚Äôt warned!{\n  \"type\": \"feed\",\n  \"name\": \"Webmentions\",\n  \"children\": [\n    {\n      \"type\": \"entry\",\n      \"author\": {\n        \"type\": \"card\",\n        \"name\": \"Mike Spencer\",\n        \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/3ba5a0fdc660c44995fef428a601770fd0fe2619fc1f8c7e70ec7e9e1da66d4b.jpg\",\n        \"url\": \"https://mastodon.scot/@mikerspencer\"\n      },\n      \"url\": \"https://mendeddrum.org/@pdcawley/115162152891409560#favorited-by-109365771998686190\",\n      \"published\": null,\n      \"wm-received\": \"2025-09-07T09:35:22Z\",\n      \"wm-id\": 1936897,\n      \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115162152891409560/109365771998686190\",\n      \"wm-target\": \"https://bofh.org.uk/note/8/\",\n      \"wm-protocol\": \"webmention\",\n      \"like-of\": \"https://bofh.org.uk/note/8/\",\n      \"wm-property\": \"like-of\",\n      \"wm-private\": false\n    },\n    {\n      \"type\": \"entry\",\n      \"author\": {\n        \"type\": \"card\",\n        \"name\": \"Jess Robinson\",\n        \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\",\n        \"url\": \"https://fosstodon.org/@castaway\"\n      },\n      \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\",\n      \"published\": null,\n      \"wm-received\": \"2025-09-07T07:19:01Z\",\n      \"wm-id\": 1936873,\n      \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\",\n      \"wm-target\": \"https://bofh.org.uk/note/7/\",\n      \"wm-protocol\": \"webmention\",\n      \"like-of\": \"https://bofh.org.uk/note/7/\",\n      \"wm-property\": \"like-of\",\n      \"wm-private\": false\n    },\n    {\n      \"type\": \"entry\",\n      \"author\": {\n        \"type\": \"card\",\n        \"name\": \"Daniel Kelly Music\",\n        \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\",\n        \"url\": \"https://aus.social/@yasslad\"\n      },\n      \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\",\n      \"published\": null,\n      \"wm-received\": \"2025-09-07T01:31:46Z\",\n      \"wm-id\": 1936817,\n      \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\",\n      \"wm-target\": \"https://bofh.org.uk/note/7/\",\n      \"wm-protocol\": \"webmention\",\n      \"like-of\": \"https://bofh.org.uk/note/7/\",\n      \"wm-property\": \"like-of\",\n      \"wm-private\": false\n    },\n    {\n      \"type\": \"entry\",\n      \"author\": {\n        \"type\": \"card\",\n        \"name\": \"Nick Anderson\",\n        \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\",\n        \"url\": \"https://fosstodon.org/@nickanderson\"\n      },\n      \"url\": \"https://mendeddrum.org/@pdcawley/115107421781297473#favorited-by-109475479621313511\",\n      \"published\": null,\n      \"wm-received\": \"2025-08-28T21:48:52Z\",\n      \"wm-id\": 1934308,\n      \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115107421781297473/109475479621313511\",\n      \"wm-target\": \"https://bofh.org.uk/note/6/\",\n      \"wm-protocol\": \"webmention\",\n      \"like-of\": \"https://bofh.org.uk/note/6/\",\n      \"wm-property\": \"like-of\",\n      \"wm-private\": false\n    },\n    {\n      \"type\": \"entry\",\n      \"author\": {\n        \"type\": \"card\",\n        \"name\": \"Nick Anderson\",\n        \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\",\n        \"url\": \"https://fosstodon.org/@nickanderson\"\n      },\n      \"url\": \"https://fosstodon.org/@nickanderson/115108589417986943\",\n      \"published\": \"2025-08-28T21:48:05+00:00\",\n      \"wm-received\": \"2025-08-28T21:48:51Z\",\n      \"wm-id\": 1934307,\n      \"wm-source\": \"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115108589456284711\",\n      \"wm-target\": \"https://bofh.org.uk/note/6/\",\n      \"wm-protocol\": \"webmention\",\n      \"content\": {\n        \"html\": \"<p><span class=\\\"h-card\\\"><a href=\\\"https://mendeddrum.org/@pdcawley\\\" class=\\\"u-url\\\">@<span>pdcawley</span></a></span> I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice</p>\",\n        \"text\": \"@pdcawley I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice\"\n      },\n      \"in-reply-to\": \"https://bofh.org.uk/note/6/\",\n      \"wm-property\": \"in-reply-to\",\n      \"wm-private\": false\n    }\n  ]\n}\nThe essential shape is something like this:{ \"type\": \"feed\",\n  \"name\": \"Webmentions\",\n  \"children\": [\n    { \"wm-target\": \"https://bofh.org.uk/note/8/\",\n      \"wm-property\": \"like-of\",\n      ... },\n    { \"wm-target\": \"https://bofh.org.uk/note/8/\",\n      \"wm-property\": \"in-reply-to\",\n      ... },\n    ... }]}\nRestclient is great for interactively exploring a RESTful API, but it‚Äôs not so great for slicing and dicing the data in a Emacs-y way. I could sit down and learn jq again, but I know Lisp, dammit, so after a frustrating hour or so trying to wrap my head around the default url-retrieve interfaces, I went and grabbed the emacs-request package instead because I found its API more comprehensible.\n\nBecause request is a function where restclient is more like an application running in Emacs, it‚Äôs way more useful for automating things. Here‚Äôs more or less the same request as above done in Lisp.\n\n(let (response)\n  (request\n    \"https://webmention.io/api/mentions.jf2\"\n    :params `((\"domain\" . \"bofh.org.uk\")\n              (\"token\" . ,wm-api-token)\n              (\"per-page\" . \"5\")\n              (\"sort-dir\" . \"down\"))\n    :parser 'json-parse-buffer\n    :sync t\n    :success (cl-function\n              (lambda (&key data &allow-other-keys)\n                (setq response data))))\n  response)\nThe code is obviously fiddlier, but it‚Äôs also programmable and, because we set an arbitrary :parser function, it‚Äôs trivial to convert the returned JSON into a native Emacs lisp hash table\n\n\nIt‚Äôs not hard to generate an old school alist either, but that was annoyingly hard to serialise back to JSON, so I went with the default types because they seem to just work.\nwhich looks a bit like this:A wall of Lisp#s(hash-table test equal data\n              (\"type\" \"feed\" \"name\" \"Webmentions\" \"children\"\n               [#s(hash-table test equal data\n                              (\"type\" \"entry\" \"author\"\n                               #s(hash-table test equal data\n                                             (\"type\" \"card\" \"name\"\n                                              \"Mike Spencer\" \"photo\"\n                                              \"https://avatars.webmention.io/fsn1.your-objectstorage.com/3ba5a0fdc660c44995fef428a601770fd0fe2619fc1f8c7e70ec7e9e1da66d4b.jpg\"\n                                              \"url\"\n                                              \"https://mastodon.scot/@mikerspencer\"))\n                               \"url\"\n                               \"https://mendeddrum.org/@pdcawley/115162152891409560#favorited-by-109365771998686190\"\n                               \"published\" :null \"wm-received\"\n                               \"2025-09-07T09:35:22Z\" \"wm-id\" 1936897\n                               \"wm-source\"\n                               \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115162152891409560/109365771998686190\"\n                               \"wm-target\" \"https://bofh.org.uk/note/8/\"\n                               \"wm-protocol\" \"webmention\" \"like-of\"\n                               \"https://bofh.org.uk/note/8/\" \"wm-property\"\n                               \"like-of\" \"wm-private\" :false))\n                  #s(hash-table test equal data\n                                (\"type\" \"entry\" \"author\"\n                                 #s(hash-table test equal data\n                                               (\"type\" \"card\" \"name\"\n                                                \"Jess Robinson\" \"photo\"\n                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"\n                                                \"url\"\n                                                \"https://fosstodon.org/@castaway\"))\n                                 \"url\"\n                                 \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"\n                                 \"published\" :null \"wm-received\"\n                                 \"2025-09-07T07:19:01Z\" \"wm-id\" 1936873\n                                 \"wm-source\"\n                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"\n                                 \"wm-target\" \"https://bofh.org.uk/note/7/\"\n                                 \"wm-protocol\" \"webmention\" \"like-of\"\n                                 \"https://bofh.org.uk/note/7/\" \"wm-property\"\n                                 \"like-of\" \"wm-private\" :false))\n                  #s(hash-table test equal data\n                                (\"type\" \"entry\" \"author\"\n                                 #s(hash-table test equal data\n                                               (\"type\" \"card\" \"name\"\n                                                \"Daniel Kelly Music\" \"photo\"\n                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"\n                                                \"url\"\n                                                \"https://aus.social/@yasslad\"))\n                                 \"url\"\n                                 \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"\n                                 \"published\" :null \"wm-received\"\n                                 \"2025-09-07T01:31:46Z\" \"wm-id\" 1936817\n                                 \"wm-source\"\n                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"\n                                 \"wm-target\" \"https://bofh.org.uk/note/7/\"\n                                 \"wm-protocol\" \"webmention\" \"like-of\"\n                                 \"https://bofh.org.uk/note/7/\" \"wm-property\"\n                                 \"like-of\" \"wm-private\" :false))\n                  #s(hash-table test equal data\n                                (\"type\" \"entry\" \"author\"\n                                 #s(hash-table test equal data\n                                               (\"type\" \"card\" \"name\"\n                                                \"Nick Anderson\" \"photo\"\n                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"\n                                                \"url\"\n                                                \"https://fosstodon.org/@nickanderson\"))\n                                 \"url\"\n                                 \"https://mendeddrum.org/@pdcawley/115107421781297473#favorited-by-109475479621313511\"\n                                 \"published\" :null \"wm-received\"\n                                 \"2025-08-28T21:48:52Z\" \"wm-id\" 1934308\n                                 \"wm-source\"\n                                 \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115107421781297473/109475479621313511\"\n                                 \"wm-target\" \"https://bofh.org.uk/note/6/\"\n                                 \"wm-protocol\" \"webmention\" \"like-of\"\n                                 \"https://bofh.org.uk/note/6/\" \"wm-property\"\n                                 \"like-of\" \"wm-private\" :false))\n                  #s(hash-table test equal data\n                                (\"type\" \"entry\" \"author\"\n                                 #s(hash-table test equal data\n                                               (\"type\" \"card\" \"name\"\n                                                \"Nick Anderson\" \"photo\"\n                                                \"https://avatars.webmention.io/fsn1.your-objectstorage.com/856b210b0770a292a4f9e76699c84aa3833f9252716ad3cab58b50a7b57205ee.jpg\"\n                                                \"url\"\n                                                \"https://fosstodon.org/@nickanderson\"))\n                                 \"url\"\n                                 \"https://fosstodon.org/@nickanderson/115108589417986943\"\n                                 \"published\" \"2025-08-28T21:48:05+00:00\"\n                                 \"wm-received\" \"2025-08-28T21:48:51Z\" \"wm-id\"\n                                 1934307 \"wm-source\"\n                                 \"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115107421781297473/115108589456284711\"\n                                 \"wm-target\" \"https://bofh.org.uk/note/6/\"\n                                 \"wm-protocol\" \"webmention\" \"content\"\n                                 #s(hash-table test equal data\n                                               (\"html\"\n                                                \"<p><span class=\\\"h-card\\\"><a href=\\\"https://mendeddrum.org/@pdcawley\\\" class=\\\"u-url\\\">@<span>pdcawley</span></a></span> I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice</p>\"\n                                                \"text\"\n                                                \"@pdcawley I was gonna say, that looks like a source block within a source block which means there's another src block to make it render. Nice\"))\n                                 \"in-reply-to\" \"https://bofh.org.uk/note/6/\"\n                                 \"wm-property\" \"in-reply-to\" \"wm-private\"\n                                 :false))]))\nVerbose as hell, but something we can work with. Here‚Äôs a simplified alist representation which might be a little easier to understand.'((type . \"feed\")\n  (name . \"Webmentions\")\n  (children\n   . [((wm-property . \"like-of\")\n       (wm-target . \"https://bofh.org.uk/note/8/\")\n       ...)\n      ((wm-property . \"in-reply-to\")\n       (wm-target . \"https://bofh.org.uk/note/8/\")\n       ...)]))\nThe interesting stuff lives under the \"children\" key, which we can get with (gethash \"children\" data).\n\nTo get all the webmentions for our domain, the Webmention API allows for pagination. We can ask for pages of, say 100 entries and if we get 100 entries back, append the result to our running collection of entries and request the next page. Once we get a result with fewer than 100 entries, we know we‚Äôre done and we can massage the data into a shape that Hugo can cope withThen turn what we learn into a commandsNow we know what the data coming from Webmention.io looks like, and how we can page through it, let‚Äôs write a function, wm--fetch-all to do that for us.\n\nThe (while more? ...) loop keeps requesting more data until it gets a short response, at which point more? becomes false and we return the accumulated all-entries vectorAnd relaxWe now have a handy list of all the webmentions relating to our site. The next step is to massage it into a data structure that will suit Hugo and export it as JSON files in the site‚Äôs data directory. Which is a topic for another blog post, I think. If only because I‚Äôm reasonably sure that the data structure I‚Äôm currently using isn‚Äôt great.\n\nI‚Äôll hack it about a bit and report back."},"mention-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/"}},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","published":"2025-09-09T20:49:00","wm-received":"2025-09-21T08:04:17Z","wm-id":1941312,"wm-source":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/index.html","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","name":"Making use of Webmentions","summary":{"content-type":"text/plain","value":"In which we finish with Webmentions for the time being by massaging a flat list of mentions into a two-level hash table/JSON object that‚Äôs easy to make use of in Hugo.\nAnd speculate about how we could improve things further, because things can always be improved."},"content":{"html":"<p>When <a href=\"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/\">last we left off</a> we had worked out how to grab all the mentions of this site that <a href=\"https://webmentions.io/\">Webmentions.io</a> knew about and now we want to write that out to the <code>data/</code> directory in a format that‚Äôs easy to deal with in Hugo.</p><p>If you‚Äôve read <a href=\"https://bofh.org.uk/note/10/\">my earlier note</a>, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.</p><p>As things currently stand, I‚Äôve settled on dropping all the mentions in a single file, <code>data/mentions/all.json</code>\n</p><p>I‚Äôd rather use <code>data/mentions.json</code>, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.</p>\nwhich is structured along these lines:<pre><code><span><span><span>{</span>\n</span></span><span><span>  <span>\"/note/7/\"</span><span>:</span> <span>{</span>\n</span></span><span><span>    <span>\"like-of\"</span><span>:</span> <span>[</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Daniel Kelly Music\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://aus.social/@yasslad\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T01:31:46Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936817</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Jess Robinson\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@castaway\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T07:19:01Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936873</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>}</span>\n</span></span><span><span>    <span>],</span>\n</span></span><span><span>    <span>\"in-reply-to\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"mention-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"repost-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"other\"</span><span>:</span> <span>[]</span>\n</span></span><span><span>  <span>}</span>\n</span></span><span><span><span>}</span>\n</span></span></code></pre><p>Just imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.</p><p>As it stands, <code>wm--fetch-all</code> is returning a flat sequence of webmention objects that we want to process into a more structured object,\n</p><p>JSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.</p>\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what <code>describe-function</code> has to say about <code>seq-reduce</code>:<pre><code><span><span>seq-reduce is a byte-compiled function defined in seq.el.gz.\n</span></span><span><span>\n</span></span><span><span>*Signature*\n</span></span><span><span>(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n</span></span><span><span>\n</span></span><span><span>*Documentation*\n</span></span><span><span>\n</span></span><span><span>Reduce the function FUNCTION across SEQUENCE, starting\n</span></span><span><span>with INITIAL-VALUE.\n</span></span><span><span>\n</span></span><span><span>Return the result of calling FUNCTION with INITIAL-VALUE\n</span></span><span><span>and the first element of SEQUENCE, then calling FUNCTION\n</span></span><span><span>with that result and the second element of SEQUENCE,\n</span></span><span><span>then with that result and the third element of SEQUENCE,\n</span></span><span><span>etc. FUNCTION will be called with INITIAL-VALUE (and then\n</span></span><span><span>the accumulated value) as the first argument, and the\n</span></span><span><span>elements from SEQUENCE as the second argument.\n</span></span><span><span>\n</span></span><span><span>If SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\n</span></span><span><span>is not called.\n</span></span><span><span>\n</span></span><span><span>This does not modify SEQUENCE.\n</span></span></code></pre><p>So we can write</p><pre><code><span><span><span>(</span><span>seq-reduce</span> <span>#'</span><span>wm--add-mention-to-hash-table</span>\n</span></span><span><span>            <span>(</span><span>wm--fetch-all</span><span>)</span>\n</span></span><span><span>            <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>))</span>\n</span></span></code></pre><p>and that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write <code>wm--add-mention-to-hash-table</code> to populate the hash we made with <code>(make-hash-table :test 'equal)</code>\n</p><p>We need to use that <code>:test ‚Äôequal</code> part because <code>json-insert</code> wants a hash with strings as keys and the default hash returned by <code>(make-hash-table)</code> compares keys using <code>eql</code> which might or might not work when comparing strings. Not a problem which <code>equal</code> has.</p>\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).<p>What does that function look like? Here‚Äôs what I wrote:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm--add-mention-to-hash-table</span> <span>(</span><span>acc</span> <span>mention</span><span>)</span>\n</span></span><span><span>  <span>\"Helps reduce a list of mentions into a two level hash.\"</span>\n</span></span><span><span>  <span>(</span><span>require</span> <span>'dash</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>let*</span> <span>((</span><span>path</span> <span>(</span><span>--&gt;</span> <span>mention</span>\n</span></span><span><span>                    <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-generic-parse-url</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-path-and-query</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>car</span> <span>it</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mentions-hash</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>path</span> <span>acc</span> <span>nil</span><span>)</span>\n</span></span><span><span>                            <span>(</span><span>wm-new-mentions-hash</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mention-type</span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span>         <span>(</span><span>mentions</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>                       <span>(</span><span>progn</span>\n</span></span><span><span>                         <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>                         <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span><span><span>         <span>(</span><span>new-mentions</span> <span>(</span><span>if</span> <span>(</span><span>seq-contains</span> <span>mentions</span> <span>mention</span><span>)</span>\n</span></span><span><span>                           <span>mentions</span>\n</span></span><span><span>                         <span>(</span><span>vconcat</span> <span>mentions</span> <span>(</span><span>list</span> <span>mention</span><span>)))))</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>mention-type</span> <span>new-mentions</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>path</span> <span>mentions-hash</span> <span>acc</span><span>)</span>\n</span></span><span><span>    <span>acc</span><span>))</span>\n</span></span></code></pre><p>We grab the path from the <code>\"wm-target\"</code> key, which is actually a URL rather than a simple path\n</p><p>We <em>could</em> just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with <code>.RelPermalink</code>, but the host part of <code>.Permalink</code> is different in development than in production.</p>\nso, rather than writing<pre><code><span><span><span>(</span><span>car</span>\n</span></span><span><span> <span>(</span><span>url-path-and-query</span>\n</span></span><span><span>  <span>(</span><span>url-generic-parse-url</span>\n</span></span><span><span>   <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>mention</span><span>))))</span>\n</span></span></code></pre><p>we‚Äôll thread <code>mention</code> through that series of transformations using <code>dash.el</code>‚Äôs threading macro, <code>--&gt;</code>.</p><p>We use the path to grab <code>mentions-hash</code> from the <code>acc</code>-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using <code>wm-new-mentions-hash</code>, which looks like this:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-new-mentions-hash</span> <span>()</span>\n</span></span><span><span>  <span>\"Make a new empty hash to hold categorised webmention data.\"</span>\n</span></span><span><span>  <span>(</span><span>copy-hash-table</span>\n</span></span><span><span>   <span>#</span><span>s</span><span>(</span><span>hash-table</span>\n</span></span><span><span>      <span>test</span> <span>equal</span>\n</span></span><span><span>      <span>data</span> <span>(</span><span>\"like-of\"</span> <span>[]</span> <span>\"in-reply-to\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"mention-of\"</span> <span>[]</span> <span>\"repost-of\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"other\"</span> <span>[]))))</span>\n</span></span></code></pre><p>Now we look up <code>\"wm-property\"</code> in <code>mention</code>, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.</p><p><span>We‚Äôre only currently interested in four kinds of mention,</span>\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in <code>bookmark-of</code> mentions or whatever somewhere down the road. So let‚Äôs collect them under the <code>other</code> key. Which is where this hacky section of our <code>let*</code> form comes in:</p><pre><code><span><span><span>(</span><span>mention-type</span>\n</span></span><span><span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span><span>(</span><span>mentions</span>\n</span></span><span><span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>     <span>(</span><span>progn</span>\n</span></span><span><span>       <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>       <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span></code></pre><p>What‚Äôs going on here then?</p><p>First, we make a guess at the <code>mention-type</code> we‚Äôre going to file the current mention under by grabbing the <code>\"wm-property\"</code> and use that value to lookup the mention type in <code>mentions-hash</code>. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get <code>nil</code>, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.</p><p>We now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know <code>(seq-contains mentions mention)</code> about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.</p><p>That done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.</p><p>With that done, it‚Äôs a simple matter of opening <code>data/mentions/all.json</code>, erasing the buffer, calling <code>(json-insert (seq-reduce ...))</code> to update the data and saving it. Here‚Äôs the code which does exactly that.</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-unflatten-mentions</span> <span>(</span><span>mentions-vec</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>seq-reduce</span> <span>'wm--add-mention-to-hash-table</span> <span>mentions-vec</span>\n</span></span><span><span>              <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>)))</span>\n</span></span><span><span>\n</span></span><span><span><span>(</span><span>defun</span> <span>wm-fetch-mentions</span> <span>()</span>\n</span></span><span><span>  <span>\"Fetch the webmentions of </span><span>`wm-domain'</span><span>.\"</span>\n</span></span><span><span>  <span>(</span><span>interactive</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>save-current-buffer</span>\n</span></span><span><span>    <span>(</span><span>let</span> <span>((</span><span>all-entries</span> <span>(</span><span>wm--fetch-all</span><span>)))</span>\n</span></span><span><span>      <span>(</span><span>with-temp-file</span> <span>(</span><span>expand-file-name</span> <span>\"all.json\"</span> <span>wm-data-dir</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>erase-buffer</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>json-insert</span> <span>(</span><span>wm-unflatten-mentions</span> <span>all-entries</span><span>))))))</span>\n</span></span></code></pre><p><span>Over in the Hugo partial</span>\nthat renders the bit of the page immediately after this, we can get at the data like this:</p><pre><code><span><span><span>{{-</span><span> </span><span>$all_mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions.all</span><span> </span><span>.RelPermalink</span><span>  </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"like-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"repost-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$replies</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"in-reply-to\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"mention-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>&lt;</span><span>footer</span> <span>class</span><span>=</span><span>\"metaline\"</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;</span><span>ul</span> <span>class</span><span>=</span><span>\"response-summary\"</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$likes</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$likes</span><span>)</span><span> </span><span>}}</span>like<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>likes<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$reposts</span><span>)</span><span> </span><span>}}</span>repost<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>reposts<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$replies</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$replies</span><span>)</span><span> </span><span>}}</span>reply<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>replies<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$mentions</span><span>)</span><span> </span><span>}}</span>mention<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>mentions<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;/</span><span>ul</span><span>&gt;</span>\n</span></span><span><span><span>&lt;/</span><span>footer</span><span>&gt;</span>\n</span></span><span><span>...\n</span></span></code></pre><p>I‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a <code>since</code> argument, so it wouldn‚Äôt be hard to write</p><pre><code><span><span><span>(</span><span>seq-reduce</span>\n</span></span><span><span> <span>'wm--add-mention-to-hash-table</span>\n</span></span><span><span> <span>(</span><span>wm-fetch-mentions-since</span> <span>wm-last-checked</span><span>)</span>\n</span></span><span><span> <span>(</span><span>wm-parse-mentions-file</span>\n</span></span><span><span>  <span>(</span><span>expand-file-name</span> <span>\"mentions/all.json\"</span>\n</span></span><span><span>                    <span>wm-data-dir</span><span>)))</span>\n</span></span></code></pre><p>without having to change our reducing function at all.</p><p>Separation of concerns, baby! Separation of concerns!</p>","text":"When last we left off we had worked out how to grab all the mentions of this site that Webmentions.io knew about and now we want to write that out to the data/ directory in a format that‚Äôs easy to deal with in Hugo.\n\nIf you‚Äôve read my earlier note, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.\n\nAs things currently stand, I‚Äôve settled on dropping all the mentions in a single file, data/mentions/all.json\n\n\nI‚Äôd rather use data/mentions.json, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.\nwhich is structured along these lines:{\n  \"/note/7/\": {\n    \"like-of\": [\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Daniel Kelly Music\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\",\n          \"url\": \"https://aus.social/@yasslad\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T01:31:46Z\",\n        \"wm-id\": 1936817,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      },\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Jess Robinson\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\",\n          \"url\": \"https://fosstodon.org/@castaway\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T07:19:01Z\",\n        \"wm-id\": 1936873,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      }\n    ],\n    \"in-reply-to\": [],\n    \"mention-of\": [],\n    \"repost-of\": [],\n    \"other\": []\n  }\n}\nJust imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.\n\nAs it stands, wm--fetch-all is returning a flat sequence of webmention objects that we want to process into a more structured object,\n\n\nJSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what describe-function has to say about seq-reduce:seq-reduce is a byte-compiled function defined in seq.el.gz.\n\n*Signature*\n(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n\n*Documentation*\n\nReduce the function FUNCTION across SEQUENCE, starting\nwith INITIAL-VALUE.\n\nReturn the result of calling FUNCTION with INITIAL-VALUE\nand the first element of SEQUENCE, then calling FUNCTION\nwith that result and the second element of SEQUENCE,\nthen with that result and the third element of SEQUENCE,\netc. FUNCTION will be called with INITIAL-VALUE (and then\nthe accumulated value) as the first argument, and the\nelements from SEQUENCE as the second argument.\n\nIf SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\nis not called.\n\nThis does not modify SEQUENCE.\nSo we can write(seq-reduce #'wm--add-mention-to-hash-table\n            (wm--fetch-all)\n            (make-hash-table :test 'equal))\nand that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write wm--add-mention-to-hash-table to populate the hash we made with (make-hash-table :test 'equal)\n\n\nWe need to use that :test ‚Äôequal part because json-insert wants a hash with strings as keys and the default hash returned by (make-hash-table) compares keys using eql which might or might not work when comparing strings. Not a problem which equal has.\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).What does that function look like? Here‚Äôs what I wrote:(defun wm--add-mention-to-hash-table (acc mention)\n  \"Helps reduce a list of mentions into a two level hash.\"\n  (require 'dash)\n  (let* ((path (--> mention\n                    (gethash \"wm-target\" it)\n                    (url-generic-parse-url it)\n                    (url-path-and-query it)\n                    (car it)))\n         (mentions-hash (or (gethash path acc nil)\n                            (wm-new-mentions-hash)))\n         (mention-type (gethash \"wm-property\" mention))\n         (mentions (or (gethash mention-type mentions-hash)\n                       (progn\n                         (setq mention-type \"other\")\n                         (gethash mention-type mentions-hash))))\n         (new-mentions (if (seq-contains mentions mention)\n                           mentions\n                         (vconcat mentions (list mention)))))\n    (puthash mention-type new-mentions mentions-hash)\n    (puthash path mentions-hash acc)\n    acc))\nWe grab the path from the \"wm-target\" key, which is actually a URL rather than a simple path\n\n\nWe could just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with .RelPermalink, but the host part of .Permalink is different in development than in production.\nso, rather than writing(car\n (url-path-and-query\n  (url-generic-parse-url\n   (gethash \"wm-target\" mention))))\nwe‚Äôll thread mention through that series of transformations using dash.el‚Äôs threading macro, -->.\n\nWe use the path to grab mentions-hash from the acc-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using wm-new-mentions-hash, which looks like this:(defun wm-new-mentions-hash ()\n  \"Make a new empty hash to hold categorised webmention data.\"\n  (copy-hash-table\n   #s(hash-table\n      test equal\n      data (\"like-of\" [] \"in-reply-to\" []\n            \"mention-of\" [] \"repost-of\" []\n            \"other\" []))))\nNow we look up \"wm-property\" in mention, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.\n\nWe‚Äôre only currently interested in four kinds of mention,\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in bookmark-of mentions or whatever somewhere down the road. So let‚Äôs collect them under the other key. Which is where this hacky section of our let* form comes in:(mention-type\n (gethash \"wm-property\" mention))\n(mentions\n (or (gethash mention-type mentions-hash)\n     (progn\n       (setq mention-type \"other\")\n       (gethash mention-type mentions-hash))))\nWhat‚Äôs going on here then?\n\nFirst, we make a guess at the mention-type we‚Äôre going to file the current mention under by grabbing the \"wm-property\" and use that value to lookup the mention type in mentions-hash. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get nil, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.\n\nWe now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know (seq-contains mentions mention) about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.\n\nThat done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.\n\nWith that done, it‚Äôs a simple matter of opening data/mentions/all.json, erasing the buffer, calling (json-insert (seq-reduce ...)) to update the data and saving it. Here‚Äôs the code which does exactly that.(defun wm-unflatten-mentions (mentions-vec)\n  (seq-reduce 'wm--add-mention-to-hash-table mentions-vec\n              (make-hash-table :test 'equal)))\n\n(defun wm-fetch-mentions ()\n  \"Fetch the webmentions of `wm-domain'.\"\n  (interactive)\n  (save-current-buffer\n    (let ((all-entries (wm--fetch-all)))\n      (with-temp-file (expand-file-name \"all.json\" wm-data-dir)\n        (erase-buffer)\n        (json-insert (wm-unflatten-mentions all-entries))))))\nOver in the Hugo partial\nthat renders the bit of the page immediately after this, we can get at the data like this:{{- $all_mentions := index site.Data.mentions.all .RelPermalink  -}}\n{{ $likes := index $all_mentions \"like-of\" | default slice -}}\n{{ $reposts := index $all_mentions \"repost-of\" | default slice -}}\n{{ $replies := index $all_mentions \"in-reply-to\" | default slice -}}\n{{ $mentions := index $all_mentions \"mention-of\" | default slice -}}\n<footer class=\"metaline\">\n  <ul class=\"response-summary\">\n    <li>{{ $likes | len }} {{ if eq 1 (len $likes) }}like{{ else }}likes{{ end }}</li>\n    <li>{{ $reposts | len }} {{ if eq 1 (len $reposts) }}repost{{ else }}reposts{{ end }}</li>\n    <li>{{ $replies | len }} {{ if eq 1 (len $replies) }}reply{{ else }}replies{{ end }}</li>\n    <li>{{ $mentions | len }} {{ if eq 1 (len $mentions) }}mention{{ else }}mentions{{ end }}</li>\n  </ul>\n</footer>\n...\nI‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a since argument, so it wouldn‚Äôt be hard to write(seq-reduce\n 'wm--add-mention-to-hash-table\n (wm-fetch-mentions-since wm-last-checked)\n (wm-parse-mentions-file\n  (expand-file-name \"mentions/all.json\"\n                    wm-data-dir)))\nwithout having to change our reducing function at all.\n\nSeparation of concerns, baby! Separation of concerns!"},"mention-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/"}}],"repost-of":[{"type":"entry","author":{"type":"card","name":"Random Geek","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/bd4169674266fc6cc25215fbec9e6b96b34fd934a9201885b490a3b20b4467dd.jpg","url":"https://masto.hackers.town/@randomgeek"},"url":"https://mendeddrum.org/@pdcawley/115164138009432927#reblogged-by-114326313584660135","published":null,"wm-received":"2025-09-07T18:32:36Z","wm-id":1937631,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/115164138009432927/114326313584660135","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"repost-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Sacha Chua","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/33f4ae6066e9ae8747e1aa70e52df93b5fa1297b43fd3682c0da4cf6fc042c20.jpg","url":"https://social.sachachua.com/@sacha"},"url":"https://mendeddrum.org/@pdcawley/115164138009432927#reblogged-by-113111852144806174","published":null,"wm-received":"2025-09-08T15:04:21Z","wm-id":1937757,"wm-source":"https://brid.gy/repost/mastodon/@pdcawley@mendeddrum.org/115164138009432927/113111852144806174","wm-target":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-protocol":"webmention","repost-of":"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/","wm-property":"repost-of","wm-private":false}],"other":[]},"/note/9/":{"like-of":[{"type":"entry","author":{"type":"card","name":"I use safety sandals","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/40009f7b590ea92144b3299593d952568f146d822ec47ae9be424e0b00f1f13d.png","url":"https://masto.hackers.town/@hastur"},"url":"https://mendeddrum.org/@pdcawley/115167271515973740#favorited-by-114366209661707274","published":null,"wm-received":"2025-09-08T07:06:20Z","wm-id":1937701,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115167271515973740/114366209661707274","wm-target":"https://bofh.org.uk/note/9/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/9/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Koos van den Hout","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/eef243e6fd4f9c10d3b2ba702201d22f0c73abec7fd4d3253d1b8c979422c091.png","url":"https://infosec.exchange/@KHoos"},"url":"https://mendeddrum.org/@pdcawley/115167271515973740#favorited-by-109592207367367848","published":null,"wm-received":"2025-09-08T07:40:21Z","wm-id":1937703,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115167271515973740/109592207367367848","wm-target":"https://bofh.org.uk/note/9/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/9/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"llewelly","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/d0e547091e3ad62bbb3e682abfaad054ae8e8f6f83c181362aee99860adb68ca.png","url":"https://sauropods.win/@llewelly"},"url":"https://mendeddrum.org/@pdcawley/115167271515973740#favorited-by-109293989940258374","published":null,"wm-received":"2025-09-08T18:12:05Z","wm-id":1937795,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115167271515973740/109293989940258374","wm-target":"https://bofh.org.uk/note/9/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/9/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/book/cory-doctorow-picks-and-shovels/":{"like-of":[{"type":"entry","author":{"type":"card","name":"sunflowerinrain","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/d8a2adc0dacc4d0de28768fcc27be0ff376406238e47cbaf552361643dbc4943.jpg","url":"https://mastodon.online/@sunflowerinrain"},"url":"https://mendeddrum.org/@pdcawley/115169260520326450#favorited-by-110448156288833031","published":null,"wm-received":"2025-09-08T16:34:22Z","wm-id":1937771,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115169260520326450/110448156288833031","wm-target":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Alan Bellingham","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/ce098413397df4921446d4cab81f443e10638d96b019048ac259d0022175742d.jpg","url":"https://wandering.shop/@bellinghman"},"url":"https://mendeddrum.org/@pdcawley/115169260520326450#favorited-by-109825201480977293","published":null,"wm-received":"2025-09-08T17:35:57Z","wm-id":1937786,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115169260520326450/109825201480977293","wm-target":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115169260520326450#favorited-by-109562941096076318","published":null,"wm-received":"2025-09-09T06:56:06Z","wm-id":1937857,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115169260520326450/109562941096076318","wm-target":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","published":"2025-09-08T10:34:00","wm-received":"2025-09-21T08:03:26Z","wm-id":1941310,"wm-source":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/index.html","wm-target":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-protocol":"webmention","name":"Picks and Shovels, by Cory Doctorow","summary":{"content-type":"text/plain","value":"Cory Doctorow has an axe to grind.\nCory always has an axe to grind, of course, but since the upshot of that is books like Picks and Shovels, then I‚Äôm okay with that.\nThis is the third Marty Hench thriller and it‚Äôs a cracking read"},"content":{"html":"<p><a href=\"https://craphound.com/\">Cory Doctorow</a> has an axe to grind.</p><p>This is, of course, nothing new. Cory‚Äôs anger at The Way Things Are, and his revolutionary zeal to bring the whole towering edifice of modern capitalism tumbling down is what makes him Cory, and what makes his books so good to read.</p><p>This is the third of his Marty Hench techno thrillers, but chronologically the earliest. Marty‚Äôs just out of accountancy school after his MIT degree was derailed because he discovered personal computers. He moves to Silicon Valley because of course he does and falls in with a punky crowd and does what he can to help three religious women liberate themselves and their customers from a deeply dodgy totalitarian company that‚Äôs locking decent churchgoing folk across the country into an abusive pyramid scheme of a computer system.</p><p>He fails, of course.</p><p><span>I could quibble</span>\nabout some of the computer history/dates, but that would be to miss the point. I can‚Äôt help noticing the occasional flub because that‚Äôs the kind of geek I am, but I‚Äôm learning not to let it spoil my enjoyment of something.</p><p>Oh yeah‚Äîand thank god for this‚ÄîCory‚Äôs got <em>way</em> better at writing sex scenes over the years. I still shudder at the memory of some of the stuff in <em>Makers</em>,\n</p><p>Great book with some <em>skincrawlingly</em> bad sex scenes. I can‚Äôt even put my finger on why, I‚Äôm afraid.</p>\nbut he finds a decent balance here. The age gap thing is still there though. It seems to be a <em>thing</em> for him. Not that I‚Äôm one to throw stones, being married to someone nineteen years older than me.<p><span>Wil Wheaton just gets better and better</span>\nas an audio book narrator. He really gets inside Marty on this one. Frankly, I can‚Äôt imagine ever reading Cory on paper so long as Wil‚Äôs doing such a bang up job of narrating his books.</p>","text":"Cory Doctorow has an axe to grind.\n\nThis is, of course, nothing new. Cory‚Äôs anger at The Way Things Are, and his revolutionary zeal to bring the whole towering edifice of modern capitalism tumbling down is what makes him Cory, and what makes his books so good to read.\n\nThis is the third of his Marty Hench techno thrillers, but chronologically the earliest. Marty‚Äôs just out of accountancy school after his MIT degree was derailed because he discovered personal computers. He moves to Silicon Valley because of course he does and falls in with a punky crowd and does what he can to help three religious women liberate themselves and their customers from a deeply dodgy totalitarian company that‚Äôs locking decent churchgoing folk across the country into an abusive pyramid scheme of a computer system.\n\nHe fails, of course.\n\nI could quibble\nabout some of the computer history/dates, but that would be to miss the point. I can‚Äôt help noticing the occasional flub because that‚Äôs the kind of geek I am, but I‚Äôm learning not to let it spoil my enjoyment of something.\n\nOh yeah‚Äîand thank god for this‚ÄîCory‚Äôs got way better at writing sex scenes over the years. I still shudder at the memory of some of the stuff in Makers,\n\n\nGreat book with some skincrawlingly bad sex scenes. I can‚Äôt even put my finger on why, I‚Äôm afraid.\nbut he finds a decent balance here. The age gap thing is still there though. It seems to be a thing for him. Not that I‚Äôm one to throw stones, being married to someone nineteen years older than me.Wil Wheaton just gets better and better\nas an audio book narrator. He really gets inside Marty on this one. Frankly, I can‚Äôt imagine ever reading Cory on paper so long as Wil‚Äôs doing such a bang up job of narrating his books."},"mention-of":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/book/cory-doctorow-picks-and-shovels/"}}],"repost-of":[],"other":[]},"/note/10/":{"like-of":[{"type":"entry","author":{"type":"card","name":"screwlisp","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/6d501b2550d7991391e854551d639b21c476538a57955459eb00675d696e562d.png","url":"https://gamerplus.org/@screwlisp"},"url":"https://mendeddrum.org/@pdcawley/115173064965946977#favorited-by-114502814257192057","published":null,"wm-received":"2025-09-09T07:30:54Z","wm-id":1937860,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115173064965946977/114502814257192057","wm-target":"https://bofh.org.uk/note/10/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/10/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","published":"2025-09-09T20:49:00","wm-received":"2025-09-21T08:05:13Z","wm-id":1941313,"wm-source":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/index.html","wm-target":"https://bofh.org.uk/note/10/","wm-protocol":"webmention","name":"Making use of Webmentions","summary":{"content-type":"text/plain","value":"In which we finish with Webmentions for the time being by massaging a flat list of mentions into a two-level hash table/JSON object that‚Äôs easy to make use of in Hugo.\nAnd speculate about how we could improve things further, because things can always be improved."},"content":{"html":"<p>When <a href=\"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/\">last we left off</a> we had worked out how to grab all the mentions of this site that <a href=\"https://webmentions.io/\">Webmentions.io</a> knew about and now we want to write that out to the <code>data/</code> directory in a format that‚Äôs easy to deal with in Hugo.</p><p>If you‚Äôve read <a href=\"https://bofh.org.uk/note/10/\">my earlier note</a>, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.</p><p>As things currently stand, I‚Äôve settled on dropping all the mentions in a single file, <code>data/mentions/all.json</code>\n</p><p>I‚Äôd rather use <code>data/mentions.json</code>, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.</p>\nwhich is structured along these lines:<pre><code><span><span><span>{</span>\n</span></span><span><span>  <span>\"/note/7/\"</span><span>:</span> <span>{</span>\n</span></span><span><span>    <span>\"like-of\"</span><span>:</span> <span>[</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Daniel Kelly Music\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://aus.social/@yasslad\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T01:31:46Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936817</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Jess Robinson\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@castaway\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T07:19:01Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936873</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>}</span>\n</span></span><span><span>    <span>],</span>\n</span></span><span><span>    <span>\"in-reply-to\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"mention-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"repost-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"other\"</span><span>:</span> <span>[]</span>\n</span></span><span><span>  <span>}</span>\n</span></span><span><span><span>}</span>\n</span></span></code></pre><p>Just imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.</p><p>As it stands, <code>wm--fetch-all</code> is returning a flat sequence of webmention objects that we want to process into a more structured object,\n</p><p>JSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.</p>\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what <code>describe-function</code> has to say about <code>seq-reduce</code>:<pre><code><span><span>seq-reduce is a byte-compiled function defined in seq.el.gz.\n</span></span><span><span>\n</span></span><span><span>*Signature*\n</span></span><span><span>(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n</span></span><span><span>\n</span></span><span><span>*Documentation*\n</span></span><span><span>\n</span></span><span><span>Reduce the function FUNCTION across SEQUENCE, starting\n</span></span><span><span>with INITIAL-VALUE.\n</span></span><span><span>\n</span></span><span><span>Return the result of calling FUNCTION with INITIAL-VALUE\n</span></span><span><span>and the first element of SEQUENCE, then calling FUNCTION\n</span></span><span><span>with that result and the second element of SEQUENCE,\n</span></span><span><span>then with that result and the third element of SEQUENCE,\n</span></span><span><span>etc. FUNCTION will be called with INITIAL-VALUE (and then\n</span></span><span><span>the accumulated value) as the first argument, and the\n</span></span><span><span>elements from SEQUENCE as the second argument.\n</span></span><span><span>\n</span></span><span><span>If SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\n</span></span><span><span>is not called.\n</span></span><span><span>\n</span></span><span><span>This does not modify SEQUENCE.\n</span></span></code></pre><p>So we can write</p><pre><code><span><span><span>(</span><span>seq-reduce</span> <span>#'</span><span>wm--add-mention-to-hash-table</span>\n</span></span><span><span>            <span>(</span><span>wm--fetch-all</span><span>)</span>\n</span></span><span><span>            <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>))</span>\n</span></span></code></pre><p>and that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write <code>wm--add-mention-to-hash-table</code> to populate the hash we made with <code>(make-hash-table :test 'equal)</code>\n</p><p>We need to use that <code>:test ‚Äôequal</code> part because <code>json-insert</code> wants a hash with strings as keys and the default hash returned by <code>(make-hash-table)</code> compares keys using <code>eql</code> which might or might not work when comparing strings. Not a problem which <code>equal</code> has.</p>\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).<p>What does that function look like? Here‚Äôs what I wrote:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm--add-mention-to-hash-table</span> <span>(</span><span>acc</span> <span>mention</span><span>)</span>\n</span></span><span><span>  <span>\"Helps reduce a list of mentions into a two level hash.\"</span>\n</span></span><span><span>  <span>(</span><span>require</span> <span>'dash</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>let*</span> <span>((</span><span>path</span> <span>(</span><span>--&gt;</span> <span>mention</span>\n</span></span><span><span>                    <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-generic-parse-url</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-path-and-query</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>car</span> <span>it</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mentions-hash</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>path</span> <span>acc</span> <span>nil</span><span>)</span>\n</span></span><span><span>                            <span>(</span><span>wm-new-mentions-hash</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mention-type</span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span>         <span>(</span><span>mentions</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>                       <span>(</span><span>progn</span>\n</span></span><span><span>                         <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>                         <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span><span><span>         <span>(</span><span>new-mentions</span> <span>(</span><span>if</span> <span>(</span><span>seq-contains</span> <span>mentions</span> <span>mention</span><span>)</span>\n</span></span><span><span>                           <span>mentions</span>\n</span></span><span><span>                         <span>(</span><span>vconcat</span> <span>mentions</span> <span>(</span><span>list</span> <span>mention</span><span>)))))</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>mention-type</span> <span>new-mentions</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>path</span> <span>mentions-hash</span> <span>acc</span><span>)</span>\n</span></span><span><span>    <span>acc</span><span>))</span>\n</span></span></code></pre><p>We grab the path from the <code>\"wm-target\"</code> key, which is actually a URL rather than a simple path\n</p><p>We <em>could</em> just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with <code>.RelPermalink</code>, but the host part of <code>.Permalink</code> is different in development than in production.</p>\nso, rather than writing<pre><code><span><span><span>(</span><span>car</span>\n</span></span><span><span> <span>(</span><span>url-path-and-query</span>\n</span></span><span><span>  <span>(</span><span>url-generic-parse-url</span>\n</span></span><span><span>   <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>mention</span><span>))))</span>\n</span></span></code></pre><p>we‚Äôll thread <code>mention</code> through that series of transformations using <code>dash.el</code>‚Äôs threading macro, <code>--&gt;</code>.</p><p>We use the path to grab <code>mentions-hash</code> from the <code>acc</code>-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using <code>wm-new-mentions-hash</code>, which looks like this:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-new-mentions-hash</span> <span>()</span>\n</span></span><span><span>  <span>\"Make a new empty hash to hold categorised webmention data.\"</span>\n</span></span><span><span>  <span>(</span><span>copy-hash-table</span>\n</span></span><span><span>   <span>#</span><span>s</span><span>(</span><span>hash-table</span>\n</span></span><span><span>      <span>test</span> <span>equal</span>\n</span></span><span><span>      <span>data</span> <span>(</span><span>\"like-of\"</span> <span>[]</span> <span>\"in-reply-to\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"mention-of\"</span> <span>[]</span> <span>\"repost-of\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"other\"</span> <span>[]))))</span>\n</span></span></code></pre><p>Now we look up <code>\"wm-property\"</code> in <code>mention</code>, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.</p><p><span>We‚Äôre only currently interested in four kinds of mention,</span>\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in <code>bookmark-of</code> mentions or whatever somewhere down the road. So let‚Äôs collect them under the <code>other</code> key. Which is where this hacky section of our <code>let*</code> form comes in:</p><pre><code><span><span><span>(</span><span>mention-type</span>\n</span></span><span><span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span><span>(</span><span>mentions</span>\n</span></span><span><span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>     <span>(</span><span>progn</span>\n</span></span><span><span>       <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>       <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span></code></pre><p>What‚Äôs going on here then?</p><p>First, we make a guess at the <code>mention-type</code> we‚Äôre going to file the current mention under by grabbing the <code>\"wm-property\"</code> and use that value to lookup the mention type in <code>mentions-hash</code>. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get <code>nil</code>, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.</p><p>We now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know <code>(seq-contains mentions mention)</code> about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.</p><p>That done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.</p><p>With that done, it‚Äôs a simple matter of opening <code>data/mentions/all.json</code>, erasing the buffer, calling <code>(json-insert (seq-reduce ...))</code> to update the data and saving it. Here‚Äôs the code which does exactly that.</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-unflatten-mentions</span> <span>(</span><span>mentions-vec</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>seq-reduce</span> <span>'wm--add-mention-to-hash-table</span> <span>mentions-vec</span>\n</span></span><span><span>              <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>)))</span>\n</span></span><span><span>\n</span></span><span><span><span>(</span><span>defun</span> <span>wm-fetch-mentions</span> <span>()</span>\n</span></span><span><span>  <span>\"Fetch the webmentions of </span><span>`wm-domain'</span><span>.\"</span>\n</span></span><span><span>  <span>(</span><span>interactive</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>save-current-buffer</span>\n</span></span><span><span>    <span>(</span><span>let</span> <span>((</span><span>all-entries</span> <span>(</span><span>wm--fetch-all</span><span>)))</span>\n</span></span><span><span>      <span>(</span><span>with-temp-file</span> <span>(</span><span>expand-file-name</span> <span>\"all.json\"</span> <span>wm-data-dir</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>erase-buffer</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>json-insert</span> <span>(</span><span>wm-unflatten-mentions</span> <span>all-entries</span><span>))))))</span>\n</span></span></code></pre><p><span>Over in the Hugo partial</span>\nthat renders the bit of the page immediately after this, we can get at the data like this:</p><pre><code><span><span><span>{{-</span><span> </span><span>$all_mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions.all</span><span> </span><span>.RelPermalink</span><span>  </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"like-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"repost-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$replies</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"in-reply-to\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"mention-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>&lt;</span><span>footer</span> <span>class</span><span>=</span><span>\"metaline\"</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;</span><span>ul</span> <span>class</span><span>=</span><span>\"response-summary\"</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$likes</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$likes</span><span>)</span><span> </span><span>}}</span>like<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>likes<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$reposts</span><span>)</span><span> </span><span>}}</span>repost<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>reposts<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$replies</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$replies</span><span>)</span><span> </span><span>}}</span>reply<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>replies<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$mentions</span><span>)</span><span> </span><span>}}</span>mention<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>mentions<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;/</span><span>ul</span><span>&gt;</span>\n</span></span><span><span><span>&lt;/</span><span>footer</span><span>&gt;</span>\n</span></span><span><span>...\n</span></span></code></pre><p>I‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a <code>since</code> argument, so it wouldn‚Äôt be hard to write</p><pre><code><span><span><span>(</span><span>seq-reduce</span>\n</span></span><span><span> <span>'wm--add-mention-to-hash-table</span>\n</span></span><span><span> <span>(</span><span>wm-fetch-mentions-since</span> <span>wm-last-checked</span><span>)</span>\n</span></span><span><span> <span>(</span><span>wm-parse-mentions-file</span>\n</span></span><span><span>  <span>(</span><span>expand-file-name</span> <span>\"mentions/all.json\"</span>\n</span></span><span><span>                    <span>wm-data-dir</span><span>)))</span>\n</span></span></code></pre><p>without having to change our reducing function at all.</p><p>Separation of concerns, baby! Separation of concerns!</p>","text":"When last we left off we had worked out how to grab all the mentions of this site that Webmentions.io knew about and now we want to write that out to the data/ directory in a format that‚Äôs easy to deal with in Hugo.\n\nIf you‚Äôve read my earlier note, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.\n\nAs things currently stand, I‚Äôve settled on dropping all the mentions in a single file, data/mentions/all.json\n\n\nI‚Äôd rather use data/mentions.json, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.\nwhich is structured along these lines:{\n  \"/note/7/\": {\n    \"like-of\": [\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Daniel Kelly Music\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\",\n          \"url\": \"https://aus.social/@yasslad\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T01:31:46Z\",\n        \"wm-id\": 1936817,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      },\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Jess Robinson\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\",\n          \"url\": \"https://fosstodon.org/@castaway\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T07:19:01Z\",\n        \"wm-id\": 1936873,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      }\n    ],\n    \"in-reply-to\": [],\n    \"mention-of\": [],\n    \"repost-of\": [],\n    \"other\": []\n  }\n}\nJust imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.\n\nAs it stands, wm--fetch-all is returning a flat sequence of webmention objects that we want to process into a more structured object,\n\n\nJSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what describe-function has to say about seq-reduce:seq-reduce is a byte-compiled function defined in seq.el.gz.\n\n*Signature*\n(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n\n*Documentation*\n\nReduce the function FUNCTION across SEQUENCE, starting\nwith INITIAL-VALUE.\n\nReturn the result of calling FUNCTION with INITIAL-VALUE\nand the first element of SEQUENCE, then calling FUNCTION\nwith that result and the second element of SEQUENCE,\nthen with that result and the third element of SEQUENCE,\netc. FUNCTION will be called with INITIAL-VALUE (and then\nthe accumulated value) as the first argument, and the\nelements from SEQUENCE as the second argument.\n\nIf SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\nis not called.\n\nThis does not modify SEQUENCE.\nSo we can write(seq-reduce #'wm--add-mention-to-hash-table\n            (wm--fetch-all)\n            (make-hash-table :test 'equal))\nand that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write wm--add-mention-to-hash-table to populate the hash we made with (make-hash-table :test 'equal)\n\n\nWe need to use that :test ‚Äôequal part because json-insert wants a hash with strings as keys and the default hash returned by (make-hash-table) compares keys using eql which might or might not work when comparing strings. Not a problem which equal has.\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).What does that function look like? Here‚Äôs what I wrote:(defun wm--add-mention-to-hash-table (acc mention)\n  \"Helps reduce a list of mentions into a two level hash.\"\n  (require 'dash)\n  (let* ((path (--> mention\n                    (gethash \"wm-target\" it)\n                    (url-generic-parse-url it)\n                    (url-path-and-query it)\n                    (car it)))\n         (mentions-hash (or (gethash path acc nil)\n                            (wm-new-mentions-hash)))\n         (mention-type (gethash \"wm-property\" mention))\n         (mentions (or (gethash mention-type mentions-hash)\n                       (progn\n                         (setq mention-type \"other\")\n                         (gethash mention-type mentions-hash))))\n         (new-mentions (if (seq-contains mentions mention)\n                           mentions\n                         (vconcat mentions (list mention)))))\n    (puthash mention-type new-mentions mentions-hash)\n    (puthash path mentions-hash acc)\n    acc))\nWe grab the path from the \"wm-target\" key, which is actually a URL rather than a simple path\n\n\nWe could just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with .RelPermalink, but the host part of .Permalink is different in development than in production.\nso, rather than writing(car\n (url-path-and-query\n  (url-generic-parse-url\n   (gethash \"wm-target\" mention))))\nwe‚Äôll thread mention through that series of transformations using dash.el‚Äôs threading macro, -->.\n\nWe use the path to grab mentions-hash from the acc-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using wm-new-mentions-hash, which looks like this:(defun wm-new-mentions-hash ()\n  \"Make a new empty hash to hold categorised webmention data.\"\n  (copy-hash-table\n   #s(hash-table\n      test equal\n      data (\"like-of\" [] \"in-reply-to\" []\n            \"mention-of\" [] \"repost-of\" []\n            \"other\" []))))\nNow we look up \"wm-property\" in mention, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.\n\nWe‚Äôre only currently interested in four kinds of mention,\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in bookmark-of mentions or whatever somewhere down the road. So let‚Äôs collect them under the other key. Which is where this hacky section of our let* form comes in:(mention-type\n (gethash \"wm-property\" mention))\n(mentions\n (or (gethash mention-type mentions-hash)\n     (progn\n       (setq mention-type \"other\")\n       (gethash mention-type mentions-hash))))\nWhat‚Äôs going on here then?\n\nFirst, we make a guess at the mention-type we‚Äôre going to file the current mention under by grabbing the \"wm-property\" and use that value to lookup the mention type in mentions-hash. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get nil, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.\n\nWe now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know (seq-contains mentions mention) about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.\n\nThat done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.\n\nWith that done, it‚Äôs a simple matter of opening data/mentions/all.json, erasing the buffer, calling (json-insert (seq-reduce ...)) to update the data and saving it. Here‚Äôs the code which does exactly that.(defun wm-unflatten-mentions (mentions-vec)\n  (seq-reduce 'wm--add-mention-to-hash-table mentions-vec\n              (make-hash-table :test 'equal)))\n\n(defun wm-fetch-mentions ()\n  \"Fetch the webmentions of `wm-domain'.\"\n  (interactive)\n  (save-current-buffer\n    (let ((all-entries (wm--fetch-all)))\n      (with-temp-file (expand-file-name \"all.json\" wm-data-dir)\n        (erase-buffer)\n        (json-insert (wm-unflatten-mentions all-entries))))))\nOver in the Hugo partial\nthat renders the bit of the page immediately after this, we can get at the data like this:{{- $all_mentions := index site.Data.mentions.all .RelPermalink  -}}\n{{ $likes := index $all_mentions \"like-of\" | default slice -}}\n{{ $reposts := index $all_mentions \"repost-of\" | default slice -}}\n{{ $replies := index $all_mentions \"in-reply-to\" | default slice -}}\n{{ $mentions := index $all_mentions \"mention-of\" | default slice -}}\n<footer class=\"metaline\">\n  <ul class=\"response-summary\">\n    <li>{{ $likes | len }} {{ if eq 1 (len $likes) }}like{{ else }}likes{{ end }}</li>\n    <li>{{ $reposts | len }} {{ if eq 1 (len $reposts) }}repost{{ else }}reposts{{ end }}</li>\n    <li>{{ $replies | len }} {{ if eq 1 (len $replies) }}reply{{ else }}replies{{ end }}</li>\n    <li>{{ $mentions | len }} {{ if eq 1 (len $mentions) }}mention{{ else }}mentions{{ end }}</li>\n  </ul>\n</footer>\n...\nI‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a since argument, so it wouldn‚Äôt be hard to write(seq-reduce\n 'wm--add-mention-to-hash-table\n (wm-fetch-mentions-since wm-last-checked)\n (wm-parse-mentions-file\n  (expand-file-name \"mentions/all.json\"\n                    wm-data-dir)))\nwithout having to change our reducing function at all.\n\nSeparation of concerns, baby! Separation of concerns!"},"mention-of":"https://bofh.org.uk/note/10/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/"}},{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://fed.brid.gy","published":"2025-09-09T07:51:00","wm-received":"2025-09-21T09:03:50Z","wm-id":1941332,"wm-source":"https://bofh.org.uk/note/10/index.html","wm-target":"https://bofh.org.uk/note/10/","wm-protocol":"webmention","content":{"html":"<p>Progress!</p><p><span>Before:</span></p><pre><code><span><span>./data/mentions/3f256ff[...]494.json\n</span></span><span><span>./data/mentions/62afe34[...]020.json\n</span></span><span><span>...\n</span></span></code></pre><p>Hmm, so which file pertains to which post?</p><pre><code><span><span><span>{{</span><span> </span><span>$slug</span><span> </span><span>:=</span><span> </span><span>.RelPermalink</span><span> </span><span>|</span><span> </span><span>sha256</span><span> </span><span>}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$all_mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions</span><span> </span><span>$slug</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>where</span><span> </span><span>$all_mentions</span><span> </span><span>\"wm-property\"</span><span> </span><span>\"like-of\"</span><span> </span><span>}}</span>\n</span></span></code></pre><p>At least the template code to get at it is more or less sane.</p><p><span>During:</span></p><pre><code><span><span>./data/mentions/note/8/mentions.json\n</span></span><span><span>./data/mentions/note/9/mentions.json\n</span></span></code></pre><p>Well, that‚Äôs clear as day!</p><pre><code><span><span><span>{{</span><span> </span><span>$key</span><span> </span><span>:=</span><span> </span><span>(</span><span>split</span><span> </span><span>path</span><span>.Dir</span><span> </span><span>.RelPermalink</span><span>)</span><span> </span><span>\"/\"</span><span> </span><span>|</span><span> </span><span>after</span><span> </span><span>1</span><span> </span><span>|</span><span> </span><span>append</span><span> </span><span>\"mentions\"</span><span> </span><span>}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$all_mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions</span><span> </span><span>$key</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>where</span><span> </span><span>$all_mentions</span><span> </span><span>\"wm-property\"</span><span> </span><span>\"like-of\"</span><span> </span><span>}}</span>\n</span></span></code></pre><p>What the actual fuck? I <em>want</em> to write <code>{{ index site.Data.mentions .RelPermalink }}</code> and have done with it. To the data mungery!</p><p><span>Now</span></p><pre><code><span><span>./data/mentions/all.json\n</span></span></code></pre><p>That‚Äôs a tad more opaque, isn‚Äôt it? Ah well, there‚Äôs always <code>jq</code>. I can‚Äôt see what‚Äôs got new mentions from git status any more, but also, I can‚Äôt forget to add any new data files either. Call it a win on aggregate.</p><pre><code><span><span><span>{{</span><span> </span><span>$all_mentions</span><span> </span><span>=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions.all</span><span> </span><span>.RelPermalink</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>dict</span><span> </span><span>}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"like-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>}}</span>\n</span></span></code></pre><p>Well structured data for the win! And I‚Äôm working on eliminating the annoying <code>default dict</code> and <code>default slice</code> in that too.</p>","text":"Progress!\n\nBefore:./data/mentions/3f256ff[...]494.json\n./data/mentions/62afe34[...]020.json\n...\nHmm, so which file pertains to which post?{{ $slug := .RelPermalink | sha256 }}\n{{ $all_mentions := index site.Data.mentions $slug | default slice }}\n{{ $likes := where $all_mentions \"wm-property\" \"like-of\" }}\nAt least the template code to get at it is more or less sane.\n\nDuring:./data/mentions/note/8/mentions.json\n./data/mentions/note/9/mentions.json\nWell, that‚Äôs clear as day!{{ $key := (split path.Dir .RelPermalink) \"/\" | after 1 | append \"mentions\" }}\n{{ $all_mentions := index site.Data.mentions $key | default slice }}\n{{ $likes := where $all_mentions \"wm-property\" \"like-of\" }}\nWhat the actual fuck? I want to write {{ index site.Data.mentions .RelPermalink }} and have done with it. To the data mungery!\n\nNow./data/mentions/all.json\nThat‚Äôs a tad more opaque, isn‚Äôt it? Ah well, there‚Äôs always jq. I can‚Äôt see what‚Äôs got new mentions from git status any more, but also, I can‚Äôt forget to add any new data files either. Call it a win on aggregate.{{ $all_mentions = index site.Data.mentions.all .RelPermalink | default dict }}\n{{ $likes := index $all_mentions \"like-of\" | default slice }}\nWell structured data for the win! And I‚Äôm working on eliminating the annoying default dict and default slice in that too."},"mention-of":"https://bofh.org.uk/note/10/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/note/10/"}}],"repost-of":[],"other":[]},"/2025/09/09/making-use-of-webmentions/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115176140527227631#favorited-by-109562941096076318","published":null,"wm-received":"2025-09-10T06:39:20Z","wm-id":1938125,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115176140527227631/109562941096076318","wm-target":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","published":"2025-09-09T20:49:00","wm-received":"2025-09-21T08:04:10Z","wm-id":1941311,"wm-source":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/index.html","wm-target":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","wm-protocol":"webmention","name":"Making use of Webmentions","summary":{"content-type":"text/plain","value":"In which we finish with Webmentions for the time being by massaging a flat list of mentions into a two-level hash table/JSON object that‚Äôs easy to make use of in Hugo.\nAnd speculate about how we could improve things further, because things can always be improved."},"content":{"html":"<p>When <a href=\"https://bofh.org.uk/2025/09/07/fetching-webmentions-again-with-emacs/\">last we left off</a> we had worked out how to grab all the mentions of this site that <a href=\"https://webmentions.io/\">Webmentions.io</a> knew about and now we want to write that out to the <code>data/</code> directory in a format that‚Äôs easy to deal with in Hugo.</p><p>If you‚Äôve read <a href=\"https://bofh.org.uk/note/10/\">my earlier note</a>, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.</p><p>As things currently stand, I‚Äôve settled on dropping all the mentions in a single file, <code>data/mentions/all.json</code>\n</p><p>I‚Äôd rather use <code>data/mentions.json</code>, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.</p>\nwhich is structured along these lines:<pre><code><span><span><span>{</span>\n</span></span><span><span>  <span>\"/note/7/\"</span><span>:</span> <span>{</span>\n</span></span><span><span>    <span>\"like-of\"</span><span>:</span> <span>[</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Daniel Kelly Music\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://aus.social/@yasslad\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T01:31:46Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936817</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>},</span>\n</span></span><span><span>      <span>{</span>\n</span></span><span><span>        <span>\"type\"</span><span>:</span> <span>\"entry\"</span><span>,</span>\n</span></span><span><span>        <span>\"author\"</span><span>:</span> <span>{</span>\n</span></span><span><span>          <span>\"type\"</span><span>:</span> <span>\"card\"</span><span>,</span>\n</span></span><span><span>          <span>\"name\"</span><span>:</span> <span>\"Jess Robinson\"</span><span>,</span>\n</span></span><span><span>          <span>\"photo\"</span><span>:</span> <span>\"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\"</span><span>,</span>\n</span></span><span><span>          <span>\"url\"</span><span>:</span> <span>\"https://fosstodon.org/@castaway\"</span>\n</span></span><span><span>        <span>},</span>\n</span></span><span><span>        <span>\"url\"</span><span>:</span> <span>\"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"published\"</span><span>:</span> <span>null</span><span>,</span>\n</span></span><span><span>        <span>\"wm-received\"</span><span>:</span> <span>\"2025-09-07T07:19:01Z\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-id\"</span><span>:</span> <span>1936873</span><span>,</span>\n</span></span><span><span>        <span>\"wm-source\"</span><span>:</span> <span>\"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-target\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-protocol\"</span><span>:</span> <span>\"webmention\"</span><span>,</span>\n</span></span><span><span>        <span>\"like-of\"</span><span>:</span> <span>\"https://bofh.org.uk/note/7/\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-property\"</span><span>:</span> <span>\"like-of\"</span><span>,</span>\n</span></span><span><span>        <span>\"wm-private\"</span><span>:</span> <span>false</span>\n</span></span><span><span>      <span>}</span>\n</span></span><span><span>    <span>],</span>\n</span></span><span><span>    <span>\"in-reply-to\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"mention-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"repost-of\"</span><span>:</span> <span>[],</span>\n</span></span><span><span>    <span>\"other\"</span><span>:</span> <span>[]</span>\n</span></span><span><span>  <span>}</span>\n</span></span><span><span><span>}</span>\n</span></span></code></pre><p>Just imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.</p><p>As it stands, <code>wm--fetch-all</code> is returning a flat sequence of webmention objects that we want to process into a more structured object,\n</p><p>JSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.</p>\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what <code>describe-function</code> has to say about <code>seq-reduce</code>:<pre><code><span><span>seq-reduce is a byte-compiled function defined in seq.el.gz.\n</span></span><span><span>\n</span></span><span><span>*Signature*\n</span></span><span><span>(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n</span></span><span><span>\n</span></span><span><span>*Documentation*\n</span></span><span><span>\n</span></span><span><span>Reduce the function FUNCTION across SEQUENCE, starting\n</span></span><span><span>with INITIAL-VALUE.\n</span></span><span><span>\n</span></span><span><span>Return the result of calling FUNCTION with INITIAL-VALUE\n</span></span><span><span>and the first element of SEQUENCE, then calling FUNCTION\n</span></span><span><span>with that result and the second element of SEQUENCE,\n</span></span><span><span>then with that result and the third element of SEQUENCE,\n</span></span><span><span>etc. FUNCTION will be called with INITIAL-VALUE (and then\n</span></span><span><span>the accumulated value) as the first argument, and the\n</span></span><span><span>elements from SEQUENCE as the second argument.\n</span></span><span><span>\n</span></span><span><span>If SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\n</span></span><span><span>is not called.\n</span></span><span><span>\n</span></span><span><span>This does not modify SEQUENCE.\n</span></span></code></pre><p>So we can write</p><pre><code><span><span><span>(</span><span>seq-reduce</span> <span>#'</span><span>wm--add-mention-to-hash-table</span>\n</span></span><span><span>            <span>(</span><span>wm--fetch-all</span><span>)</span>\n</span></span><span><span>            <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>))</span>\n</span></span></code></pre><p>and that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write <code>wm--add-mention-to-hash-table</code> to populate the hash we made with <code>(make-hash-table :test 'equal)</code>\n</p><p>We need to use that <code>:test ‚Äôequal</code> part because <code>json-insert</code> wants a hash with strings as keys and the default hash returned by <code>(make-hash-table)</code> compares keys using <code>eql</code> which might or might not work when comparing strings. Not a problem which <code>equal</code> has.</p>\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).<p>What does that function look like? Here‚Äôs what I wrote:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm--add-mention-to-hash-table</span> <span>(</span><span>acc</span> <span>mention</span><span>)</span>\n</span></span><span><span>  <span>\"Helps reduce a list of mentions into a two level hash.\"</span>\n</span></span><span><span>  <span>(</span><span>require</span> <span>'dash</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>let*</span> <span>((</span><span>path</span> <span>(</span><span>--&gt;</span> <span>mention</span>\n</span></span><span><span>                    <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-generic-parse-url</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>url-path-and-query</span> <span>it</span><span>)</span>\n</span></span><span><span>                    <span>(</span><span>car</span> <span>it</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mentions-hash</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>path</span> <span>acc</span> <span>nil</span><span>)</span>\n</span></span><span><span>                            <span>(</span><span>wm-new-mentions-hash</span><span>)))</span>\n</span></span><span><span>         <span>(</span><span>mention-type</span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span>         <span>(</span><span>mentions</span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>                       <span>(</span><span>progn</span>\n</span></span><span><span>                         <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>                         <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span><span><span>         <span>(</span><span>new-mentions</span> <span>(</span><span>if</span> <span>(</span><span>seq-contains</span> <span>mentions</span> <span>mention</span><span>)</span>\n</span></span><span><span>                           <span>mentions</span>\n</span></span><span><span>                         <span>(</span><span>vconcat</span> <span>mentions</span> <span>(</span><span>list</span> <span>mention</span><span>)))))</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>mention-type</span> <span>new-mentions</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>    <span>(</span><span>puthash</span> <span>path</span> <span>mentions-hash</span> <span>acc</span><span>)</span>\n</span></span><span><span>    <span>acc</span><span>))</span>\n</span></span></code></pre><p>We grab the path from the <code>\"wm-target\"</code> key, which is actually a URL rather than a simple path\n</p><p>We <em>could</em> just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with <code>.RelPermalink</code>, but the host part of <code>.Permalink</code> is different in development than in production.</p>\nso, rather than writing<pre><code><span><span><span>(</span><span>car</span>\n</span></span><span><span> <span>(</span><span>url-path-and-query</span>\n</span></span><span><span>  <span>(</span><span>url-generic-parse-url</span>\n</span></span><span><span>   <span>(</span><span>gethash</span> <span>\"wm-target\"</span> <span>mention</span><span>))))</span>\n</span></span></code></pre><p>we‚Äôll thread <code>mention</code> through that series of transformations using <code>dash.el</code>‚Äôs threading macro, <code>--&gt;</code>.</p><p>We use the path to grab <code>mentions-hash</code> from the <code>acc</code>-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using <code>wm-new-mentions-hash</code>, which looks like this:</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-new-mentions-hash</span> <span>()</span>\n</span></span><span><span>  <span>\"Make a new empty hash to hold categorised webmention data.\"</span>\n</span></span><span><span>  <span>(</span><span>copy-hash-table</span>\n</span></span><span><span>   <span>#</span><span>s</span><span>(</span><span>hash-table</span>\n</span></span><span><span>      <span>test</span> <span>equal</span>\n</span></span><span><span>      <span>data</span> <span>(</span><span>\"like-of\"</span> <span>[]</span> <span>\"in-reply-to\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"mention-of\"</span> <span>[]</span> <span>\"repost-of\"</span> <span>[]</span>\n</span></span><span><span>            <span>\"other\"</span> <span>[]))))</span>\n</span></span></code></pre><p>Now we look up <code>\"wm-property\"</code> in <code>mention</code>, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.</p><p><span>We‚Äôre only currently interested in four kinds of mention,</span>\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in <code>bookmark-of</code> mentions or whatever somewhere down the road. So let‚Äôs collect them under the <code>other</code> key. Which is where this hacky section of our <code>let*</code> form comes in:</p><pre><code><span><span><span>(</span><span>mention-type</span>\n</span></span><span><span> <span>(</span><span>gethash</span> <span>\"wm-property\"</span> <span>mention</span><span>))</span>\n</span></span><span><span><span>(</span><span>mentions</span>\n</span></span><span><span> <span>(</span><span>or</span> <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>)</span>\n</span></span><span><span>     <span>(</span><span>progn</span>\n</span></span><span><span>       <span>(</span><span>setq</span> <span>mention-type</span> <span>\"other\"</span><span>)</span>\n</span></span><span><span>       <span>(</span><span>gethash</span> <span>mention-type</span> <span>mentions-hash</span><span>))))</span>\n</span></span></code></pre><p>What‚Äôs going on here then?</p><p>First, we make a guess at the <code>mention-type</code> we‚Äôre going to file the current mention under by grabbing the <code>\"wm-property\"</code> and use that value to lookup the mention type in <code>mentions-hash</code>. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get <code>nil</code>, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.</p><p>We now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know <code>(seq-contains mentions mention)</code> about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.</p><p>That done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.</p><p>With that done, it‚Äôs a simple matter of opening <code>data/mentions/all.json</code>, erasing the buffer, calling <code>(json-insert (seq-reduce ...))</code> to update the data and saving it. Here‚Äôs the code which does exactly that.</p><pre><code><span><span><span>(</span><span>defun</span> <span>wm-unflatten-mentions</span> <span>(</span><span>mentions-vec</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>seq-reduce</span> <span>'wm--add-mention-to-hash-table</span> <span>mentions-vec</span>\n</span></span><span><span>              <span>(</span><span>make-hash-table</span> <span>:test</span> <span>'equal</span><span>)))</span>\n</span></span><span><span>\n</span></span><span><span><span>(</span><span>defun</span> <span>wm-fetch-mentions</span> <span>()</span>\n</span></span><span><span>  <span>\"Fetch the webmentions of </span><span>`wm-domain'</span><span>.\"</span>\n</span></span><span><span>  <span>(</span><span>interactive</span><span>)</span>\n</span></span><span><span>  <span>(</span><span>save-current-buffer</span>\n</span></span><span><span>    <span>(</span><span>let</span> <span>((</span><span>all-entries</span> <span>(</span><span>wm--fetch-all</span><span>)))</span>\n</span></span><span><span>      <span>(</span><span>with-temp-file</span> <span>(</span><span>expand-file-name</span> <span>\"all.json\"</span> <span>wm-data-dir</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>erase-buffer</span><span>)</span>\n</span></span><span><span>        <span>(</span><span>json-insert</span> <span>(</span><span>wm-unflatten-mentions</span> <span>all-entries</span><span>))))))</span>\n</span></span></code></pre><p><span>Over in the Hugo partial</span>\nthat renders the bit of the page immediately after this, we can get at the data like this:</p><pre><code><span><span><span>{{-</span><span> </span><span>$all_mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>site</span><span>.Data.mentions.all</span><span> </span><span>.RelPermalink</span><span>  </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$likes</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"like-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"repost-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$replies</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"in-reply-to\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>:=</span><span> </span><span>index</span><span> </span><span>$all_mentions</span><span> </span><span>\"mention-of\"</span><span> </span><span>|</span><span> </span><span>default</span><span> </span><span>slice</span><span> </span><span>-}}</span>\n</span></span><span><span><span>&lt;</span><span>footer</span> <span>class</span><span>=</span><span>\"metaline\"</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;</span><span>ul</span> <span>class</span><span>=</span><span>\"response-summary\"</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$likes</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$likes</span><span>)</span><span> </span><span>}}</span>like<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>likes<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$reposts</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$reposts</span><span>)</span><span> </span><span>}}</span>repost<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>reposts<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$replies</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$replies</span><span>)</span><span> </span><span>}}</span>reply<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>replies<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>    <span>&lt;</span><span>li</span><span>&gt;</span><span>{{</span><span> </span><span>$mentions</span><span> </span><span>|</span><span> </span><span>len</span><span> </span><span>}}</span> <span>{{</span><span> </span><span>if</span><span> </span><span>eq</span><span> </span><span>1</span><span> </span><span>(</span><span>len</span><span> </span><span>$mentions</span><span>)</span><span> </span><span>}}</span>mention<span>{{</span><span> </span><span>else</span><span> </span><span>}}</span>mentions<span>{{</span><span> </span><span>end</span><span> </span><span>}}</span><span>&lt;/</span><span>li</span><span>&gt;</span>\n</span></span><span><span>  <span>&lt;/</span><span>ul</span><span>&gt;</span>\n</span></span><span><span><span>&lt;/</span><span>footer</span><span>&gt;</span>\n</span></span><span><span>...\n</span></span></code></pre><p>I‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a <code>since</code> argument, so it wouldn‚Äôt be hard to write</p><pre><code><span><span><span>(</span><span>seq-reduce</span>\n</span></span><span><span> <span>'wm--add-mention-to-hash-table</span>\n</span></span><span><span> <span>(</span><span>wm-fetch-mentions-since</span> <span>wm-last-checked</span><span>)</span>\n</span></span><span><span> <span>(</span><span>wm-parse-mentions-file</span>\n</span></span><span><span>  <span>(</span><span>expand-file-name</span> <span>\"mentions/all.json\"</span>\n</span></span><span><span>                    <span>wm-data-dir</span><span>)))</span>\n</span></span></code></pre><p>without having to change our reducing function at all.</p><p>Separation of concerns, baby! Separation of concerns!</p>","text":"When last we left off we had worked out how to grab all the mentions of this site that Webmentions.io knew about and now we want to write that out to the data/ directory in a format that‚Äôs easy to deal with in Hugo.\n\nIf you‚Äôve read my earlier note, you‚Äôll know that I‚Äôve been evolving the data schema towards something that‚Äôs easy for Hugo to deal with and reasonably comprehensible for me too.\n\nAs things currently stand, I‚Äôve settled on dropping all the mentions in a single file, data/mentions/all.json\n\n\nI‚Äôd rather use data/mentions.json, but Hugo‚Äôs data system doesn‚Äôt seem to pick that up, so I‚Äôll live with the slightly more clunky option.\nwhich is structured along these lines:{\n  \"/note/7/\": {\n    \"like-of\": [\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Daniel Kelly Music\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/7aa4815cbc1f993c0e2a6df03280dc168f5ad07fecd0313ddfc27eeb02e0b437.png\",\n          \"url\": \"https://aus.social/@yasslad\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109307830089461078\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T01:31:46Z\",\n        \"wm-id\": 1936817,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109307830089461078\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      },\n      {\n        \"type\": \"entry\",\n        \"author\": {\n          \"type\": \"card\",\n          \"name\": \"Jess Robinson\",\n          \"photo\": \"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg\",\n          \"url\": \"https://fosstodon.org/@castaway\"\n        },\n        \"url\": \"https://mendeddrum.org/@pdcawley/115160370354067277#favorited-by-109562941096076318\",\n        \"published\": null,\n        \"wm-received\": \"2025-09-07T07:19:01Z\",\n        \"wm-id\": 1936873,\n        \"wm-source\": \"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115160370354067277/109562941096076318\",\n        \"wm-target\": \"https://bofh.org.uk/note/7/\",\n        \"wm-protocol\": \"webmention\",\n        \"like-of\": \"https://bofh.org.uk/note/7/\",\n        \"wm-property\": \"like-of\",\n        \"wm-private\": false\n      }\n    ],\n    \"in-reply-to\": [],\n    \"mention-of\": [],\n    \"repost-of\": [],\n    \"other\": []\n  }\n}\nJust imagine that JSON object has a bunch more paths as keys referencing similar objects keyed by mention type.\n\nAs it stands, wm--fetch-all is returning a flat sequence of webmention objects that we want to process into a more structured object,\n\n\nJSON/Javascript calls them objects, old Perl heads like me think of them as hashes, and they‚Äôre ‚ÄúHash Tables‚Äù in Emacs Lisp. I‚Äôll be calling them hashes from now on.\nin other words we want to fold (or ‚Äúreduce‚Äù in Emacs Lisp terminology) the sequence into a hash. And I know just the function for that. Let‚Äôs see what describe-function has to say about seq-reduce:seq-reduce is a byte-compiled function defined in seq.el.gz.\n\n*Signature*\n(seq-reduce FUNCTION SEQUENCE INITIAL-VALUE)\n\n*Documentation*\n\nReduce the function FUNCTION across SEQUENCE, starting\nwith INITIAL-VALUE.\n\nReturn the result of calling FUNCTION with INITIAL-VALUE\nand the first element of SEQUENCE, then calling FUNCTION\nwith that result and the second element of SEQUENCE,\nthen with that result and the third element of SEQUENCE,\netc. FUNCTION will be called with INITIAL-VALUE (and then\nthe accumulated value) as the first argument, and the\nelements from SEQUENCE as the second argument.\n\nIf SEQUENCE is empty, return INITIAL-VALUE and FUNCTION\nis not called.\n\nThis does not modify SEQUENCE.\nSo we can write(seq-reduce #'wm--add-mention-to-hash-table\n            (wm--fetch-all)\n            (make-hash-table :test 'equal))\nand that will handle the business of iterating over the sequence of mentions for us, and all we have to do is write wm--add-mention-to-hash-table to populate the hash we made with (make-hash-table :test 'equal)\n\n\nWe need to use that :test ‚Äôequal part because json-insert wants a hash with strings as keys and the default hash returned by (make-hash-table) compares keys using eql which might or might not work when comparing strings. Not a problem which equal has.\none mention at a time, and return the modified hash (You and I both know that it‚Äôs the same old hash mutated, but let‚Äôs pretend it isn‚Äôt, eh?).What does that function look like? Here‚Äôs what I wrote:(defun wm--add-mention-to-hash-table (acc mention)\n  \"Helps reduce a list of mentions into a two level hash.\"\n  (require 'dash)\n  (let* ((path (--> mention\n                    (gethash \"wm-target\" it)\n                    (url-generic-parse-url it)\n                    (url-path-and-query it)\n                    (car it)))\n         (mentions-hash (or (gethash path acc nil)\n                            (wm-new-mentions-hash)))\n         (mention-type (gethash \"wm-property\" mention))\n         (mentions (or (gethash mention-type mentions-hash)\n                       (progn\n                         (setq mention-type \"other\")\n                         (gethash mention-type mentions-hash))))\n         (new-mentions (if (seq-contains mentions mention)\n                           mentions\n                         (vconcat mentions (list mention)))))\n    (puthash mention-type new-mentions mentions-hash)\n    (puthash path mentions-hash acc)\n    acc))\nWe grab the path from the \"wm-target\" key, which is actually a URL rather than a simple path\n\n\nWe could just use the URL, and that would work fine on this site, but not when I‚Äôm running on localhost. The path will always match with .RelPermalink, but the host part of .Permalink is different in development than in production.\nso, rather than writing(car\n (url-path-and-query\n  (url-generic-parse-url\n   (gethash \"wm-target\" mention))))\nwe‚Äôll thread mention through that series of transformations using dash.el‚Äôs threading macro, -->.\n\nWe use the path to grab mentions-hash from the acc-umulating hash and, if there isn‚Äôt already one there, we grab an empty, but structured hash using wm-new-mentions-hash, which looks like this:(defun wm-new-mentions-hash ()\n  \"Make a new empty hash to hold categorised webmention data.\"\n  (copy-hash-table\n   #s(hash-table\n      test equal\n      data (\"like-of\" [] \"in-reply-to\" []\n            \"mention-of\" [] \"repost-of\" []\n            \"other\" []))))\nNow we look up \"wm-property\" in mention, and use that to grab its associated vector of mentions. Well, we would, but there‚Äôs a small wrinkle.\n\nWe‚Äôre only currently interested in four kinds of mention,\nbut Webmention.io doesn‚Äôt know that. We could throw the extras away, but what if we became interested in bookmark-of mentions or whatever somewhere down the road. So let‚Äôs collect them under the other key. Which is where this hacky section of our let* form comes in:(mention-type\n (gethash \"wm-property\" mention))\n(mentions\n (or (gethash mention-type mentions-hash)\n     (progn\n       (setq mention-type \"other\")\n       (gethash mention-type mentions-hash))))\nWhat‚Äôs going on here then?\n\nFirst, we make a guess at the mention-type we‚Äôre going to file the current mention under by grabbing the \"wm-property\" and use that value to lookup the mention type in mentions-hash. If it‚Äôs one of the four types we‚Äôre interested in, that will be a vector, which is truth-y, otherwise we get nil, which is false-y so we change the mention type to ‚Äúother‚Äù and grab that vector from the mention hash.\n\nWe now know the key path we‚Äôre going to store our mentions in, and we have the current vector of mentions associated with it. So, if we already know (seq-contains mentions mention) about the current mention, we reuse that, otherwise we make a new vector with the current mention added to it.\n\nThat done, it‚Äôs a simple matter of putting the new mentions vector into our mentions hash, putting the mentions hash into our accumulating hash and returning that.\n\nWith that done, it‚Äôs a simple matter of opening data/mentions/all.json, erasing the buffer, calling (json-insert (seq-reduce ...)) to update the data and saving it. Here‚Äôs the code which does exactly that.(defun wm-unflatten-mentions (mentions-vec)\n  (seq-reduce 'wm--add-mention-to-hash-table mentions-vec\n              (make-hash-table :test 'equal)))\n\n(defun wm-fetch-mentions ()\n  \"Fetch the webmentions of `wm-domain'.\"\n  (interactive)\n  (save-current-buffer\n    (let ((all-entries (wm--fetch-all)))\n      (with-temp-file (expand-file-name \"all.json\" wm-data-dir)\n        (erase-buffer)\n        (json-insert (wm-unflatten-mentions all-entries))))))\nOver in the Hugo partial\nthat renders the bit of the page immediately after this, we can get at the data like this:{{- $all_mentions := index site.Data.mentions.all .RelPermalink  -}}\n{{ $likes := index $all_mentions \"like-of\" | default slice -}}\n{{ $reposts := index $all_mentions \"repost-of\" | default slice -}}\n{{ $replies := index $all_mentions \"in-reply-to\" | default slice -}}\n{{ $mentions := index $all_mentions \"mention-of\" | default slice -}}\n<footer class=\"metaline\">\n  <ul class=\"response-summary\">\n    <li>{{ $likes | len }} {{ if eq 1 (len $likes) }}like{{ else }}likes{{ end }}</li>\n    <li>{{ $reposts | len }} {{ if eq 1 (len $reposts) }}repost{{ else }}reposts{{ end }}</li>\n    <li>{{ $replies | len }} {{ if eq 1 (len $replies) }}reply{{ else }}replies{{ end }}</li>\n    <li>{{ $mentions | len }} {{ if eq 1 (len $mentions) }}mention{{ else }}mentions{{ end }}</li>\n  </ul>\n</footer>\n...\nI‚Äôll leave the rest as an exercise for the interested reader. However, I will note that the Webmention.io API includes the option to pass in a since argument, so it wouldn‚Äôt be hard to write(seq-reduce\n 'wm--add-mention-to-hash-table\n (wm-fetch-mentions-since wm-last-checked)\n (wm-parse-mentions-file\n  (expand-file-name \"mentions/all.json\"\n                    wm-data-dir)))\nwithout having to change our reducing function at all.\n\nSeparation of concerns, baby! Separation of concerns!"},"mention-of":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/2025/09/09/making-use-of-webmentions/"}}],"repost-of":[],"other":[]},"/note/11/":{"like-of":[{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115178543340929886#favorited-by-109562941096076318","published":null,"wm-received":"2025-09-10T07:14:32Z","wm-id":1938137,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115178543340929886/109562941096076318","wm-target":"https://bofh.org.uk/note/11/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/11/","wm-property":"like-of","wm-private":false}],"in-reply-to":[],"mention-of":[],"repost-of":[],"other":[]},"/note/12/":{"like-of":[{"type":"entry","author":{"type":"card","name":"????????","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/f078c658d5cc327d98bdf1f26e2e265f865bfdf2eec06bcde3d3ed353bbe4fb9.png","url":"https://urbanists.social/@enobacon"},"url":"https://mendeddrum.org/@pdcawley/115178995435028164#favorited-by-109369657014628858","published":null,"wm-received":"2025-09-10T09:37:42Z","wm-id":1938156,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115178995435028164/109369657014628858","wm-target":"https://bofh.org.uk/note/12/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/12/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Elizabeth Mattijsen","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/798ce0c81b555533d79e46d80796f5c6f8a24d5b2288ccdc1fb53afa96024579.jpg","url":"https://mastodon.social/@lizmat"},"url":"https://mendeddrum.org/@pdcawley/115178995435028164#favorited-by-109307829096113487","published":null,"wm-received":"2025-09-10T10:31:53Z","wm-id":1938157,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115178995435028164/109307829096113487","wm-target":"https://bofh.org.uk/note/12/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/12/","wm-property":"like-of","wm-private":false},{"type":"entry","author":{"type":"card","name":"Jess Robinson","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/a11ee0a58e54873140bf1f1965900378d866fce3fafae79e116b979bea3a8773.jpg","url":"https://fosstodon.org/@castaway"},"url":"https://mendeddrum.org/@pdcawley/115178995435028164#favorited-by-109562941096076318","published":null,"wm-received":"2025-09-10T19:29:44Z","wm-id":1938269,"wm-source":"https://brid.gy/like/mastodon/@pdcawley@mendeddrum.org/115178995435028164/109562941096076318","wm-target":"https://bofh.org.uk/note/12/","wm-protocol":"webmention","like-of":"https://bofh.org.uk/note/12/","wm-property":"like-of","wm-private":false}],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/fsn1.your-objectstorage.com/42032a392ce9e3a3cdcb2ce62c8b25461bec725f830fcb178e0195bdc8d0c735.jpg","url":"https://mendeddrum.org/@pdcawley"},"url":"https://mendeddrum.org/@pdcawley/115179081709831732","published":"2025-09-10T08:35:12+00:00","wm-received":"2025-09-10T08:40:19Z","wm-id":1938153,"wm-source":"https://brid.gy/comment/mastodon/@pdcawley@mendeddrum.org/115178995435028164/115179081709831732","wm-target":"https://bofh.org.uk/note/12/","wm-protocol":"webmention","content":{"html":"<p><span class=\"h-card\"><a href=\"https://mendeddrum.org/@vatine\" class=\"u-url\">@<span>vatine</span></a></span> Very generous bounds, but yes.</p>","text":"@vatine Very generous bounds, but yes."},"in-reply-to":"https://bofh.org.uk/note/12/","wm-property":"in-reply-to","wm-private":false}],"mention-of":[],"repost-of":[],"other":[]},"/note/13/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://fed.brid.gy","published":"2025-09-13T14:07:00","wm-received":"2025-09-11T15:54:03Z","wm-id":1938590,"wm-source":"https://bofh.org.uk/note/14/index.html","wm-target":"https://bofh.org.uk/note/13/","wm-protocol":"webmention","content":{"html":"<p>Further to my <a href=\"https://bofh.org.uk/note/13/\">last note</a>, I think I might have a working script to send webmentions for any updated pages. Now to plumb it into the rest of the automation!</p><p><code>#!/usr/bin/env emacs -script</code> is a powerful drug!</p>","text":"Further to my last note, I think I might have a working script to send webmentions for any updated pages. Now to plumb it into the rest of the automation!\n\n#!/usr/bin/env emacs -script is a powerful drug!"},"in-reply-to":"https://bofh.org.uk/note/13/","wm-property":"in-reply-to","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/note/14/"}}],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://fed.brid.gy","published":"2025-09-11T08:25:00","wm-received":"2025-09-21T08:06:33Z","wm-id":1941316,"wm-source":"https://bofh.org.uk/note/13/index.html","wm-target":"https://bofh.org.uk/note/13/","wm-protocol":"webmention","content":{"html":"<p>Now I can display received Webmentions, I need to start working on sending them.</p><p>I don‚Äôt want to rely on an external service if I can help it, because that‚Äôs how my old setup decayed, so don‚Äôt hold your breath.</p><p>But the output of <code>rsync --itemize-changes ...</code> is looking tasty as a mechanism for spotting which URLs have changed between deployment runs.</p><p>Time to start experimenting.</p><p>Hmm‚Ä¶ the first experiment doesn‚Äôt look too promising.</p>","text":"Now I can display received Webmentions, I need to start working on sending them.\n\nI don‚Äôt want to rely on an external service if I can help it, because that‚Äôs how my old setup decayed, so don‚Äôt hold your breath.\n\nBut the output of rsync --itemize-changes ... is looking tasty as a mechanism for spotting which URLs have changed between deployment runs.\n\nTime to start experimenting.\n\nHmm‚Ä¶ the first experiment doesn‚Äôt look too promising."},"mention-of":"https://bofh.org.uk/note/13/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/note/13/"}}],"repost-of":[],"other":[]},"/2003/08/01/the-fine-art-of-complexity-management/":{"like-of":[],"in-reply-to":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://fed.brid.gy","published":"2025-09-20T09:59:00","wm-received":"2025-09-20T10:02:06Z","wm-id":1941118,"wm-source":"https://bofh.org.uk/note/15/index.html","wm-target":"https://bofh.org.uk/2003/08/01/the-fine-art-of-complexity-management/","wm-protocol":"webmention","content":{"html":"<p>For‚Ä¶ reasons, I found myself trawling back through the early entries here and found that a bunch of them had been truncated at some point in the blog‚Äôs history of migrating from engine to engine. Luckily, the <a href=\"https://web.archive.org/\">Wayback Machine</a> has a sufficiently complete archive, so I‚Äôm slowly working my way through the broken posts, bringing them into the big old <code>Content.org</code> file that the site‚Äôs generated from and adding a margin note or two to supply a bit of 2025 context where appropriate. <a href=\"https://bofh.org.uk/2003/08/01/the-fine-art-of-complexity-management/\">The Fine Art of Complexity Management</a> is the first post to receive such attention. Twenty two years on, I still think it‚Äôs good advice.</p>","text":"For‚Ä¶ reasons, I found myself trawling back through the early entries here and found that a bunch of them had been truncated at some point in the blog‚Äôs history of migrating from engine to engine. Luckily, the Wayback Machine has a sufficiently complete archive, so I‚Äôm slowly working my way through the broken posts, bringing them into the big old Content.org file that the site‚Äôs generated from and adding a margin note or two to supply a bit of 2025 context where appropriate. The Fine Art of Complexity Management is the first post to receive such attention. Twenty two years on, I still think it‚Äôs good advice."},"in-reply-to":"https://bofh.org.uk/2003/08/01/the-fine-art-of-complexity-management/","wm-property":"in-reply-to","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/note/15/"}}],"mention-of":[],"repost-of":[],"other":[]},"/book/a-wizard-of-earthsea/":{"like-of":[],"in-reply-to":[],"mention-of":[{"type":"entry","author":{"type":"card","name":"Piers Cawley","photo":"https://avatars.webmention.io/bofh.org.uk/702c697fbf9e023e9d3edb0398f018ba77aa9eabdf6ccd880bab199551266fd2.jpg","url":""},"url":"https://bofh.org.uk/book/a-wizard-of-earthsea/","published":"2019-05-30T00:00:00","wm-received":"2025-09-21T08:05:19Z","wm-id":1941314,"wm-source":"https://bofh.org.uk/book/a-wizard-of-earthsea/index.html","wm-target":"https://bofh.org.uk/book/a-wizard-of-earthsea/","wm-protocol":"webmention","name":", by","summary":{"content-type":"text/plain","value":"This was the first.\nBefore I read Tolkien at the suggestion of the wonderful Miss Reese, my teacher for my last year of primary school; before I pulled Diana Wynne Jones, Alan Garner, Susan Cooper and others from the shelves of Bawtry‚Äôs small, but enchanting branch library; before Anne McCaffrey‚Äôs DragonSong found me in my school library and set a fire in my imagination. Before all that, I read A Wizard of Earthsea and it stuck with me."},"content":{"html":"<p>This was the first.</p><p>Before I read Tolkien at the suggestion of the wonderful Miss Reese, my teacher for my last year of primary school; before I pulled Diana Wynne Jones, Alan Garner, Susan Cooper and others from the shelves of Bawtry‚Äôs small, but enchanting branch library; before Anne McCaffrey‚Äôs DragonSong found me in my school library and set a fire in my imagination. Before all that, I read <em>A Wizard of Earthsea</em> and it stuck with me.</p><p>I remember one Saturday with 50p in my pocket from singing for a couple of weddings at St George‚Äôs church in Doncaster (25p for each wedding, paid cash in hand on the day. It always felt like a bonus after singing Bach‚Äôs <em>Jesu Joy of Man‚Äôs Desiring</em> in the side chapel as the register was signed in the vestry and Magnus Black, the choir and organmaster, brought that beautiful tune dancing with such delicacy from in instrument that would shake the walls later as the happy couple left the church to Vidor‚Äôs toccata and fugue).\n</p><p>That was if we were lucky. It was usually Mendelssohn ‚Äì not bad, Magnus was far too good an organist for it to sound dull, but not a patch on Vidor.</p>\nI was never one for saving, I‚Äôm still not, so I was straight round to Donny‚Äôs nearest thing to a bookshop, the WH Smith in the Arndale in search of something to read. A voracious reader, I‚Äôd gone through all the <em>Swallows and Amazons</em> and <em>Narnia</em> books and I needed more. The cover of the second Puffin edition, with its white youth and bizzare half man half hawk fascinated me, so I handed over my 50p\n<p>The bibliography I found tells me that it probably cost 35p, so I no doubt bought a load of sweets as well ‚Äì books and sugar have always been my vices.</p>\nand headed home with my prize.<p>I read <em>A Wizard of Earthsea</em> once or twice and loved it, but I‚Äôve not reread it since. As a kid, I borrowed rest of the then trilogy from the library and found them rather hard going at (my memory says that I found <em>The Tombs of Atuan</em> a real slog. I got through it, but it took a couple of goes and at least one renewal to get to the end). A few weeks ago though, I went to the <a href=\"https://www.soundpost.org.uk/\">Sound Post</a> ‚ÄòModern Fairies‚Äô singing weekend and fell into conversation with <a href=\"https://terriwindling.com\">Terri Windling</a> about the books that had shaped me and I told her about my experience with the Earthsea trilogy and I thought maybe I‚Äôd been a little too young for them (I think I was eight or nine when I read AWoE, and maybe twelve when I read <em>The Tombs of Atuan</em> and <em>The Furthest Shore</em>). I hadn‚Äôt revisted them since. Terri made me promise to reread them and to let her know what I thought. So that‚Äôs what I‚Äôm doing. Terri, this book report‚Äôs for you. I owe you a few more and I promise I‚Äôll get to them.</p><p>By the way, if you‚Äôve never read <em>A Wizard of Earthsea,</em> there will be spoilers in this article. Read the book before continuing. It shouldn‚Äôt take you long, and it‚Äôs well worth the time.</p><p>It‚Äôs not so much what happens in this story as the way it‚Äôs told that left its impression on me. Earthsea is made of words ‚Äì all stories are, of course ‚Äì sung into being by Segoy. Words are power. A wizard spends a large part of his\n</p><p>The wizards are all men. There are female witches in the story, but at this stage of the tale they‚Äôre definitely underpowered and untrustworthy compared to the men. Le Guin fixes this later.</p>\neducation learning the ‚Äúthe Deeds of heroes and the Lays of wisdom‚Äù and year under the Master Namer just learning the true names of things in the Old Speech: the language of dragons; the language in which the world was made. In the period when the book is set, there is written language, but I get the feeling that it‚Äôs very much the preserve of the wise. Songs, orally transmitted, are how the people of the archipelago hold their history and Le Guin‚Äôs language reflects that. Every sentence seems to have been shaped to be spoken, and beautifully so. I kept stopping and reading passages out because the words were just so‚Ä¶ right.<p>I sometimes wonder who the tale‚Äôs narrator is telling the story to. It‚Äôs a question that can break a lot of first person SF and exposes lazy storytelling. If a book that‚Äôs supposedly the product of a completely different culture or time feels like it‚Äôs written for an early 21st century reader, it breaks the book for me.\n</p><p>Sometimes I don‚Äôt care though. God alone knows why Bertie Wooster is telling the Jeeves stories, or who he‚Äôs telling them too ‚Äì I‚Äôm just very glad he‚Äôs chosen to tell them at all.</p>\nThe language and idiom of <em>A Wizard of Earthsea</em> seem entirely right and consistent. We learn so much about the world as Ged‚Äôs story is told from things mentioned in passing. We know that this happened a long time ago and it‚Äôs assumed we already know about <em>The Deed of Ged</em>, <em>The Creation of Ea</em> and all the other songs, deeds and festivals that are referred to in passing through the book. At the end we are told that no songs have survived that tell how Ged came to terms with his shadow ‚Äì the entire book is a footnote in a much larger story that‚Äôs just out of reach. I‚Äôm reminded of the fact that we only have the Norse myths we know because an ancient Icelander worried that readers wouldn‚Äôt recognize the allusions in the sagas and eddas, so they wrote down the bones of the older stories to help future readers understand. If Le Guin had left Earthsea at this point, all we would know of Earthsea would be the glimpses of it in this story. And what glimpses they are.<p>You can find echoes <em>A Wizard of Earthsea</em> in so much subsequent fantasy literature. The possibility of a wizard being trapped in another, for instance. Pratchett plays with and develops this in the <em>Witches</em> sequence of Discworld books, for instance. I loved this sentence though: ‚ÄúAnd no one knows how many of the dolphins that leap in the waters of the Inmost Sea were men once, wise men, who forgot their wisdom and their name in the joy of the restless sea.‚Äù If I had the power to become a dolphin I wouldn‚Äôt be keen to return to the body of a fat 51 year old with diabetes and a bunch of aches and pains that I try not to think about. You can keep your wisdom sometimes.</p><p>As a kid, I didn‚Äôt really understand what was going on with Ged and his Shadow. It was easy to see myself in the ever noticed that he didn‚Äôt have the same colour skin as me). I loved learning and especially <em>knowing</em>. It wasn‚Äôt hard to take my undoubtedly superior intelligence\n</p><p>Yeah. I know. I must have been insufferable as a kid (and an adult, if I‚Äôm honest). First to stick their hand up in every class. Happy to ‚ÄúWell, actually‚Ä¶‚Äù at every opportunity.</p>\nas analogous to a wizard‚Äôs power. Then, though, the shape of the story confused me, especially the ending. Ged and his friend sail off the page. The sea becomes land. Ged steps off the boat and confronts the Shadow, addressing it with his own name. And the shadow disappears/merges with Ged. And they all live on to do the Deeds which are sung of them. What? Nine year old me had no <em>idea</em> what was going on there, but the imagery stuck.<p>Now, of course, it all seems a clearer. Thesis. Antithesis. Synthesis. Ged does a terrible thing in his ignorance and pride. In shame he runs from it, almost losing his humanity in the process. He is tempted by a dark power, but rejects it. A friend and teacher restores him to himself and tells him that running is the sure road to doom. He turns and chases his Shadow instead. Finally he comes to an acceptance that the Shadow is a part of himself and by giving it his name he reintegrates that part into himself and finally becomes a whole man. There you go ‚Äì no need to read the book now.</p><p>Of course you need to read this book. It‚Äôs language sings and the places and people it evokes are beautifully drawn. Rereading this after more than 30 years, so much was familiar. I would have said I‚Äôd forgotten almost all of it but the bare outline of the story and a few character names, but that stuff clearly went in deep and helped make me myself because as I read, the whole shape of the thing unfolded in my head. It was almost like recognising roads and pathways in a place you holidayed repeatedly as a kid, then didn‚Äôt return for 20 years. Familiar and surprising at the same time. ‚ÄúOh yeah, that‚Äôs where Daniel used to live! And do you remember walking up there to buy ice creams at the village shop? Oh! I‚Äôd forgotten this view!‚Äù</p><p>Right‚Ä¶ onwards to <em>The Tombs of Atuan.</em></p>","text":"This was the first.\n\nBefore I read Tolkien at the suggestion of the wonderful Miss Reese, my teacher for my last year of primary school; before I pulled Diana Wynne Jones, Alan Garner, Susan Cooper and others from the shelves of Bawtry‚Äôs small, but enchanting branch library; before Anne McCaffrey‚Äôs DragonSong found me in my school library and set a fire in my imagination. Before all that, I read A Wizard of Earthsea and it stuck with me.\n\nI remember one Saturday with 50p in my pocket from singing for a couple of weddings at St George‚Äôs church in Doncaster (25p for each wedding, paid cash in hand on the day. It always felt like a bonus after singing Bach‚Äôs Jesu Joy of Man‚Äôs Desiring in the side chapel as the register was signed in the vestry and Magnus Black, the choir and organmaster, brought that beautiful tune dancing with such delicacy from in instrument that would shake the walls later as the happy couple left the church to Vidor‚Äôs toccata and fugue).\n\n\nThat was if we were lucky. It was usually Mendelssohn ‚Äì not bad, Magnus was far too good an organist for it to sound dull, but not a patch on Vidor.\nI was never one for saving, I‚Äôm still not, so I was straight round to Donny‚Äôs nearest thing to a bookshop, the WH Smith in the Arndale in search of something to read. A voracious reader, I‚Äôd gone through all the Swallows and Amazons and Narnia books and I needed more. The cover of the second Puffin edition, with its white youth and bizzare half man half hawk fascinated me, so I handed over my 50p\nThe bibliography I found tells me that it probably cost 35p, so I no doubt bought a load of sweets as well ‚Äì books and sugar have always been my vices.\nand headed home with my prize.I read A Wizard of Earthsea once or twice and loved it, but I‚Äôve not reread it since. As a kid, I borrowed rest of the then trilogy from the library and found them rather hard going at (my memory says that I found The Tombs of Atuan a real slog. I got through it, but it took a couple of goes and at least one renewal to get to the end). A few weeks ago though, I went to the Sound Post ‚ÄòModern Fairies‚Äô singing weekend and fell into conversation with Terri Windling about the books that had shaped me and I told her about my experience with the Earthsea trilogy and I thought maybe I‚Äôd been a little too young for them (I think I was eight or nine when I read AWoE, and maybe twelve when I read The Tombs of Atuan and The Furthest Shore). I hadn‚Äôt revisted them since. Terri made me promise to reread them and to let her know what I thought. So that‚Äôs what I‚Äôm doing. Terri, this book report‚Äôs for you. I owe you a few more and I promise I‚Äôll get to them.\n\nBy the way, if you‚Äôve never read A Wizard of Earthsea, there will be spoilers in this article. Read the book before continuing. It shouldn‚Äôt take you long, and it‚Äôs well worth the time.\n\nIt‚Äôs not so much what happens in this story as the way it‚Äôs told that left its impression on me. Earthsea is made of words ‚Äì all stories are, of course ‚Äì sung into being by Segoy. Words are power. A wizard spends a large part of his\n\n\nThe wizards are all men. There are female witches in the story, but at this stage of the tale they‚Äôre definitely underpowered and untrustworthy compared to the men. Le Guin fixes this later.\neducation learning the ‚Äúthe Deeds of heroes and the Lays of wisdom‚Äù and year under the Master Namer just learning the true names of things in the Old Speech: the language of dragons; the language in which the world was made. In the period when the book is set, there is written language, but I get the feeling that it‚Äôs very much the preserve of the wise. Songs, orally transmitted, are how the people of the archipelago hold their history and Le Guin‚Äôs language reflects that. Every sentence seems to have been shaped to be spoken, and beautifully so. I kept stopping and reading passages out because the words were just so‚Ä¶ right.I sometimes wonder who the tale‚Äôs narrator is telling the story to. It‚Äôs a question that can break a lot of first person SF and exposes lazy storytelling. If a book that‚Äôs supposedly the product of a completely different culture or time feels like it‚Äôs written for an early 21st century reader, it breaks the book for me.\n\n\nSometimes I don‚Äôt care though. God alone knows why Bertie Wooster is telling the Jeeves stories, or who he‚Äôs telling them too ‚Äì I‚Äôm just very glad he‚Äôs chosen to tell them at all.\nThe language and idiom of A Wizard of Earthsea seem entirely right and consistent. We learn so much about the world as Ged‚Äôs story is told from things mentioned in passing. We know that this happened a long time ago and it‚Äôs assumed we already know about The Deed of Ged, The Creation of Ea and all the other songs, deeds and festivals that are referred to in passing through the book. At the end we are told that no songs have survived that tell how Ged came to terms with his shadow ‚Äì the entire book is a footnote in a much larger story that‚Äôs just out of reach. I‚Äôm reminded of the fact that we only have the Norse myths we know because an ancient Icelander worried that readers wouldn‚Äôt recognize the allusions in the sagas and eddas, so they wrote down the bones of the older stories to help future readers understand. If Le Guin had left Earthsea at this point, all we would know of Earthsea would be the glimpses of it in this story. And what glimpses they are.You can find echoes A Wizard of Earthsea in so much subsequent fantasy literature. The possibility of a wizard being trapped in another, for instance. Pratchett plays with and develops this in the Witches sequence of Discworld books, for instance. I loved this sentence though: ‚ÄúAnd no one knows how many of the dolphins that leap in the waters of the Inmost Sea were men once, wise men, who forgot their wisdom and their name in the joy of the restless sea.‚Äù If I had the power to become a dolphin I wouldn‚Äôt be keen to return to the body of a fat 51 year old with diabetes and a bunch of aches and pains that I try not to think about. You can keep your wisdom sometimes.\n\nAs a kid, I didn‚Äôt really understand what was going on with Ged and his Shadow. It was easy to see myself in the ever noticed that he didn‚Äôt have the same colour skin as me). I loved learning and especially knowing. It wasn‚Äôt hard to take my undoubtedly superior intelligence\n\n\nYeah. I know. I must have been insufferable as a kid (and an adult, if I‚Äôm honest). First to stick their hand up in every class. Happy to ‚ÄúWell, actually‚Ä¶‚Äù at every opportunity.\nas analogous to a wizard‚Äôs power. Then, though, the shape of the story confused me, especially the ending. Ged and his friend sail off the page. The sea becomes land. Ged steps off the boat and confronts the Shadow, addressing it with his own name. And the shadow disappears/merges with Ged. And they all live on to do the Deeds which are sung of them. What? Nine year old me had no idea what was going on there, but the imagery stuck.Now, of course, it all seems a clearer. Thesis. Antithesis. Synthesis. Ged does a terrible thing in his ignorance and pride. In shame he runs from it, almost losing his humanity in the process. He is tempted by a dark power, but rejects it. A friend and teacher restores him to himself and tells him that running is the sure road to doom. He turns and chases his Shadow instead. Finally he comes to an acceptance that the Shadow is a part of himself and by giving it his name he reintegrates that part into himself and finally becomes a whole man. There you go ‚Äì no need to read the book now.\n\nOf course you need to read this book. It‚Äôs language sings and the places and people it evokes are beautifully drawn. Rereading this after more than 30 years, so much was familiar. I would have said I‚Äôd forgotten almost all of it but the bare outline of the story and a few character names, but that stuff clearly went in deep and helped make me myself because as I read, the whole shape of the thing unfolded in my head. It was almost like recognising roads and pathways in a place you holidayed repeatedly as a kid, then didn‚Äôt return for 20 years. Familiar and surprising at the same time. ‚ÄúOh yeah, that‚Äôs where Daniel used to live! And do you remember walking up there to buy ice creams at the village shop? Oh! I‚Äôd forgotten this view!‚Äù\n\nRight‚Ä¶ onwards to The Tombs of Atuan."},"mention-of":"https://bofh.org.uk/book/a-wizard-of-earthsea/","wm-property":"mention-of","wm-private":false,"rels":{"canonical":"https://bofh.org.uk/book/a-wizard-of-earthsea/"}}],"repost-of":[],"other":[]}}